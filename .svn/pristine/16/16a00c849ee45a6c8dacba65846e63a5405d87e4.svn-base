<template>
    <div class="fillcontain">
        <ul class="menu">
            <li v-if="getMenuAuthFun('stallManage')">
                <router-link :to='{path:"/stallManage"}'>档口管理</router-link>
            </li>
            <li v-if="getMenuAuthFun('stallSettlement')">
                <router-link :to='{path:"/stallSettlement"}'>档口结算</router-link>
            </li>
            <li class="menuIndex2" v-if="getMenuAuthFun('SettlementRecords')">
                <router-link :to='{path:"/SettlementRecords"}'>结算单</router-link>
            </li>
        </ul>
        <div class="sellerSettlement">
            <div class="sellerTop">
                <el-select
                    v-model="otherSideCompanyName"
                    filterable
                    remote
                    reserve-keyword
                    placeholder="请输入档口名称"
                    :remote-method="remoteMethod"
                    :loading="loading"
                    @change="handleIconClickName">
                    <el-option
                        v-for="item in options4"
                        :key="item.stallCompanyId"
                        :label="item.name"
                        :value="item.stallCompanyId">
                    </el-option>
                </el-select>
                <el-select v-model="value" placeholder="结算方式" @change="changeSettlementType">
                    <el-option
                        v-for="item in options"
                        :key="item.value"
                        :label="item.label"
                        :value="item.value">
                    </el-option>
                </el-select>
                <el-select v-model="balanceType" placeholder="请选择收支方式" @change="changeBalanceType">
                    <el-option
                        v-for="item in types"
                        :key="item.value2"
                        :label="item.label"
                        :value="item.value2">
                    </el-option>
                </el-select>
            </div>
            <div style="margin-top: 20px;">
                <el-radio-group v-model="radio" size="small" class="radioRed" @change="changeStatus">
                    <el-radio-button label="-1">全部</el-radio-button>
                    <el-radio-button label="0">等待付款</el-radio-button>
                    <el-radio-button label="4">付款中</el-radio-button>
                    <el-radio-button label="1">付款成功</el-radio-button>
                    <el-radio-button label="2">付款失败</el-radio-button>
                    <el-radio-button label="3">已关闭</el-radio-button>
                </el-radio-group>
            </div>
            <div class="sellerTable" style="height:400px;overflow: scroll;">
                <el-table
                    :data="tableData3"
                    style="width: 100%;">
                    <el-table-column
                        prop="otherSideCompanyName"
                        label="档口名称"
                        width="180">
                    </el-table-column>
                    <el-table-column
                        prop="actualPayFee"
                        label="结算金额">
                        <template scope="scope">{{scope.row.actualPayFee.toFixed(2)}}</template>
                    </el-table-column>
                    <el-table-column
                         prop="type"
                         label="收支类型">
                        <template scope="scope">
                            {{scope.row.type==1||scope.row.type==11?'收款':scope.row.type==2||scope.row.type==22?'付款':''}}
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="status"
                        label="结算状态">
                        <template scope="scope">
                            <p>{{scope.row.status==0?'等待付款':scope.row.status==1?'付款成功':scope.row.status==2?'付款失败':scope.row.status==3?'已关闭':scope.row.status==4?'付款中':''}}</p>
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="settlementType"
                        label="结算方式">
                        <template scope="scope">
                            <p>{{scope.row.settlementType==1?'单订单结算':scope.row.settlementType==2?'多订单合并':''}}</p>
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="actualPayFeeType"
                        label="结算账户类型">
                        <template scope="scope">
                            <p>{{scope.row.actualPayFeeType==1?'余额':scope.row.actualPayFeeType==3?'支付宝':scope.row.actualPayFeeType==4?'微信':scope.row.actualPayFeeType==5?'银行卡':''}}</p>
                        </template>
                    </el-table-column>
                    <el-table-column
                        width="150"
                        label="结算时间">
                        <template scope="scope">{{scope.row.updateTime==undefined?formatDate(scope.row.createTime):formatDate(scope.row.updateTime)}}</template>
                    </el-table-column>
                    <el-table-column
                        width="300"
                        label="操作">
                        <template scope="scope">
                            <div class="flex stallOperation">
                                <el-button class="red" type="text" style="margin-right:10px;" @click="quickSettlementLink(scope.row.otherSideCompanyId,scope.row.id,scope.row.type,scope.row.status)">立即结算</el-button>
                                <router-link :to='{path:"/orderFinancialDetails",query:{settlementOrderId:scope.row.id}}' v-if="(scope.row.status==1||scope.row.status==4)&&(scope.row.type==1||scope.row.type==11)">查看凭证</router-link>
                                <router-link :to='{path:"/stallSettlementDetails",query:{backPath:"/SettlementRecords",otherSideCompanyId:scope.row.otherSideCompanyId,settlementOrderId:scope.row.id}}'>查看详情</router-link>
                                <el-button v-if="scope.row.status==4&&scope.row.type==1" class="red"  type="text" @click="confirmSettlementOrder(scope.row.id)">审核通过</el-button>
                                <el-button v-if="scope.row.status==4&&scope.row.type==1" class="red"  type="text" @click="confirmNSettlementOrder(scope.row.id)">审核不通过</el-button>
                            </div>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
            <el-pagination
                small
                class="right"
                style="margin-top: 20px;"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-size="pageSize"
                layout="total, prev, pager, next, jumper"
                :total="totalCount">
            </el-pagination>
            <a href="javascript:void(0)" class="export_excle" @click="exportTableData">导出excel</a>

        </div>
    </div>
</template>

<script>
    import {querySettlementOrder,queryVmStall,confirmSettlementOrder} from '@/api/getData'
    import {userInfo,getStore,setStore} from  '../config/mUtils'
    import {formatDate} from '../utils/date.js'
    import {getMenuAuth} from  '../utils/AuthMenu.js'

    export default {
        data() {
            return {
                input:'',
                radio:-1,
                options: [{
                    value: '1',
                    label: '单订单结算'
                }, {
                    value: '2',
                    label: '多订单结算'
                }],
                types:[
                    {
                        value2:'1',
                        label:'收款'
                    },
                    {
                        value2:'22',
                        label:'付款'
                    }
                ],
                value: '',
                tableData3:[],
                currentPage:1,
                pageSize:10,
                totalCount:0,
                roleForm: {
                    userId: '',
                    roleId: '',
                    compId:''
                },
                status:'',
                otherSideCompanyName:'',
                loading:false,
                options4:[],
                balanceType:''
            }
        },
        mounted(){
            this.saleCompanyId = this.$route.query.saleCompanyId;
            this.roleForm.userId = userInfo().userId;
            this.roleForm.compId = userInfo().companyId;

            let param = {
                "status":this.getStatus(),
                "type":this.balanceType,
                "companyId":userInfo().companyId,
                "otherSideCompanyId":this.otherSideCompanyName,
                "settlementType":this.value,
                "pageIndex":this.currentPage,
                "pageSize":this.pageSize
            };
            this.initData(param);
        },
        methods: {
        	getMenuAuthFun(index){
                var b= getMenuAuth(index);
                return b;
            },
            handleCurrentChange(val) {
                this.currentPage = val;
                let param = {
                    "status":this.getStatus(),
                    "type":this.balanceType,
                    "companyId":userInfo().companyId,
                    "otherSideCompanyId":this.otherSideCompanyName,
                    "settlementType":this.value,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                this.initData(param);
            },
            //加载初始数据
            async initData(param){
                const res = await querySettlementOrder(param);
                if(res.isSuccess){
                    this.tableData3 = [];
                    let table = res.result.results;
                    table.forEach((obj)=>{
                        this.tableData3.push(obj);
                    });
                    this.totalCount = res.result.totalCount;
                }
            },
            //远程搜索模糊查询档口名称
            async remoteMethod(query){
                if(query!=''){
                    this.loading = true;
                    let param = {
                        "companyId":userInfo().companyId,
                        "stallName":query,
                        "pageIndex":1,
                        "pageSize":100
                    };
                    const res = await queryVmStall(param);
                    setTimeout(() => {
                        this.loading = false;
                        this.options4 = res.result.results;
                    }, 200);
                } else {
                    this.options4 = [];
                }

            },
            //档口名称搜索
            handleIconClickName(){
                let param = {
                    "companyId":userInfo().companyId,
                    "otherSideCompanyId":this.otherSideCompanyName,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                this.initData(param);
            },
            //按结算方式查找
            changeSettlementType(){
                let param = {
                    "settlementType":this.value,
                    "companyId":userInfo().companyId,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                this.initData(param);
            },

            //根据收支方式搜索
            async changeBalanceType(){
                let param = {
                    "type":this.balanceType,
                    "companyId":userInfo().companyId,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                this.initData(param);
            },

            //获取状态
            getStatus(){
                if(this.radio=='-1'){
                    this.status = '';
                }else{
                    this.status = this.radio;
                }
                return this.status;
            },

            //状态搜索
            changeStatus(){
                let param = {
                    "status":this.getStatus(),
                    "companyId":userInfo().companyId,
                    "otherSideCompanyId":this.saleCompanyId,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                this.initData(param);
            },

            //按结算方式搜索
            changeSettlementType(){
                let param = {
                    "settlementType":this.value,
                    "companyId":userInfo().companyId,
                    "otherSideCompanyId":this.saleCompanyId,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                this.initData(param);
            },

            //立即结算
            quickSettlementLink(otherSideCompanyId,id,type,status){
                if(type==1||type==11){
                    this.$message({
                        type:'info',
                        message:'当前为收款类型，不可结算'
                    });
                    return;
                }else if(type==22&&status==0){
                    this.$router.push({path:"/stallSettlementImmediately",query:{backPath:"/SettlementRecords",saleCompanyId:otherSideCompanyId,settlementOrderId:id,type:type}});
                }else if(status!=0){
                    this.$message({
                        type:'info',
                        message:'当前结算单已结算，不可重复结算'
                    });
                }

            },

            //确认订单
            async confirmSettlementOrder(val){
                let param = {
                    "id":val,
                    "status":1
                };
                const res = await confirmSettlementOrder(param);
                if(res.isSuccess){
                    this.$message({
                        type:'info',
                        message:'已确认'
                    });
                }else{
                    this.$message({
                        type:'error',
                        message:'操作失败'
                    });
                }
            },
            //审核不通过
            async confirmNSettlementOrder(val){
                let param = {
                    "id":val,
                    "status":2
                };
                const res = await confirmSettlementOrder(param);
                if(res.isSuccess){
                    this.$message({
                        type:'info',
                        message:'已确认'
                    });
                }else{
                    this.$message({
                        type:'error',
                        message:'操作失败'
                    });
                }
            },


            //格式化时间
//            formatDate:function(row,column){
//                let data = row[column.property];
//                if(data==undefined||data==''){
//                    return '';
//                }
//                return formatDate(data*1,'yyyy-MM-dd hh:mm:ss');
//            },
            formatDate:function(val){
                if(val==undefined){
                    return '';
                }
                return formatDate(val*1,'yyyy-MM-dd hh:mm:ss');
            },
            exportTableData(){

            },
        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/sellerSettlement';
</style>
