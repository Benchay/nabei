<template>
    <div class="fillcontain">
        <ul class="menu">
            <li v-if="getMenuAuthFun('stallManage')">
                <router-link :to='{path:"/stallManage"}'>档口管理</router-link>
            </li>
            <li class="menuIndex2" v-if="getMenuAuthFun('stallSettlement')">
                <router-link :to='{path:"/stallSettlement"}'>档口结算</router-link>
            </li>
            <li v-if="getMenuAuthFun('SettlementRecords')">
                <router-link :to='{path:"/SettlementRecords"}'>结算单</router-link>
            </li>
        </ul>
        <div class="sellerSettlement">
            <router-link :to='{path:"/stallSettlement"}' class="comeBack2 right">返回</router-link>
            <div class="details" >
                <el-col :span="24">
                    <el-col :span="24">档口名称：{{otherSideCompanyName}}</el-col>
                    <el-col :span="6">当前总欠款：{{unClosedFee==undefined||unClosedFee==''?0.00:unClosedFee.toFixed(2)}}</el-col>
                    <el-col :span="18">
                        <div  class="flex" v-for="list in info">
                            <p v-bind:class="[list.state ==0?'style1':list.state ==1?'style1':list.state ==2?'style2':'']">{{list.state == 0?'现结':list.state == 1?'周结':list.state == 2?'月结':''}}</p>
                            <p>{{list.date}}</p>
                        </div>
                    </el-col>
                    <el-col :span="6">已到期：{{toReviceFee==undefined||toReviceFee==''?0.00:toReviceFee.toFixed(2)}}</el-col>
                    <el-col :span="18">未到期：{{this.setUndueFee()}}</el-col>
                </el-col>
            </div>
            <div class="detailsTable">
                <p class="tableTop">结算记录：</p>
                <el-table
                    :data="tableData6">
                    <el-table-column
                        prop="actualPayFeeType"
                        label="支付类型">
                        <template scope="scope">
                            {{scope.row.actualPayFeeType==1?'余额':scope.row.actualPayFeeType==3?'支付宝':scope.row.actualPayFeeType==4?'微信':scope.row.actualPayFeeType==5?'银行卡':''}}
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="payAcount"
                        label="支付账户">
                    </el-table-column>
                    <el-table-column
                        prop="actualPayFee"
                        label="结算金额">
                        <template scope="scope">{{scope.row.actualPayFee.toFixed(2)}}</template>
                    </el-table-column>
                    <el-table-column
                        prop="createTime"
                        label="结算时间"
                        :formatter="formatDateInfo">
                    </el-table-column>
                    <el-table-column
                        prop="status"
                        label="结算状态">
                        <template scope="scope">
                            <p>{{scope.row.status ==0?'等待付款':scope.row.status ==1?'付款成功':scope.row.status ==2?'付款失败':scope.row.status ==3?'已关闭':scope.row.status==4?'付款中':''}}</p>
                        </template>
                    </el-table-column>
                </el-table>
                <el-pagination
                    small
                    class="right"
                    style="margin-top: 20px;"
                    @current-change="handleCurrentChange"
                    :current-page="currentPage"
                    :page-size="pageSize"
                    layout="total, prev, pager, next, jumper"
                    :total="totalCount">
                </el-pagination>
            </div>
            <div style="height:160px;">
                &nbsp;
            </div>
        </div>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {formatDate} from '../utils/date.js'
    import {userInfo} from '../config/mUtils.js'
    import {querySettlementOrder,querySettlementDay} from '@/api/getData'
    import {getMenuAuth} from  '../utils/AuthMenu.js'

    export default {
        components: {
            headTop,
        },
        data() {
            return {
                checked:false,
                info:[],
                tableData6:[{
                    payType:'支付宝',
                    account:13479896431,
                    sum:555,
                    status:1,
                    date:'2017-02-11'
                },{
                    payType:'微信',
                    account:'163123@163.com',
                    sum:555,
                    status:2,
                    date:'2017-02-11'
                },{
                    payType:'网银',
                    account:6222021302315405,
                    sum:555,
                    status:3,
                    date:'2017-02-11'
                }],
                unClosedFee:0,
                toReviceFee:0,
                otherSideCompanyId:'',
                otherSideCompanyName:'',
                currentPage:1,
                pageSize:10,
                totalCount:0,

            }
        },
        watch:{
            'route':function (route) {
                this.$route.go(0);
            }
        },
        mounted(){
            this.otherSideCompanyId = this.$route.query.otherSideCompanyId;
            this.otherSideCompanyName = this.$route.query.otherSideCompanyName;
            this.unClosedFee = this.$route.query.unClosedFee;
            this.toReviceFee = this.$route.query.toReviceFee;

            this.querySettlementDay();//查询结算日

            this.querySettlementOrderInfo();
        },
        methods: {
        	getMenuAuthFun(index){
                var b= getMenuAuth(index);
                return b;
            },

            async querySettlementDay(){
                let param = {
                    params:{"companyId":this.otherSideCompanyId,
                        "settlementCompanyId":userInfo().companyId},
                    pageIndex:1,
                    pageSize:1
                };
                const res = await querySettlementDay(param);
                if(res.isSuccess){
                    var settlementDay = '';
                    if(res.result.results[0].settlementType==1){
                        var day = res.result.results[0].settlementDay;
                        if(day==1){
                            settlementDay = '周一';
                        }else if(day==2){
                            settlementDay = '周二';
                        }else if(day==3){
                            settlementDay = '周三';
                        }else if(day==4){
                            settlementDay = '周四';
                        }else if(day==5){
                            settlementDay = '周五';
                        }else if(day==6){
                            settlementDay = '周六';
                        }else if(day==7){
                            settlementDay = '周日';
                        }

                    }else if(res.result.results[0].settlementType==2){
                        settlementDay = res.result.results[0].settlementDay + '号';
                    }

                    let pa = {
                        state:res.result.results[0].settlementType,
                        date:settlementDay
                    };
                    this.info.push(pa);
                }
            },

            handleCurrentChange(val){
                this.currentPage = val;
                this.querySettlementOrderInfo();
            },

            //获取未结算金额
            setUndueFee(){
                if(this.toReviceFee==undefined||this.toReviceFee==''){
                    this.toReviceFee = 0;
                }
                return (this.unClosedFee*1 - this.toReviceFee*1).toFixed(2);
            },
            //加载结算单记录
            async querySettlementOrderInfo(){
                if(this.otherSideCompanyId==undefined||this.otherSideCompanyId==''){
                    this.$message({
                        type:'info',
                        message:'无数据'
                    });
                    return;
                }

                let param = {
                    "companyId":userInfo().companyId,
                    "otherSideCompanyId":this.otherSideCompanyId,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                };
                const res = await querySettlementOrder(param);
                if(res.isSuccess){
                    this.tableData6 = res.result.results;
                    this.totalCount = res.result.totalCount;
                }
            },
            //格式化时间
            formatDateInfo:function(row,column){
                let data = row[column.property];
                if(data==undefined||data==''){
                    return '';
                }
                return formatDate(data*1,'yyyy-MM-dd hh:mm:ss');
            },
        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/sellerSettlement';
</style>
