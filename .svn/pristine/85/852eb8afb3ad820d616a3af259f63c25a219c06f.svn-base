<template>
    <div class="fillcontain">
        <ul :class="[identity ==1 ?'stallShareMenu':identity ==2 ?'sellerShareMenu':'']">
            <li>
                <router-link :to='{path:"/manageRole"}'>角色管理</router-link>
            </li>
            <li class="ListMenu">
                <router-link :to='{path:"/manageStaff"}'>员工管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/basicInformation"}'>基本资料</router-link>
            </li>
        </ul>
        <div class="staff-content">
            <div :class="[identity ==1 ?'stallShareMenu':identity ==2 ?'sellerShareMenu':'']" style="margin: 0;padding: 0;">
                <el-col :span="24">
                    <el-col :span="3">
                        <el-select v-model="value2" placeholder="用户状态" class="staff-status" @change="selectChangeEvent" size="small">
                            <el-option
                                v-for="item in staffOptionsss"
                                :key="item.value"
                                :label="item.label"
                                :value="item.value">
                            </el-option>
                        </el-select>
                    </el-col>
                    <el-col :span="3">
                        <el-select v-model="value" placeholder="选择角色" class="staff-status" @change="selectChangeEvent" size="small">
                            <el-option
                                v-for="item in staffOptionSearch"
                                :key="item.id"
                                :label="item.name"
                                :value="item.id">
                            </el-option>
                        </el-select>
                    </el-col>
                    <el-col :span="4">
                        <el-input
                            size="small"
                            placeholder="姓名"
                            icon="search"
                            v-model="inputName"
                            :on-icon-click="selectChangeEvent">
                        </el-input>
                    </el-col>
                    <el-input
                        size="small"
                        placeholder="手机号"
                        icon="search"
                        v-model="inputMobile"
                        style="width: 200px;margin-left: 40px"
                        :on-icon-click="selectChangeEvent">
                    </el-input>
                </el-col>
                <el-col :span="24" class="clear">
                    <div style="margin: 20px 0;padding-bottom: 15px;">
                        <el-col :span="24">
                            <a href="javascript:void(0)" @click="showNewUser" class="buttonColor11">+添加成员</a>
                            <a href="javascript:void(0)" class="buttonColor11">启用</a>
                            <a href="javascript:void(0)" class="buttonColor11">禁用</a>
                            <a href="javascript:void(0)" class="buttonColor11">删除</a>
                        </el-col>
                    <!--<el-col :span="20">
                        <el-select v-model="batchOperRole" placeholder="批量操作" class="staff-batch" @change="batchOperate" >
                            <el-option
                                v-for="item in staffOptionBatch"
                                :key="item.id"
                                :label="item.name"
                                :value="item.id">
                            </el-option>
                        </el-select>
                    </el-col>-->
                    </div>
                    <div class="staff_table">
                        <el-table
                            :data="tableData"
                            ref="staffTable"
                            @selection-change="handleSelectionChange">
                            <el-table-column
                                type="selection"
                                width="55">
                            </el-table-column>
                            <!--
                            <el-table-column
                                prop="id"
                                label="编号"
                                width="130">
                            </el-table-column>-->
                            <el-table-column
                                prop="userName"
                                label="用户名"
                                width="150">
                            </el-table-column>
                            <el-table-column
                                prop="nickName"
                                label="姓名"
                                width="150">
                            </el-table-column>
                            <el-table-column
                                prop="mobile"
                                label="手机号"
                                width="150">
                            </el-table-column>
                            <el-table-column
                                prop="roleName"
                                label="角色"
                                width="100">
                            </el-table-column>
                            <el-table-column
                                prop="createTime"
                                label="添加时间"
                                width="300"
                                :formatter="mydateFormat">
                            </el-table-column>
                            <el-table-column
                                prop="status"
                                label="状态"
                                width="70"
                                :formatter="formatStatus" >
                            </el-table-column>
                            <el-table-column label="操作">
                                <template scope="scope">
                                    <el-button
                                        size="small"
                                        @click="showEditRole(tableData[scope.$index])">编辑</el-button>
                                    <el-button
                                        size="small"
                                        @click="handleEdit(scope.$index, scope.row)">禁用</el-button>
                                    <el-button
                                        size="small"
                                        type="danger"
                                        @click.native.prevent="deleteRow(scope.$index)">删除</el-button>
                                </template>
                            </el-table-column>
                        </el-table>
                        <el-pagination
                            small
                            class="right"
                            style="margin-top: 20px;"
                            @size-change="handleSizeChange"
                            @current-change="handleCurrentChange"
                            :current-page="currentPage"
                            :page-sizes="[10, 20, 30, 40]"
                            :page-size="pagesize"
                            layout="total, sizes, prev, pager, next, jumper"
                            :total="totalCount">
                        </el-pagination>

                        <a href="javascript:void(0)" class="export_excle">导出excel</a>
                    </div>
                </el-col>
                <el-dialog title="添加成员" :visible.sync="dialogFormAdd">
                    <el-col :span="24" class="flex2 addradio" style="margin-top: -30px;">
                        <el-col :span="8">
                            <el-radio class="radio" v-model="radio" label="1">新用户</el-radio>
                        </el-col>
                        <el-col :span="9">
                            <el-radio class="radio" v-model="radio" label="2">已注册用户</el-radio>
                        </el-col>
                    </el-col>
                    <div v-show="this.radio==2"  style="overflow: hidden;width:100%;">
                        <el-col :span="24" class="flex" style="margin-left: 30px;">
                            <el-col :span="4">
                                请输入手机号：
                            </el-col>
                            <el-col :span="6">
                                <el-input v-model="searchMobileNub"></el-input>
                            </el-col>
                            <el-col :span="5" style="margin-left: 5px;">
                                <el-button type="info" @click="searchMobile">搜索</el-button>
                            </el-col>
                        </el-col>
                        <el-col :span="24" class="flex YGlist" v-show="YGlist">
                            <el-col :span="6" class="YGimg">
                                <img src="../image/shops@3x.png" alt="">
                            </el-col>
                            <el-col :span="6">
                                <p>{{this.searchMobileResultNub}}</p>
                            </el-col>
                        </el-col>
                    </div>
                    <el-form :model="form"  style="overflow: hidden;width:100%;" :rules="addNewRule" ref="refform">
                        <el-form-item prop="userName" label="用户名：" :label-width="formLabelWidth"  v-show="this.radio==1">
                            <el-input v-model="form.userName" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item prop="mobile" label="手机号：" :label-width="formLabelWidth"  v-show="this.radio==1">
                            <el-input v-model="form.mobile" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item prop="nickName" label="姓名：" :label-width="formLabelWidth" v-show="this.radio==1">
                            <el-input v-model="form.nickName" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item prop="password" label="密码：" :label-width="formLabelWidth" v-show="this.radio==1">
                            <el-input v-model="form.password" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item label="选择角色：" :label-width="formLabelWidth">
                            <div class="staffCheckbox">
                                <el-checkbox-group v-model="selectStaffOption">
                                    <el-checkbox v-for="item in staffOptions" :label="item.id" :key="item.id" style="width:30%;">{{item.name}}</el-checkbox>
                                </el-checkbox-group>
                                <div class="right">
                                    <a href="javascript:void(0)" v-show="isFalse" @click="toMore">更多▼</a>
                                    <a href="javascript:void(0)" v-show="isTure" @click="toMore">收起▲</a>
                                </div>
                            </div>
                        </el-form-item>
                    </el-form>
                    <div slot="footer" class="dialog-footer" style="margin-top: -30px;">
                        <el-button @click="cancalNewUser">取 消</el-button>
                        <el-button type="primary" @click="saveNewUser('refform')">确 定</el-button>
                    </div>
                </el-dialog>

                <el-dialog title="编辑" :visible.sync="dialogFormCompile">
                    <el-form :model="editForm" :rules="addNewRule" >
                        <el-form-item prop="userName" label="用户名：" :label-width="formLabelWidth">
                            <el-input v-model="editForm.userName" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item  prop="mobile" label="手机号：" :label-width="formLabelWidth">
                            <el-input v-model="editForm.mobile" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item prop="nickName" label="姓名：" :label-width="formLabelWidth">
                            <el-input v-model="editForm.nickName" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item prop="password" label="密码：" :label-width="formLabelWidth">
                            <el-input v-model="editForm.password" auto-complete="off" class="add-dialog"></el-input>
                        </el-form-item>
                        <el-form-item label="选择角色：" :label-width="formLabelWidth">
                            <div class="staffCheckbox">
                                <el-checkbox-group v-model="staffOptions_ids">
                                    <el-checkbox v-for="item in staffOptions" :label="item.id" :key="item.id" style="width:30%;">{{item.name}}</el-checkbox>
                                </el-checkbox-group>
                                <div class="right">
                                    <a href="javascript:void(0)" v-show="isFalse" @click="toMore">更多▼</a>
                                    <a href="javascript:void(0)" v-show="isTure" @click="toMore">收起▲</a>
                                </div>
                            </div>
                        </el-form-item>

                    </el-form>
                    <div slot="footer" class="dialog-footer">
                        <el-button @click="dialogFormCompile = false">取 消</el-button>
                        <el-button type="primary" @click="saveEditRole">确 定</el-button>
                    </div>
                </el-dialog>
            </div>
        </div>
    </div>
</template>

<script>
	import {mapActions, mapState} from 'vuex'
    import {saveRole,modifyStaffByUserId,getUserAuths,getUserRoles,queryRole,queryAuthsByRole,loadCompanyUserInfo,delUserCompany,addNewStaff,findUserByMobile,requestUserCompany,batchAddUserRoles,complateUserCompany } from '@/api/getData'
    import {setStore,getStore} from  '../config/mUtils'
    import {formatDate} from '../utils/date.js'
    import {mydateFormat} from '../utils/dataFormater.js'
    import {getCompanyType} from  '../utils/common'


    export default {
        data() {
            var validateUserName = (rule, value, cb) => {
                if (value === '') {
                    cb(new Error('请输入用户名'))
                }else if(value.trim().length>=10){
                    cb(new Error('用户名不能超过10个字符'))
                }else{
                	cb()
                }
            }
            var validateNickname = (rule, value, cb) => {
                if (value === '') {
                    cb(new Error('请输入姓名'))
                }else if(value.trim().length>=10){
                    cb(new Error('姓名不能超过10个字符'))
                }else{
                    cb()
                }
            }
            var validateUser = (rule, value, cb) => {
                value=value.trim();
                var pattern = /^1(3|4|5|7|8)\d{9}$/
                if (value === '') {
                    cb(new Error('请输入手机号'))
                }else if(value.indexOf(' ')>0 ){
                    cb(new Error('手机号不能有空格'))
                } else if (!pattern.test(value)) {
                    cb(new Error('请输入正确的11位数手机号'))
                } else {
                    cb()
                }
            }
            var validatePwd = (rule, value, cb) => {
                var pattern = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,16}$/
                if (value === '') {
                    cb(new Error('请输入密码'))
                }else if(value.indexOf(' ')>0 ){
                    cb(new Error('密码不能有空格'))
                } else if (!pattern.test(value)) {
                    cb(new Error('请输入6-16位数字和字母的组合'))
                } else {
                    cb()
                }
            }
            return {
                //1为档口、2为卖家身份
                identity:1,

                isTure:false,
                isFalse:true,
				roleForm: {
                    userId: '',
                    roleId: '',
                    compId:''
                },
                inputName:'',
                inputMobile:'',
                radio: '1',
                value5:'',
                activeIndex: '1',
                dialogInvite:false,
                YGlist:false,
                companyuserId:'',
                staffOptions:[],
                staffOptions_ids:[],
                selectStaffOption:[],
                staffOptionSearch: [],
                value: '',
                staffOptionBatch: [],
                batchOperRole: '',
                staffOptionsss: [ {
                	value:'',
                	label:'不限状态'
                },{
                    value: false,
                    label: '禁用'
                }, {
                    value: true,
                    label: '启用'
                }],
                value2: '',
                tableData: [],
                dialogFormAdd: false,
                form: {
				    nickName:'',
                    userName:'',
                    name: '',
                    mobile:'',
                    password:'',
                    region: '',
                    date1: '',
                    date2: '',
                    delivery: false,
                    type: [],
                    resource: '',
                    desc: ''
                },
                editForm:{
                    nickName:'',
                    userName:'',
                    mobile: '',
                    password:'',
                    region: '',
                },
				 pagesize: 10,
                //默认高亮行数据id
                highlightId: -1,
                //当前页码
                currentPage: 1,
                //查询的页码
                start: 1,
                //默认数据总数
                totalCount: 0,
                queryName:'',
                formLabelWidth: '120px',
                searchMobileNub:'',
                searchMobileResultNub:'',
                searchMobileResultUid:'',
                dialogFormCompile: false,
                addNewRule: {
                    userName:[
                        {validator:validateUserName,trigger:'blur'}
                    ],
				    nickName:[
                        {validator:validateNickname,trigger:'blur'}
                    ],
                    mobile: [
                        { validator: validateUser, trigger: 'blur' }
                    ],
                    password: [
                        { validator: validatePwd, trigger: 'blur' }
                    ]
                }
            }
        },
		mounted(){
            this.identity =getCompanyType(getStore("curCompany"));
            this.currentPage = 1;
            var userInfo=getStore("user_info_user");
            var vjson = JSON.parse(userInfo);
            this.roleForm.userId=vjson.id;
            var currentComp=getStore("curCompany");
            var vcom = JSON.parse(currentComp);
            this.roleForm.compId=vcom.id;
            //this.roleForm.compId=vjson.curCompany.id;
            //测试代码
            //this.roleForm.compId='2';
            //console.log(this.roleForm.userId);
            this.loadInit();
            this.getRoleData();
        },
        methods: {
            toMore(){
                this.isFalse = !this.isFalse;
                this.isTure =  !this.isTure;
            },
            handleSelect(key, keyPath) {
              //  console.log(key, keyPath);
            },
            //按输入姓名和手机号搜索
            handleIconClick(){
            	
            },
            async deleteRow(index) {
               // console.log(this.tableData[index]);
               var compuserid= this.tableData[index].id;
               const res = await delUserCompany({"userCompanyId":compuserid,"operUserId":this.roleForm.userId});
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '删除成功'
                    });
                    this.selectChangeEvent();
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
			loadInit(){
                this.currentPage = 1;
                let  param = {
                    "CompanyUser":{"compId":this.roleForm.compId,"status":this.value2},
                    "roleId":this.value,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage
                };
                this.loadDataWithCondition(param);
            },
            async selectChangeEvent(){
			    var userstatus=this.value2;
			    var rolesvalue=this.value;
                this.currentPage = 1;
                let  param = {
                    "CompanyUser":{
                    	"compId":this.roleForm.compId,
                    	"status":this.value2,
                    	"nickName":this.inputName,
                    	"mobile":this.inputMobile
                    },
                    "roleId":this.value,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage
                };
                this.loadDataWithCondition(param);
            },
            //单页条数变更
            handleSizeChange:function(val){
            	this.pagesize = val;
                var CompanyUser={"compId":this.roleForm.compId};
                var role=null;
                if(this.queryName !=null && this.queryName!=""){
                    CompanyUser={"compId":this.roleForm.compId,"name":this.queryName};
                }
                let  param = {
                    "CompanyUser":CompanyUser,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage,
                    "name":this.queryName
                };
                this.loadDataWithCondition(param);
            },
			 //页码变更
            handleCurrentChange: function(val) {
                this.currentPage = val;
                var CompanyUser={"compId":this.roleForm.compId};
                var role=null;
                if(this.queryName !=null && this.queryName!=""){
                    CompanyUser={"compId":this.roleForm.compId,"name":this.queryName};
                }
                let  param = {
                    "CompanyUser":CompanyUser,
                    //"params": this.criteria,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage,
                    "name":this.queryName
                };
                this.loadDataWithCondition(param);
            },
            async loadDataWithCondition(param) {
                const res = await loadCompanyUserInfo(param);
                if (res.isSuccess == true) {
                    this.tableData = res.result.CompanyUser;
                    this.totalCount = res.result.totalCount;
                    this.changedFee =  res.result.groupData;
                }else{
                    if(res.errorCode="2001"){
                        this.totalCount = 0;
                        this.tableData ='';
                    }else{
                        this.$message({
                            type: 'error',
                            message:  res.errorMsg
                        });
                    }
                }
            },
			//
            async getRoleData(){
                let  param = {
                    "role":{
                        'compId':this.roleForm.compId
                    },
                    "pageSize": 200,
                    "pageIndex": 1,
                };
                const res = await queryRole(param);
                if (res.isSuccess == true) {
                    this.staffOptions = res.result.data;
                    this.staffOptionBatch=res.result.data;
                    var tmp = res.result.data;
                    //alert(JSON.stringify(tmp))
                    var obj = {
                    	'id':'',
                    	'name':'所有角色'
                    };
                    tmp.splice(0,0,obj);
                    this.staffOptionSearch = tmp;
                    //console.log(this.staffOptions);
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            //adduser
            async showNewUser(){
				this.dialogFormAdd = true;
				this.YGlist = false;
            },
            initFormFun(){
                this.form.nickName='';
                this.form.name='';
                this.form.password='';
                this.form.region='';
                this.searchMobileNub='';
                this.searchMobileResultNub='';
                this.searchMobileResultUid='';
                this.YGlist = false;
            },
            cancalNewUser(){
                this.initFormFun();
                this.dialogFormAdd = false;
                this.form.userName='';
                this.form.mobile ='';
            },
            linkRoleId(seleRoleIdData){
                var linkstr='';
                if(seleRoleIdData instanceof Array){
                    for(var i=0;i<seleRoleIdData.length;i++){
                       // var tt=seleRoleIdData + "";
                        if(i== seleRoleIdData.length-1){
                            linkstr+=seleRoleIdData[i];
                        }else{
                            linkstr+=seleRoleIdData[i] + ",";
                        }
                    }
                }else{
                    return seleRoleIdData;
               }
               return linkstr;
            },
            async saveNewUser(formName){
                if(this.radio==1){
                    if(this.selectStaffOption==''){
                        this.$message({
                            type: 'error',
                            message: '请选择角色'
                        });
                        return fasle;
                    }
                   // return;
	                this.$refs[formName].validate(async (valid) => {
	                 if (valid) {
	                     var roleid=this.linkRoleId(this.selectStaffOption);
	                     let param = {
	                         "compId":this.roleForm.compId,
	                         "nickName":this.form.nickName,
	                         "userName":this.form.userName,
	                         "mobile":this.form.mobile,
	                         "password":this.form.password,
	                         "roleIds":roleid
	                     }
	                     const res = await addNewStaff (param);
	                     if (res.isSuccess == true) {
	                         this.$message({
	                             type: 'success',
	                             message: '新增成功'
	                         });
	                         this.initFormFun();
	                         this.dialogFormAdd = false;
	                         this.YGlist = false;
	                         this.selectChangeEvent();
	                     }else{
	                         this.$message({
	                             type: 'error',
	                             message: res.errorMsg
	                         });
	                     }
	                }
                 });
                }else{
                    var pattern = /^1(3|4|5|7|8)\d{9}$/;
                    if(!(pattern.test(this.searchMobileNub))){
                        this.$message({
                            type: 'error',
                            message: '请输入正确的11位手机号'
                        });
                        return false;
                    }
                    // if(this.checkMobileFormat ) return false;
                    if( this.searchMobileResultUid=='') {
                            var had = await this.searchMobile();
                            if (this.searchMobileResultUid == '') {
                                this.$message({
                                    type: 'error',
                                    message: '用户不存在'
                                });
                                return;
                            }
                    }
                    const res = await requestUserCompany({"userId":this.searchMobileResultUid,"companyId":this.roleForm.compId});
                    console.log(res);
                    if (res.isSuccess == true) {
                        this.initFormFun();
                        this.dialogFormAdd = false;
                        this.$message({
                            type: 'success',
                            message: '添加成功'
                        });
                        this.YGlist = false;
	                    this.selectChangeEvent();
                    }else{
                        this.$message({
                            type: 'error',
                            message: res.errorMsg
                        });
                    }
                }

            },
            getCheckBoxIds(data){
                var se=[];
                if(data instanceof  Array){
                    for(var i=0;i< data.length;i++){
                        se.push(data[i].id);
                    }
                }
                return se;
            },
            async showEditRole(val){
                this.editForm.mobile=val.mobile;
                this.editForm.password=val.password;
                this.editForm.nickName=val.nickName;
                this.editForm.userName=val.userName;
                this.dialogFormCompile = true;
                this.companyuserId=val.id;

                const res = await getUserRoles({"userId":val.userId,"companyId":this.roleForm.compId,});
                if (res.isSuccess == true) {
                    //this.staffOptions=res.result.data;
                    this.staffOptions_ids=this.getCheckBoxIds(res.result.data);
                    console.log(this.staffOptions);
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }

            },
            async saveEditRole(){
            	this.$refs[this.editForm].validate(async ()=>{
            		var roleid=this.linkRoleId(this.selectStaffOption);
	                let param = {
	                    "companyuserId":this.companyuserId,
	                    "changeUserId":this.roleForm.userId,
	                    "roleIds":roleid,
	                    "nickName":this.editForm.nickName,
	                    "userName":this.editForm.userName,
	                    "mobile":this.editForm.mobile,
	                    "password":this.editForm.password
	                }
	                const res=await  modifyStaffByUserId(param);
	                if (res.isSuccess == true) {
	                    this.$message({
	                        type: 'success',
	                        message: '修改成功'
	                    });
	                    this.dialogFormCompile = false;
	                }else{
	                    this.$message({
	                        type: 'error',
	                        message: res.errorMsg
	                    });
	                }
            	})
            },
            checkMobileFormat(){
                var pattern = /^1(3|4|5|7|8)\d{9}$/;
                if(!(pattern.test(this.searchMobileNub))){
                    this.$message({
                        type: 'error',
                        message: '请输入正确的11位手机号'
                    });
                    return false;
                }
                return true;
            },
            //查找
            async searchMobile(){
                if(!this.checkMobileFormat()) return false;
                this.YGlist = false;
                const res = await findUserByMobile({"mobile":this.searchMobileNub});
                if (res.isSuccess == true) {
                    this.YGlist = true;
                    this.searchMobileResultNub=res.result.user.mobile;
                    this.searchMobileResultUid=res.result.user.id;
                    //console.log('=====================================' +res.result.user.id )
                    return true;
               }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                    return false;
                }
            },
            async handleEdit(index, row){
                var compuserid= this.tableData[index].id;
                var bstatus= this.tableData[index].status;
                const res= await complateUserCompany({"userCompanyId":compuserid,"accept":!bstatus});
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '操作成功'
                    });
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            //多选响应
            handleSelectionChange: function(val) {
                this.staffTable = val;
            },
            //批量操作
            async batchOperate(){
                if(this.staffTable.length==0)
                    return;
                var array = [];
                this.staffTable.forEach((item) => {
                    array.push(item.id);
                })
                //value1
                let param = {
                    "userIds":array,
                    "compId":this.roleForm.compId,
                    "roleId":this.batchOperRole
                }
                const res=await batchAddUserRoles(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '操作成功'
                    });
                    this.initFormFun();
                    this.dialogFormAdd = false;
                    this.YGlist = false;
                    this.selectChangeEvent();
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            formatStatus:function(row, column) {
                let bstatus = row[column.property];
                if(bstatus){
                    return "启用";
                }else{
                    return "禁用";
                }
            },
            mydateFormat,
            formatAddTime:function(row, column){
                var createTime = row[column.property];
                if (createTime == undefined||createTime=='') {
                    return "";
                }
                var date = new Date(createTime);
                return formatDate(date,'yyyy-MM-dd hh:mm:ss');
            },

        }
    }
</script>

<style lang="less">
    @import '../style/mixin.less';
    @import "../style/common";
    @import '../style/manageStaff';
	.el-table__body-wrapper {max-height: 350px;}
</style>
