<template>
    <div class="fillcontain">
        <ul class="menu">
            <li>
                <router-link :to='{path:"/warehouseManagement"}'>仓库管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/stockTakingManagement"}'>库存盘点单</router-link>
            </li>
            <li class="menuIndex3">
                <router-link :to='{path:"/stockAllotManagement"}'>库存调拨单</router-link>
            </li>
            <li>
                <router-link :to='{path:"/checkDiffManagement"}'>库存差异单</router-link>
            </li>
        </ul>
        <div class="stockAllotManagement">
            <div class="stocktakingTop">
                <div class="left">
                    <div class="left" >
                        <el-date-picker
                            size="small"
                            v-model="filters.date.startDate"
                            type="date"
                            placeholder="选择开始日期"
                            :picker-options="startDateBefore"
                            @change="handleDate"
                        >
                        </el-date-picker>
                        -
                        <el-date-picker
                            size="small"
                            v-model="filters.date.endDate"
                            type="date"
                            placeholder="选择截止日期"
                            :picker-options="startDateAfter"
                            @change="handleDate"
                        >
                        </el-date-picker>
                    </div>
                </div>
                <div class="left flex input2">
                    <el-input
                        placeholder="档口名称搜索"
                        size="small"
                        icon="search"
                        v-model="input1"
                        class="width2"
                        :on-icon-click="stallNameClick">
                    </el-input>
                    <el-input
                        placeholder="调入仓库搜索"
                        size="small"
                        icon="search"
                        v-model="input2"
                        class="width2"
                        :on-icon-click="warehouseClick">
                    </el-input>
                    <el-input
                        placeholder="调出仓库搜索"
                        size="small"
                        icon="search"
                        v-model="input3"
                        class="width2"
                        :on-icon-click="allocateWarehouseClick">
                    </el-input>
                    <el-col :span="15" class="width2">
                        <el-select v-model="input4" placeholder="状态搜索" @change="selectChange" size="small">
                            <el-option
                                v-for="item in states"
                                :key="item.value"
                                :label="item.label"
                                :value="item.value">
                            </el-option>
                        </el-select>
                    </el-col>
                </div>
            </div>
            <div class="stocktakingTable">
                <el-table
                    :data="tableData"
                    style="width: 100%">
                    <el-table-column
                        prop="storeOrderId"
                        label="调拨编号">
                    </el-table-column>
                    <el-table-column
                        prop="stallName"
                        label="档口名称">
                    </el-table-column>
                    <el-table-column
                        prop="warehouseName"
                        label="调出仓库"
                        >
                    </el-table-column>
                    <el-table-column
                        prop="allocateWarehouseName"
                    label="调入仓库"
                    >
                    </el-table-column>
                    <el-table-column
                        prop="orderNum"
                        label="调拨数">
                    </el-table-column>
                    <el-table-column
                        prop="price"
                        label="调拨总金额">
                    </el-table-column>
                    <el-table-column
                        prop="createTime"
                        label="调拨时间"
                        :formatter="formatDate">
                    </el-table-column>
                    <el-table-column
                        prop="flowStatus"
                        label="状态">
                        <template scope="scope">
                            <p v-bind:class="[scope.row.flowStatus==1?'color3':'']">{{scope.row.flowStatus==0?'待签收':scope.row.flowStatus==1?'已签收':''}}</p>
                        </template>
                    </el-table-column>
                    <el-table-column
                        label="操作">
                        <template scope="scope">
                            <router-link :to='{path:"/stockAllotDetails",query:{param:scope.row.storeOrderId,stallName:scope.row.stallName,createTime:scope.row.createTime,createUserId:scope.row.createUserId,status:scope.row.flowStatus}}' class="blue2">查看详情</router-link>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
            <el-pagination
                small
                class="right"
                style="margin-top: 20px;"
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="pagesize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="totalCount">
            </el-pagination>
            <a href="javascript:void(0)" class="export_excle">导出excel</a>
        </div>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {queryAllStockOrderForAllocation} from '@/api/getData'
    import {formatDate} from '../utils/date.js'
    import {mydateFormat} from '../utils/dataFormater.js'

    export default {
        components: {
            headTop,
        },
        data() {
            return {
                filters:{
                    date:{
                        startDate:'',
                        endDate:''
                    }
                },
                startDateBefore:{
                    disabledDate: (time) => {
                        let beginDateVal = this.filters.date.endDate;
                        if (beginDateVal) {
                            return time.getTime() > beginDateVal;
                        }
                    }
                },
                startDateAfter:{
                    disabledDate: (time) => {
                        let beginDateVal = this.filters.date.startDate;
                        if (beginDateVal) {
                            return time.getTime() < beginDateVal;
                        }
                    }
                },
                input1:'',
                input2:'',
                input3:'',
                input4:'',
                value6:'',
                states:[
                    {
                        "label":'全部',
                        "value":-1
                    },
                    {
                        "label":'待签收',
                        "value":0
                    },{
                        "label":'已签收',
                        "value":1
                    }
                ],
                tableData: [],
                flowStatus:'',
                //默认每页数据量
                pageSize: 8,
                //默认高亮行数据id
                highlightId: -1,
                //当前页码
                currentPage: 1,
                //查询的页码
                start: 1,
                //默认数据总数
                totalCount: 0,
            }
        },
        mounted(){
            let param = {
                "start":'',
                "end":'',
                "stallName":'',
                "warehouseName":'',
                "allocateWarehouseName":'',
                "flowStatus":'',
                "pageIndex":this.currentPage,
                "pageSize":this.pageSize
            }
            this.initloadData(param);
        },
        methods: {
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
            },
            handleDate(){
                let param = {
                    "start":this.filters.date.startDate,
                    "end":this.filters.date.endDate,
                    "stallName":this.input1,
                    "warehouseName":'',
                    "allocateWarehouseName":'',
                    "flowStatus":'',
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                }
                this.initloadData(param);
            },
            stallNameClick(){
                let param = {
                    "start":'',
                    "end":'',
                    "stallName":this.input1,
                    "warehouseName":'',
                    "allocateWarehouseName":'',
                    "flowStatus":'',
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                }
                this.initloadData(param);
            },
            warehouseClick(){
                let param = {
                    "start":'',
                    "end":'',
                    "stallName":'',
                    "warehouseName":this.input2,
                    "allocateWarehouseName":'',
                    "flowStatus":'',
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                }
                this.initloadData(param);
            },
            allocateWarehouseClick(){
                let param = {
                    "start":'',
                    "end":'',
                    "stallName":'',
                    "warehouseName":'',
                    "allocateWarehouseName":this.input3,
                    "flowStatus":'',
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                }
                this.initloadData(param);
            },

            selectChange() {
                let param = {
                    "start":'',
                    "end":'',
                    "stallName":'',
                    "warehouseName":'',
                    "allocateWarehouseName":'',
                    "flowStatus":this.input4,
                    "pageIndex":this.currentPage,
                    "pageSize":this.pageSize
                }
                this.initloadData(param);
            },
            async initloadData(param){
                const res = await queryAllStockOrderForAllocation(param);
            	if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message:'数据加载成功!'
                    });
                    this.tableData = res.result.data;
                    this.totalCount = res.result.totalCount
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            formatDestWarehouse:function(row, column){
            	let data = "";
            	if(row.destWarehouse){
            		data = row.destWarehouse+" - ";
            	}
            	if(row.destSeatname){
            		data = data+row.destSeatname;
            	}
            	return data;
            },
            formatSource:function(row, column){
            	let data = "";
            	if(row.sourceWarehouse){
            		data = row.sourceWarehouse+" - ";
            	}
            	if(row.sourceSeatname){
            		data = data+row.sourceSeatname;
            	}
            	return data;
            },

            //页码变更
            handleCurrentChange: function(val) {
                this.currentPage = val;
                let param = {
                    "start":'',
                    "end":'',
                    "stallName":'',
                    "warehouseName":'',
                    "allocateWarehouseName":'',
                    "flowStatus":'',
                    "pageIndex":this.currentPage,
                    "pageSize":this.pagesize
                }
                this.initloadData(param);
            },
            //数据格式化
            formatDate:function(row, column) {
                let data = row[column.property];
                if (data == undefined||data=='') {
                    return "";
                }
                var date2 = new Date(data);
                return formatDate(date2,'yyyy-MM-dd hh:mm');
            }
        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/stockAllotManagement';
</style>
