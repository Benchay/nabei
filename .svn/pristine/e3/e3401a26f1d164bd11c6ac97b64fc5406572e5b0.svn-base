<template>
    <div class="fillcontain">
        <ul class="menu">
            <li>
                <router-link :to='{path:"/fastShipping2"}'>快速出货</router-link>
            </li>
            <li class="menuIndex">
                <router-link :to='{path:"/indentManagement"}'>订单管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/sellerSettlement"}'>客户结算</router-link>
            </li>
            <li>
                <router-link :to='{path:"/customerManagement"}'>客户管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/statisticalStatement"}'>销售统计</router-link>
            </li>
        </ul>
        <div class="sellerSettlement">
            <router-link :to='{path:"/indentManagement"}' class="right comeBack">返回</router-link>
            <div class="details">
                <el-col :span="24" v-for="list in info">
                    <el-col :span="6">卖家名称：{{this.busiName}}</el-col>
                    <el-col :span="6">
                        <div  class="flex">
                            <p v-bind:class="[list.state==0?'style1':list.state ==1?'style1':list.state ==2?'style2':'']">{{list.state==0?'现结':list.state == 1?'周结':list.state == 2?'月结':''}}</p>
                            <p>{{list.date}}</p>
                        </div>
                    </el-col>
                    <el-col :span="6">状态：{{formatStatus(orderVo)}}</el-col>
                </el-col>
                <el-col :span="24">
                    <el-col :span="6">当前总欠款金额：{{orderVo.totalFee}}</el-col>
                    <el-col :span="6">已结金额：{{orderVo.closeFee}}</el-col>
                    <el-col :span="6" class="colorText">待结金额：{{formatDataInfo(orderVo)}}</el-col>
                    <!--已结算状态 无此按钮-->
                    <el-col :span="6">
                        <el-button  class="buttonColor" @click="quickSettlement">立即结算</el-button>
                        <!--<router-link :to='{path:"/sellerSettlementImmediately",query:{orderId:orderId,customName:busiName,unClosedFee:orderVo.totalFee,toReviceFee:(orderVo.totalFee - orderVo.closeFee),saleCompanyId:busiCompId}}' class="buttonColor">立即结算</router-link>-->
                    </el-col>
                    <!---->
                </el-col>
            </div>
            <div class="detailsTable">
                <p class="tableTop">付款记录：</p>
                <el-table
                    :data="tableData"
                    style="width: 100%">
                    <el-table-column
                        prop="createTime"
                        label="结算时间"
                        :formatter="formatDate"
                        width="180">
                    </el-table-column>
                    <el-table-column
                        prop="payFee"
                        label="本次结算金额（￥）">
                    </el-table-column>
                    <el-table-column
                        prop="settlementType"
                        :formatter="formatData"
                        label="结算方式">
                    </el-table-column>
                    <el-table-column
                        prop="actualPayFee"
                        label="实际付款金额（￥）">
                    </el-table-column>
                    <el-table-column
                        prop="status"
                        label="状态">
                    </el-table-column>
                    <el-table-column
                        label="操作">
                        <template scope="scope">
                            <router-link :to='{path:"/indentManagementAccountDetails",query:{vo:tableData[scope.$index]}}' class="blue2">查看详情</router-link>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
        </div>
    </div>
</template>
<script>
    import headTop from '../components/headTop'
    import {queryOrderInfo,querySettlementOrder,getOrder,queryFinanceRecord} from '@/api/getData'
    import {formatDate} from '../utils/date.js'
    import {userInfo} from '../config/mUtils.js'

    export default {
        components: {
            headTop,
        },
        data() {
            return {
                roleForm: {
                    userId: '',
                    roleId: '',
                    compId:''
                },
                info:[],
                orderVo:'',
                tableData:[],
                orderId:'',
                busiName:'',
                orderType:'',
                busiCompId:'',
                groupData:'',
            }
        },
        watch:{
            '$route':function (route){
                this.roleForm.compId = userInfo().companyId;
                this.roleForm.userId = userInfo().userId;

                this.orderId = this.$route.query.orderId;
                this.busiName = this.$route.query.busiName;
                this.orderType = this.$route.query.orderType;
                this.busiCompId = this.$route.query.busiCompId;

                this.queryOrder();
                this.querySettlementOrderInfo();//获取财务结算单信息
                //this.queryFinanceRecordInfo();//获取流水信息
            }
        },
        mounted(){
            this.roleForm.compId = userInfo().companyId;
            this.roleForm.userId = userInfo().userId;
            this.orderId = this.$route.query.orderId;
            this.busiName = this.$route.query.busiName;
            this.orderType = this.$route.query.orderType;
            this.busiCompId = this.$route.query.busiCompId;

            this.queryOrder();
            this.querySettlementOrderInfo();//获取财务结算单信息
            //this.queryFinanceRecordInfo();//获取流水信息

        },
        methods: {
            //查询订单信息
            async queryOrder(){
                this.info = [];
              let param = {
                  "id":this.orderId
              };
              const res = await getOrder(param);
              if(res.isSuccess){
                  this.orderVo = res.result.data;
                  let para = {
                      state: this.orderVo.payType,
                      date:this.orderVo.closeCycle
                  };
                  this.info.push(para);
              }
            },

            //获取财务结算单信息
            async querySettlementOrderInfo(){
                this.tableData = [];
                let param = {
                    "stockOrders":'['+'"' + this.orderId + '"' +']',
                    "pageIndex":1,
                    "pageSize":100
                };
                const res = await querySettlementOrder(param);
                if(res.isSuccess){
                    let table = res.result.results;
                    table.forEach((obj) =>{
                        this.tableData.push(obj);
                    });
                }
            },

            //获取流水信息
            async queryFinanceRecordInfo(param){
                const res = await queryFinanceRecord(param);
                if(res.isSuccess){
                    this.tableData.push(res.result);
                }else{
                    this.$message({
                        type:'error',
                        message:'获取财务流水失败'
                    });
                }
            },
            //立即结算
            quickSettlement(){
              var fee = this.orderVo.totalFee - this.orderVo.closeFee;
              if(fee>0||(fee==0 && this.orderVo.closeStutas==0)){
                 this.$router.push({path:"/sellerSettlementImmediately",query:{orderId:this.orderId,customName:this.busiName}});
              }else{
                  this.$message({
                      type:'info',
                      message:'当前不能发起结算'
                  });
              }
            },
            formatData:function(row,column){
                let data = row[column.property];
                if(data==1){
                    return "单订单结算";
                }else if(data==2){
                    return "多订单结算";
                }else
                    return "";
            },
            //数据格式化
            formatDate:function(row,column) {
                let data = row[column.property];
                if (data == undefined||data=='') {
                    return "";
                }
                return formatDate(data*1,'yyyy-MM-dd hh:mm:ss');
            },
            cancelRefund(){
                this.dialog2 = false;
                this.$router.push('/salesReturn');
            },
            //格式化待结金额
            formatDataInfo(){
                if(this.orderVo.closeFee==undefined||this.orderVo.closeFee==''){
                    this.orderVo.closeFee = 0;
                }
               return this.orderVo.totalFee - this.orderVo.closeFee;
            },
            //格式化订单的财务结算状态
            formatStatus(){
                if(this.orderVo.closeStutas==0){
                    return '未结算';
                }else if(this.orderVo.closeStutas == 1){
                    return '已结算';
                }else if(this.orderVo.closeStutas == 2){
                    return '部分结算';
                }else{
                    return '';
                }
            }
        }
    }
</script>
<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/sellerSettlement';
</style>
