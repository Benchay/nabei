<template>
    <div class="fillcontain">
        <ul class="menu">
            <li class="menuIndex" v-if="getMenuAuthFun('fastShipping2')">
               <router-link :to='{path:"/fastShipping2"}'>快速出货</router-link>
            </li>
            <li  v-if="getMenuAuthFun('indentManagement')">
                <router-link :to='{path:"/indentManagement"}'>订单管理</router-link>
            </li>
            <li v-if="getMenuAuthFun('takeGoods')">
                <router-link :to='{path:"/takeGoods"}'>取货码</router-link>
            </li>
            <li v-if="getMenuAuthFun('sellerSettlement')">
                <router-link :to='{path:"/sellerSettlement"}'>客户结算</router-link>
            </li>
            <li v-if="getMenuAuthFun('SettlementRecordsStall')">
                <router-link :to='{path:"/SettlementRecordsStall"}'>结算单</router-link>
            </li>
            <li v-if="getMenuAuthFun('customerManagement')">
                <router-link :to='{path:"/customerManagement"}'>客户管理</router-link>
            </li>
            <li v-if="getMenuAuthFun('statisticalStatement')">
                <router-link :to='{path:"/statisticalStatement"}'>销售统计</router-link>
            </li>
        </ul>
        <div class="fastShipping2 radioGreen">
            <div class="fastTop flex">
                <div class="title">出货卖家：</div>
                <div class="content">
                    <span>{{name}}</span>
                    <a href="javascript:void(0)" class="comeBack" @click="handleSelectSupplier">选择</a>
                </div>
            </div>
            <el-col :span="10" class="isLeft">
                <el-col :span="24" class="leftList leftList2">
                    <div class="flex">
                        <el-col :span="4" class="title">货号：</el-col>
                        <el-col :span="17" class="content" style="width:300px" v-if="scanOrSearch == 1">
                            <el-select
                                v-model="input3"
                                filterable
                                remote
                                reserve-keyword
                                placeholder="请输入货号..."
                                :remote-method="remoteMethod"
                                :loading="loading"
                                @change="searchProduct">
                                <el-option
                                    v-for="item in options4"
                                    :key="item.productCode"
                                    :label="item.productCode"
                                    :value="item.productCode">
                                </el-option>
                            </el-select>
                        </el-col>
                        <el-col :span="17" class="content" style="width:300px" v-if="scanOrSearch == 2">
                            <el-input placeholder="扫一扫..." v-model="barcode" @keyup.enter.native="searByBarcode($event)" ></el-input>
                        </el-col>
                        <el-col :span="3" class="choseScan flex2" @click.native="choseScan()">
                            <p v-if="scanOrSearch == 2"><img src="../image/saoys.png" alt=""></p>
                            <p v-if="scanOrSearch == 1"><img src="../image/search001.png" alt=""></p>
                        </el-col>
                    </div>
                    <el-col :span="4">&nbsp;</el-col>
                    <el-col :span="19" class="content">
                        <div class="contentTips flex">
                            <el-col :span="24" class="content">
                                <el-tag
                                    :key="tag"
                                    size="small"
                                    v-for="tag in codes"
                                    :closable="tag.id!=undefined&&tag.id!=''"
                                    :close-transition="false"
                                    @close="handleClose(tag)"
                                    @click.native="selectCode(tag)"
                                    class="fastShippingActive"
                                    style="margin-bottom: 10px;margin-right: 5px;"
                                >
                                    {{tag.label}}
                                </el-tag>
                                <!--<el-popover-->
                                    <!--ref="popover5"-->
                                    <!--placement="bottom-end"-->
                                    <!--width="160"-->
                                    <!--v-model="visible2">-->
                                    <!--<el-select-->
                                        <!--size="mini"-->
                                        <!--v-model="addedCode"-->
                                        <!--filterable-->
                                        <!--remote-->
                                        <!--reserve-keyword-->
                                        <!--placeholder="请输入货号..."-->
                                        <!--:remote-method="remoteMethod2"-->
                                        <!--:loading="loading"-->
                                        <!--@change="searchAndAdd">-->
                                        <!--<el-option-->
                                            <!--v-for="item in options5"-->
                                            <!--:key="item.id"-->
                                            <!--:label="item.productCode"-->
                                            <!--:value="item.id">-->
                                        <!--</el-option>-->
                                    <!--</el-select>-->
                                <!--</el-popover>-->
                                <!--<el-button class="button-new-tag" size="small" v-popover:popover5>+</el-button>-->
                            </el-col>
                        </div>
                        <div class="contentInfo flex">
                            <img style="width: 160px; height: 160px;" :src="imgUrl_main" alt="">
                            <div class="infoRight">
                                <p v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">仓库位置：{{this.location}}</p>
                                <p v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">库存(件)：{{this.totalStockNum}}</p>
                                <p v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">单价(元)：{{this.price}}</p>
                            </div>
                        </div>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title" v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">颜色：</el-col>
                    <el-col :span="18" class="content" v-show="colors.length > 0">
                        <el-radio-group v-model="radio3" @change="selectColor">
                            <el-radio-button :label="item.value" v-for="item in colors" >{{item.value}}</el-radio-button>
                        </el-radio-group>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title" v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">尺码：</el-col>
                    <el-col :span="18" class="content" v-show="sizes.length > 0">
                        <el-radio-group v-model="radio4" @change="selectSize">
                            <el-radio-button :label="item.value" v-for="item in sizes" >{{item.value}}</el-radio-button>
                        </el-radio-group>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList" v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">
                    <el-col :span="4" class="title">数量：</el-col>
                    <el-col :span="18" class="content">
                        <el-input-number v-model="num6" :min="1" @change="parseInt(this.num6)"></el-input-number>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex2 leftButton" v-show="this.productInfoVo!=undefined&&this.productInfoVo.length>0">
                    <a href="javascript:void(0)" class="buttonColor" @click="addToList">加入出货清单</a>
                </el-col>
            </el-col>
            <el-col :span="14" class="isRight">
                <div>出货清单</div>
                <div class="rightDelete right"><a href="javascript:void(0)"  class="buttonColor" @click="batchDeleteConfig">删除</a></div>
                <el-table id="tableData"
                    :data="tableData"
                    border
                    :summary-method="getSummaries"
                    show-summary
                    @selection-change="handleSelectionChange"
                    height="400"
                    style="width: 100%">
                    <el-table-column
                        type="selection"
                        width="55"
                    >
                    </el-table-column>
                    <el-table-column
                        label="主图/货号">
                        <template scope="scope">
                            <div class="flex2 tableFirst" style="padding: 3px;">
                                <img v-if="scope.row.imgUrl_main != ''" :src="scope.row.imgUrl_main" alt=""  class="tableImg" >
                                <img v-else src="../image/product_default.png" alt=""  class="tableImg" >
                                <p>{{scope.row.productCode}}</p>
                            </div>
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="color"
                        v-model="color"
                        label="颜色">
                    </el-table-column>
                    <el-table-column
                        prop="size"
                        v-model="size"
                        label="尺码">
                    </el-table-column>
                    <el-table-column
                        prop="orderNum"
                        v-model="orderNum"
                        label="数量">
                        <template scope="scope">
                            <el-input type="number" v-model="scope.row.orderNum" :min="1" @change="parseInt(scope.row.orderNum)"></el-input>
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="closeFee"
                        v-model="closeFee"
                        label="单价">
                        <template scope="scope"><el-input type="number" v-model="scope.row.closeFee" :min="1"></el-input></template>
                    </el-table-column>
                </el-table>
                <div class="payment" v-if="haveMenuAuthFun('fastShipping2',1)">
                    <div class="flex">
                        <p>选择收款方式（现结）：</p>
                        <div>
                            <ul class="paymentList flex2">
                                <li v-for="(obj,index) in typeList" @click="selectAccountType(index)" :class="{'change9':index === clickIndex}">
                                    <a href="javascript:void(0);" >{{obj.label}}</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <el-col :span="24" class="flex2 payButton" v-if="haveMenuAuthFun('fastShipping2',1)">
                    <a href="javascript:void(0)" class="buttonColor" @click="quickShipments">确认出货</a>
                </el-col>
            </el-col>
        </div>
        <el-dialog
            title="所有卖家"
            :visible.sync="dialogVisible"
            size="tiny">
            <div>
                <el-input
                    class="startInput"
                    placeholder="卖家名称"
                    icon="search"
                    v-model="supplierName"
                    :on-icon-click="selectedSupplier">
                </el-input>
                <div class="startRadio">
                    <el-radio class="radio"  :label="list" v-model="radio" :value="list" v-for="list in supplierList">{{list.name}}</el-radio>
                </div>
            </div>
            <span slot="footer" class="dialog-footer flex2">
                <a href="javascript:void(0)" class="buttonColor" @click="confirmed">确 定</a>
            </span>
        </el-dialog>
        <el-dialog
            title="确认出货"
            :visible.sync="dialogVisible1"
            size="tiny">
            <div style="text-align: center;padding: 30px 0;">
                <div style="margin-bottom: 20px">确定当前列表中的商品出货？</div>
                <div>
                    <el-checkbox v-model="checked">打印小票</el-checkbox>
                </div>
            </div>
            <span slot="footer" class="dialog-footer flex2">
                <a href="javascript:void(0)" class="buttonColor" @click="quickShipmentsInfo">确 定</a>
                 <a href="javascript:void(0)" class="buttonColor2"  @click="dialogVisible1 = false">取 消</a>
            </span>
        </el-dialog>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {formatDate} from '../utils/date.js'
    import {queryStalls,createHotProduct,queryBarcode,queryHotProduct,queryProduct,queryProductInfo,queryStallCustomer,queryWarehouseInfo,queryWarehouseSeatInfo,queryWarehouse,createOffLineFinanceRecord,createReturnOrSalesOrder} from '@/api/getData'
    import {getStore,userInfo} from  '../config/mUtils'
    import {getMenuAuth,haveMenuAuth} from  '../utils/AuthMenu.js'
    import {printOrderInfo} from '../utils/orderPrint.js'

    export default {
        components: {
            headTop,
        },
        data() {
            return{
                visible2:false,
                barcode:'',
                scanOrSearch:1,
                checked:false,
                dynamicTags: [],
                inputVisible: false,
                dialogVisible1:false,
                inputValue: '',
                options4:[],
                options5:[],
                addedCode:'',
                loading:false,
                clickIndex:0,
                dialogVisible:false,
                roleForm: {
                    userId: '',
                    roleId: '',
                    compId:''
                },
                radio:1,
                num6:1,
                input3:'',
                radio3:'',
                radio4:'',
                imgUrl_main:'1',
                color:'',
                size:'',
                orderNum:'',
                closeFee:'',
                tableData: [],
                location:'',
                totalStockNum:0,
                price:0.00,
                array:[],
                warehouseId:'',
                warehouseName:'',
                productInfo:'',
                colors:[],
                sizes:[],
                count:0,
                multipleSelection:[],
                id:0,
                productId:'',
                productCode:'',
                productVariantId:'',
                codes:[],
                supplierList:[{id:'',name:'匿名卖家'}],
                supplierName:'',
                defaultWarehouseId:'',
                orderInfo:'',
                accountType:'3',
                typeList:[
                    {
                         label:'支付宝',
                         value:'3'
                    },{
                         label:'微信',
                         value:'4'
                    },{
                        label:'现金',
                        value:"7"
                    },
                    {
                         label:'银行卡',
                        value:'5'
                    }
                ],
                changeFee:0.00,
                compId:'',
                name:'匿名卖家',
                tipsInfo:[],
                productInfoVo:[],
                showName:'',
                customerId:'',
                stallVo:''

            }
        },
        mounted() {
            this.roleForm.userId=userInfo().userId;
            this.roleForm.compId=userInfo().companyId;
            //查询热卖商品
            this.queryHotInfo();
        },
        methods: {
            choseScan(){
                if(this.scanOrSearch == 1){
                    this.scanOrSearch = 2;
                }else{
                    this.scanOrSearch =1;
                }
            },
            async searByBarcode(ev){
                if(ev.keyCode == 13){
                    let param = {
                        "barcode":this.barcode,
                        "companyId":this.roleForm.compId,
                        "companyType":1
                    };
                    const res = await queryBarcode(param);
                    var tt = [];
                    if(res.isSuccess) {
                        this.productVariantId=res.result.id;
                        this.productId=res.result.productId;
                        var pic=res.result.imgUrl_main;
                        this.radio3=res.result.colour;
                        this.radio4=res.result.size;
                        this.productCode=res.result.productCode;
                        this.compId=res.result.companyId;
                        this.closeFee=res.result.sellPrice;
                        if(this.roleForm.compId !=res.result.companyId){
                            this.$message({
                                duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                                type:'error',
                                message:'条码不是您公司的，请确认'
                            });
                            this.barcode='';
                            return;
                        }
                        this.barcode='';
                        let param = {
                            "id":this.id,
                            "productId":this.productId,
                            "companyId":this.roleForm.compId,
                            "productVariantId": this.productVariantId,
                            "imgUrl_main": pic,
                            "color": this.radio3,
                            "size": this.radio4,
                            "orderNum": 1,
                            "closeFee": this.closeFee.toFixed(2),
                            "productCode":this.productCode,
                            "busiCompId":this.compId,
                            "stallCustomerId":this.customerId
                        };

                        this.tableData=this.mergeDataByProvar(this.tableData,param);
                        tt.forEach((obj)=>{
                            this.tableData.push(obj);
                        });
                        /*
                        this.closeFee = this.price * sameTotal;
                        let param = {
                            "id":this.id,
                            "productId":this.productId,
                            "companyId":this.roleForm.compId,
                            "productVariantId": this.productVariantId,
                            "imgUrl_main": this.imgUrl_main,
                            "color": this.radio3,
                            "size": this.radio4,
                            "orderNum": 1,
                            "closeFee": this.closeFee.toFixed(2),
                            "productCode":this.productCode,
                            "busiCompId":this.compId
                        };
                        this.tableData.push(param);
                        tt.forEach((obj)=>{
                            this.tableData.push(obj);
                        });*/
                    }else{
                        this.$message({
                            duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                            type:'error',
                            message:'查询条码信息失败'
                        });
                    }
                }
            },
            /*
             *   按照变体合并
             * */
            mergeDataByProvar(tabdata,param){
                var vp=param.productVariantId;
                var orderNum=param.orderNum;
                var bfind=false;
                if(tabdata==null || tabdata.length<1){
                    tabdata.push(param);
                    return  tabdata;
                }
                for( var i=0;i<tabdata.length;i++){
                    var temp=tabdata[i].productVariantId;
                    console.log("temp===" + temp);
                    if(temp==vp){
                        tabdata[i].orderNum=Number(tabdata[i].orderNum) + Number(orderNum);
                        bfind=true;
                        break;
                    }
                }
                if(!bfind){
                    tabdata.push(param);
                }
                return tabdata;
            },
            handleClose(tag,index) {
                this.codes.splice(this.codes.indexOf(tag), 1);
            },

        	haveMenuAuthFun(pathName, mode){
        		return haveMenuAuth(pathName, mode);
        	},
            getMenuAuthFun(index){
                var b= getMenuAuth(index);
                return b;
            },

            async queryHotInfo(){
                let param = {
                    "companyId":this.roleForm.compId,
                    "type":'2'
                };
                const res = await queryHotProduct(param);
                this.codes = [];
                if(res.isSuccess){
                    let table = res.result;
                    if (table.length > 3) {
                        for (var i = 0; i < 3; i++) {
                            let pa = {
                                value: table[i].id,
                                label: table[i].productCode
                            };
                            this.codes.push(pa);
                        }
                    } else {
                        table.forEach((obj) => {
                            let pa = {
                                value: obj.id,
                                label: obj.productCode
                            };
                            this.codes.push(pa);
                        });
                    }
                }
            },

            async remoteMethod(query){
                if(query!=''){
                    this.loading = true;
                    let param = {
                        "productCode":query,
                        "companyId":userInfo().companyId,
                        "pageIndex":1,
                        "pageSize":1000
                    };
                    const res = await queryProduct(param);
                    setTimeout(() => {
                        this.loading = false;
                        this.options4 = res.result.results;
                    }, 200);
                } else {
                    this.options4 = [];
                }
            },

            async remoteMethod2(query){
                if(query!=''){
                    this.loading = true;
                    let param = {
                        "productCode":query,
                        "companyId":userInfo().companyId,
                        "pageIndex":1,
                        "pageSize":1000
                    };
                    const res = await queryProduct(param);
                    setTimeout(() => {
                        this.loading = false;
                        this.options5 = res.result.results;
                    }, 200);
                } else {
                    this.options5 = [];
                }
            },

            async searchAndAdd(){
                let param = {
                    "companyId":userInfo().companyId,
                    "productId":this.addedCode
                };
                const res = await  createHotProduct(param);
                if(res.isSuccess){
                    this.$message({
                        type:'info',
                        message:'保存成功'
                    });
                    this.queryHotInfo();
                }else{
                    this.$message({
                        type:'error',
                        message:'保存失败'
                    });
                }

            },


            selectAccountType(index){//选择账户类型
                this.clickIndex = index;
                this.accountType = this.typeList[index].value;
            },
            handleSelectSupplier(){
                if(this.tableData.length!=0){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'info',
                        message:'当前不能选择，刷新后重新操作，或者确认出货/取消出货后可再次选择'
                    });
                    this.dialogVisible = false;
                }else{
                    this.dialogVisible = true;
                }
            },
            async queryDefaultWarehouse(){
                this.defaultWarehouseIds = [];
                let param = {
                    "params":{"companyId":this.roleForm.compId,"isStall":1}
                };
                const res=await queryWarehouse(param);
                if (res.isSuccess == true) {
                    this.defaultWarehouseIds = res.result.results;
                    for(let i = 0 ;i<this.defaultWarehouseIds.length;i++){
                        if(this.defaultWarehouseIds[i].isStall==1){
                            this.defaultWarehouseId = this.defaultWarehouseIds[i].id;
                        }
                    }
                    this.warehouseId = this.defaultWarehouseId;
                    this.search();
                }else{
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'error',
                        message:'获取仓库失败'
                    });
                }
            },
            async selectedSupplier(){
                this.supplierList = [];
                let param = {
                    "companyId":userInfo().companyId,
                    "sellName":this.supplierName,
                    "mobile":'',
                    "pageIndex":1,
                    "pageSize":10000
                };
                const res = await queryStallCustomer(param);
                if(res.isSuccess){
                    let data = res.result.results;
                    this.supplierList.push({id:'',name:'匿名卖家'});
                    for(var i = 0 ; i < data.length;i++){
                        let pa= {
                            recordId:data[i].id,
                            id:data[i].sellId,
                            name:data[i].sellName
                        };
                        this.supplierList.push(pa);
                    }
                }
            },
            confirmed(){
              this.customerId = this.radio.recordId,
              this.compId = this.radio.id;
              this.dialogVisible = false;
              this.supplierName = '';
              for(var i = 0 ; i < this.supplierList.length;i++){
                    if(this.radio.id==this.supplierList[i].id&&this.radio.recordId==this.supplierList[i].recordId){
                        this.name = this.supplierList[i].name;
                        this.showName = this.supplierList[i].name;
                        break;
                    }
                }
                this.supplierList = [{id:'',name:'匿名卖家'}];
            },
            selectCode(val){
                this.input3 = val.label;
                this.searchProduct();
            },
            //多选响应
            handleSelectionChange: function(val) {
                this.multipleSelection = val;
            },
            batchDeleteConfig() {
                if(this.multipleSelection == undefined || this.multipleSelection.length==0){
                    this.$message({
                        type: 'error',
                        message: '请先勾选要删除的行！'
                    });
                    return;
                }
                var array = [];
                this.multipleSelection.forEach((item) => {
                    array.push(item.id);
                })
                if(array.length <1){
                    this.$message({
                        type: 'error',
                        message: '请先勾选要删除的行！'
                    });
                    return;
                }
                var str = '';
                if(array.length==1&&this.multipleSelection[0].orderNum==1){
                    str = '确认要删除该商品吗？';
                }else{
                    str='确认要删除这些商品吗？';
                }
                //'是否确认删除选中的信息?'
                this.$confirm(str, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    this.batchDelete(array);
                }).catch(() => {

                });
                if(this.tableData.length==0){
                    this.compId='';
                }
            },
            async batchDelete(array){
                let table = [];
                for(let i = 0 ;i<this.tableData.length;i++){
                    let flag = this.contains(array,this.tableData[i].id);
                    if(!flag){
                        table.push(this.tableData[i]);
                    }
                }
                this.tableData = table;
            },
            contains(array,str){
                for(let i=0;i<array.length;i++){
                    if(array[i] == str){
                        return true;
                    }
                }
                return false;
            },
            containsCode(param){
                for(let i = 0 ;i< this.codes.length;i++){
                    if(this.codes[i].value==param.value){
                        return true;
                    }
                }
                return false;
            },
            delCode(param){
                let table = [];
                for(let i = 0 ; i<this.codes.length;i++){
                    if(this.codes[i].value!=param.value){
                        table.push(this.codes[i]);
                    }
                }
                this.codes = table;
            },
            async searchProduct(){
//                if(this.codes.length>=5){
//                    let table = [];
//                    for(let i = 1; i<this.codes.length;i++){
//                        table.push(this.codes[i]);
//                    }
//                    this.codes = table;
//                    let param = {
//                        "label":this.input3,
//                        "value":this.input3
//                    };
//                    this.codes.push(param);
//                }else{
//                    let param = {
//                        "label":this.input3,
//                        "value":this.input3
//                    };
//                    if(!this.containsCode(param)){
//                        this.codes.push(param);
//                    }else{
//                        this.delCode(param);
//                        this.codes.push(param);
//                    }
//
//                }
				this.imgUrl_main = ""
                this.colors = [];
                this.sizes = [];
                this.price = 0;
                this.location='';
                this.queryDefaultWarehouse();//获取默认仓库

            },
            async search(){
                this.radio3 = '';
                this.radio4 = '';
                let param = {companyId:this.roleForm.compId,warehouseId:this.warehouseId,productCode:this.input3};
                const res = await queryProductInfo(param);
                if(res.isSuccess){
                    let list = res.result;
                    this.productInfoVo = res.result;
                    if(list.length==0&&this.input3!=''){
                        this.$message({
                            duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                            type:'info',
                            message:'商品不存在'
                        });
                        return;
                    }
                    this.price = list[0].unitPrice.toFixed(2);
                    this.productInfo = res.result;
                    let totalStock = 0;
                    for(var a = 0;a<list.length;a++){
                    	if(this.imgUrl_main == "" && list[a].imgUrl_main){
                    		this.imgUrl_main = list[a].imgUrl_main;
                    	}
                        totalStock = totalStock + list[a].stockNum;
                        let color = {
                            value:list[a].colour,
                            label:a
                        }

                        let size = {
                            value:list[a].size,
                            label:a
                        }

                        if(!this.distinctColor(list[a].colour)){
                            this.colors.push(color);
                        }

                        if(!this.distinctSize(list[a].size)){
                            this.sizes.push(size);
                        }
                    }
                    var sizeTemplate = ["S","M","L","XL","2XL","XXL","36","37","38","39","40"];
                    let firstSize = [];
                    sizeTemplate.forEach(obj => {
                    	let flag = false;
                    	this.sizes.forEach((obj2,index) => {
                    		if(obj2.value == obj){
                    			flag = true;
                    			this.sizes.splice(index,1)
                    		}
                    	})
                    	if(flag){
                    		let size = {
	                            value:obj,
	                            label:firstSize.length
	                       }
                    		firstSize.push(size)
                    	}
                    });
                    this.sizes.forEach(obj => {
                    	firstSize.push(obj);
                    });
                    this.sizes = firstSize;

                    this.totalStockNum = totalStock;
                }
            },
            distinctColor(val){
                for(let i=0;i< this.colors.length;i++){
                    let item = this.colors[i];
                    if(item.value == val){
                        return true;
                    }
                }
                return false;
            },
            distinctSize(val){
                for(let i=0;i< this.sizes.length;i++){
                    let item = this.sizes[i];
                    if(item.value == val){
                        return true;
                    }
                }
                return false;
            },
            selectColor(){
                this.sizes=[];
                this.radio4='';
                let totalNum = 0;
                for(var i = 0 ;i<this.productInfo.length;i++){
                    if(this.productInfo[i].colour == this.radio3)
                    {
                        let size = {label:i,value:this.productInfo[i].size}
                        if(!this.distinctSize(this.productInfo[i].size)){
                            this.sizes.push(size);
                        }
                        totalNum = totalNum + this.productInfo[i].stockNum;
                    }
                }
                this.totalStockNum = totalNum;
            },
            selectSize(){
                for(var i = 0 ;i<this.productInfo.length;i++){
                    if(this.productInfo[i].colour ==this.radio3 &&this.productInfo[i].size == this.radio4)
                    {
                        this.productId = this.productInfo[i].productId;
                        this.productVariantId = this.productInfo[i].productVariantId;
                        this.price =  this.productInfo[i].unitPrice.toFixed(2);
                        let seatId = this.productInfo[i].warehouseSeatId;
                        this.productCode = this.productInfo[i].productCode;
                        this.location = this.productInfo[i].warehouseSeatName;
                    }
                }
            },
            addToList(){
                if(this.radio3==undefined||this.radio3==''){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'info',
                        message:'请选择颜色'
                    });
                    return;
                }
                if(this.radio4==undefined||this.radio4==''){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'info',
                        message:'请选择尺寸'
                    });
                    return;
                }
                if(this.price==0||this.num6==0){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'info',
                        message:'请选择数量'
                    });
                    return;
                }
                this.num6 = parseInt(this.num6);
                var tt = [];
                var sameTotal = 0;
                for(var i = 0;i<this.tableData.length;i++){
                    if(this.productVariantId!=this.tableData[i].productVariantId){
                        tt.push(this.tableData[i]);
                    }else{
                        sameTotal = sameTotal + this.tableData[i].orderNum;
                    }
                }
                sameTotal = sameTotal + this.num6;
                this.tableData = [];

                var flag = this.id === 0?true:false;
                if(this.id==undefined&&!flag){
                    this.id = 1;
                }else{
                    this.id = this.id + 1;
                }
                if(sameTotal === 0){
                  sameTotal = this.num6;
                }
                this.closeFee = this.price;
                let param = {
                    "id":this.id,
                    "productId":this.productId,
                    "companyId":this.roleForm.compId,
                    "productVariantId": this.productVariantId,
                    "imgUrl_main": this.imgUrl_main,
                    "color": this.radio3,
                    "size": this.radio4,
                    "orderNum": sameTotal,
                    "closeFee": Number(this.closeFee).toFixed(2),
                    "productCode":this.productCode,
                    "busiCompId":this.compId,
                    "stallCustomerId":this.customerId
                };
                this.tableData.push(param);
                tt.forEach((obj)=>{
                    this.tableData.push(obj);
                });
            },
            async quickShipments(){
                if(this.tableData.length<=0){
                    return;
                }
                this.dialogVisible1 = true;
            },
            async quickShipmentsInfo(){
                if(this.accountType==undefined||this.accountType==''){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type: 'error',
                        message: '请先选择支付方式'
                    });
                    return;
                }

                let params = [];
                let orderDetails = [];
                for(let i = 0 ; i<this.tableData.length;i++){
                    var countFee = this.tableData[i].closeFee*this.tableData[i].orderNum;
                    let orderDetailVO ={
                        "companyId":this.roleForm.compId,
                        "productId":this.tableData[i].productId,
                        "productVariantId": this.tableData[i].productVariantId,
                        "orderNum": this.tableData[i].orderNum,
                        "closeFee": countFee,
                        "orderType":2,
                        "productCode":this.tableData[i].productCode,
                        "busiCompId":this.tableData[i].busiCompId,
                        "stallCustomerId":this.tableData[i].stallCustomerId,
                        "price":this.tableData[i].closeFee
                    };
                    let parameters = {
                        productCode:this.tableData[i].productCode,
                        color:this.tableData[i].color,
                        size:this.tableData[i].size,
                        unitPrice:this.tableData[i].closeFee,
                        orderNum:this.tableData[i].orderNum,
                        totalFee:countFee
                    };
                    orderDetails.push(parameters);
                    params.push(orderDetailVO);
                    this.changeFee = Number(this.changeFee) + (this.tableData[i].closeFee*this.tableData[i].orderNum);
                }
                let p = {
                    "orderType":2,
                    "orderDetailVO":params
                };
                const res = await createReturnOrSalesOrder(p);//出货
                 if(res.isSuccess) {
                     this.orderInfo = res.result.data;
                     //打印
                     if(this.checked){
                         var companyIds = [];
                         companyIds.push(userInfo().companyId);
                         var res1 =await queryStalls({"companyIds":companyIds});
                         if(res1.isSuccess == true){
                             this.stallVo=res1.result.stalls[0];
                         }
                         this.orderInfo.busiCompanyName = this.name;
                         printOrderInfo(this.orderInfo,orderDetails,this.stallVo);
                     }
                     this.tableData = [];
                         this.radio3 = '';
                         this.radio4 = '';
                         var recorderType = '';
                         if(this.accountType=='7'){
                             recorderType = '7';
                         }else{
                             recorderType = '';
                         }
                         //生成流水记录
                         let lp = {
                             "financeItemCode": "31",
                             "memo": "快速出货结算",
                             "companyId":this.roleForm.compId,
                             "accountType":this.accountType,
                             "recordType":recorderType,
                             "changeFee":this.changeFee,
                             "otherCompanyId":this.compId
                         };

                     const record = await createOffLineFinanceRecord(lp);
                     this.changeFee = 0;
                     this.compId = '';
                     if(record.isSuccess){
                         //清空左边商品信息
                         this.name = '匿名卖家';
                         this.input3 = '';
                         this.num6=1;
                         this.totalStockNum = 0;
                         this.supplierName = '';
                         this.searchProduct();
                     }else{
                         this.$message({
                             duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                             type:'error',
                             message:record.errorMsg
                         });
                         return ;
                     }

                     this.$message({
                         duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                         type: 'info',
                         message: '出货成功'
                     });
                     this.radio = '';

                 } else {
                     this.$message({
                         duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                         type: 'error',
                         message:  '操作失败'
                     });
                     return ;
                 }

                 this.compId = '';
                 this.dialogVisible1 = false;
            },

            //总结的方法
            getSummaries(param){
                const { columns, data } = param;
                const sums = [];
                var totalNums = 0;
                var totalMon = 0;
                columns.forEach((column, index) => {
                    sums[index] = 0;
                    if (index === 0) {
                        sums[index] = '合计';
                        return;
                    }else if(index === 1 ||index === 2 || index === 3){
                        sums[index] = '';
                        return;
                    }else if(index === 4){
                        data.forEach((obj)=>{
                            totalNums += obj.orderNum*1;
                        });
                        sums[index] = sums[index] + totalNums;
                        return;
                    }else if(index === 5){
                        data.forEach((obj)=>{
                            totalMon += obj.closeFee * obj.orderNum;
                        });
                        var numbers = sums[index] + totalMon;
                        sums[index] = numbers.toFixed(2);
                        return;
                    }
               });
                return sums;
            },

            formatDate(val){
                if(val==undefined||val==''){
                    return '';
                }
                return formatDate(val,'yyyy-MM-dd hh:mm:ss')
            }

        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/fastShipping2';
    .fastShippingActive{
        border: 1px solid #46cfc5;
        color: #46cfc5;
        background: #fff;
    }
</style>
