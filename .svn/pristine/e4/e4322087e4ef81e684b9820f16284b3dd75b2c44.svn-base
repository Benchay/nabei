<template>
    <div class="fillcontain">
        <ul class="menu">
            <li>
                <router-link :to='{path:"/stallProcurement"}'>采购入库</router-link>
            </li>
            <li class="menuIndex">
                <router-link :to='{path:"/stallPurchase"}'>采购退货</router-link>
            </li>
            <li>
                <router-link :to='{path:"/supplierManagement"}'>供应商管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/purchaseStatistics"}'>采购统计</router-link>
            </li>
        </ul>
        <div class="stallProcurement">
            <router-link :to='{path:"/stallPurchase"}' class="comeBack right">返回</router-link>
            <div class="stallTable">
                <div class="tableTop">
                    <div class="flex left">
                        <div>供应商：{{stockOrder.otherSideCompanyName}}</div>
                        <div>采购员：{{stockOrder.createUserName}}</div>
                        <div>总数量：{{stockOrder.orderNum}}</div>
                        <div>总成本：{{totalPrice}}</div>
                    </div>
                </div>
                <el-table
                    :data="stockOrder.details"
                     @selection-change="handleSelectionChange"
                    style="width: 100%">
                    <el-table-column
                        type="selection"
                        width="55">
                    </el-table-column>
                    <el-table-column
                        label="主图/货号">
                        <template scope="scope">
                            <div class="flex2">
                                <img src="../image/111.png" alt="">
                                <p>{{scope.row.productCode}}</p>
                            </div>
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="colour"
                        label="颜色">
                    </el-table-column>
                    <el-table-column
                        prop="size"
                        label="尺码">
                    </el-table-column>
                    <el-table-column
                        prop="orderNum"
                        label="采购数量">
                    </el-table-column>
                    <el-table-column
                    	prop="price"
                        label="采购成本/元">
                    </el-table-column>
                    
                </el-table>
            </div>
            <div class="date">
                <p>创建时间：{{stockOrder.createTime}}</p>
                <!--根据状态显示-->
                <p v-if="state == 1 ">签收时间：{{stockOrder.updateTime}}</p>
                <!---->
            </div>
            <el-pagination
                small
                class="right"
                style="margin-top: 20px;"
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="pagesize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="totalCount">
            </el-pagination>
            <a href="javascript:void(0)" class="export_excle">导出excel</a>
        </div>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {loadStockOrder,saveStockOrder} from '@/api/getData'
    import {userInfo,getStore,setStore} from  '../config/mUtils'
    import {formatDate} from '../utils/date.js'
    
    export default {
        components: {
            headTop,
        },
        data() {
            return {
                state:2,
                value6: '',
               stockOrder:{
                    detail:[]
               },
               totalPrice:0,
                createTime:'',
                updateTime:'',
                //多选数组
                multipleSelection: [],
            }
        },

        watch: {
            '$route': function (route) {
                this.param = this.$route.query.param;
                this.loadData(this.param);

            }
        },
        mounted(){
            this.param = this.$route.query.param;
            this.loadData(this.param);
        },
        methods: {
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
            },
            handleIconClick(ev) {
                console.log(ev);
            },
            async loadData(param) {
                //  /api/queryStockOrderDetail?companyId=1000&warehouseId=W001&orderType=2,3&pageIndex=1&pageSize=10
                let  requestParam = {
                    "stockOrderId":param
                };
                this.totalPrice = 0;
                const res = await loadStockOrder(requestParam);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '加载数据成功'
                    });
                    this.stockOrder = res.result;
                    this.stockOrder.details.forEach((obj) => {
                    	if(obj.orderNum && obj.price){
                    		this.totalPrice = this.totalPrice + obj.orderNum*obj.price;
                    	}
                    });
                    this.stockOrder.createTime = formatDate(this.stockOrder.createTime,'yyyy-MM-dd hh:mm');
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            //多选响应
            handleSelectionChange: function(val) {
                this.multipleSelection = val;
            },
            async  signIn(status){
                if(this.multipleSelection.length==0){
                    this.$message({type:'error', message:'您没有选择商品!'});
                    return ;
                }
                this.stockOrder.details = this.multipleSelection;
                this.stockOrder.status=status;
                this.$confirm('确认签收吗？')
                    .then(_ => {
                        this.saveStockOrder(this.stockOrder);
                    })
                    .catch(_ => {});
            },

            async saveStockOrder(stockOrder){
                const res = await saveStockOrder(stockOrder);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '签收成功!'
                    });
                    this.param = this.$route.query.param;
                    this.loadData(this.param);
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/stallProcurement';
</style>
