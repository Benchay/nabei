<template>
    <div class="fillcontain">
        <ul class="menu">
            <li>
                <router-link :to='{path:"/webStoreOrderSalesBuy"}'>网店订单</router-link>
            </li>
            <li class="menuIndex2">
                <router-link :to='{path:"/purchaseRequireBuy"}'>采购需求</router-link>
            </li>
            <li>
                <router-link :to='{path:"/orderPurchaseBuy"}'>采购订单</router-link>
            </li>
            <li>
                <router-link :to='{path:"/addShop"}'>绑定店铺</router-link>
            </li>
            <li>
                <router-link :to='{path:"/packageDetails"}'>包裹管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/salesForecast"}'>采购统计</router-link>
            </li>
        </ul>
        <div class="startProcurement">
            <div class="salesOrderTop">
                <div class="topSearch">
                    <el-input
                        placeholder="档口名称搜索"
                        icon="search"
                        size="small"
                        v-model="searchStall"
                        :on-icon-click="handleIconClick">
                    </el-input>
                    <el-input
                        placeholder="货号搜索"
                        icon="search"
                        size="small"
                        v-model="searchProductCode"
                        :on-icon-click="handleIconClick">
                    </el-input>
                </div>
            </div>
            <div class="orderTop flex">
                <div>
                    <el-button class="buttonColor3" @click="purchaseDialogVisible = true" :disabled="unfinished">开始采购</el-button>
                </div>
                <div>
                    <el-button href="javascript:void(0)" class="buttonColor3" @click="showSearchProduct" :disabled="unfinished">手动添加</el-button>
                </div>
                <div class="uploatfile">
                    <el-button href="javascript:void(0)" class="buttonColor3" @click="importf" :disabled="unfinished">导入需求</el-button>
                    <input type="file" id="uploatfile" @change="importf" v-if="accomplish"/>
                </div>
            </div>
            <div class="radioRed" style="margin-top: 20px">
                <el-radio-group v-model="radio" size="small" @change="changeLabel">
                    <el-radio-button label="0">已匹配档口</el-radio-button>
                    <el-radio-button label="1">未匹配(已备注)</el-radio-button>
                    <el-radio-button label="2">未匹配(未备注)</el-radio-button>
                </el-radio-group>
            </div>
            <div>
                <div class="salesOrderTable">
                    <table width="100%" border="0" cellpadding="0" cellspacing="0" class="tableFirst">
                        <tr>
                            <td><el-checkbox v-model="checked" class="left salesCheckbox" v-if="accomplish" :onchange="selectAll()" ></el-checkbox>主图/货号</td>
                            <td>颜色</td>
                            <td>尺码</td>
                            <td>单价</td>
                            <td>采购数量</td>
                            <td>操作</td>
                        </tr>
                    </table>
                    <!--未匹配档口-->
                    <div v-if="unfinished" class="tableHead">
                       <!--表头-->
                       <table width="100%" border="0" cellpadding="0" cellspacing="0" class="buyTable">
                           <tr>
                               <th colspan="3" class="red flex unfinisdhedFirst"><span style="width: 80px;">未匹配到档口</span><img src="../image/unregistered_79.png" alt=""></th>
                              <!-- <th>采购数量：15</th>
                               <th>总金额：3200.00</th>-->
                           </tr>
                       </table>
                       <!--表格内容-->
                       <div class="tableContent2">
                           <table width="100%" border="0" cellpadding="0" cellspacing="0" class="buyTable2">
                               <tr v-for="item in tableNoStall">
                                   <td >
                                       <div class="tdFirst">
                                           <img class="buyImg1" src="../image/111.png" alt="">
                                           <div>{{item.productCode}}</div>
                                       </div>
                                   </td>
                                   <td>{{item.color}}</td>
                                   <td>{{item.size}}</td>
                                   <td>{{item.price}}</td>
                                   <td><el-input v-model="item.requireCnt" style="width: 80px;" ref="input" @blur="editPurchaseFun(item.requireCnt,item.id)" ></el-input></td>
                                   <td>
                                       <div class="tdLast flex2">
                                           <a @click="delePurchase(item.id)"  class="red">删除</a>
                                       </div>
                                   </td>
                               </tr>
                               <!--
                               <tr>
                                   <td>
                                   </td>
                                   <td>白色</td>
                                   <td>XL</td>
                                   <td>250.00</td>
                                   <td><el-input v-model="input" style="width: 80px;"></el-input></td>
                                   <td>
                                       <div class="tdLast flex2">
                                           <a href="javascript:void(0)" class="red">删除</a>
                                       </div>
                                   </td>
                               </tr>-->
                           </table>
                       </div>
                   </div>
                    <!--已匹配档口-->
                    <div>
                    <div v-if="accomplish" class="tableHead">
                        <!--表头-->
                        <div v-for="item in tableDataHad">
                        <table width="100%" border="0" cellpadding="0" cellspacing="0" class="buyTable">
                            <tr>
                                <th><el-checkbox v-model="item.bcheck" :onchange="selectidex(item.stallId)">{{item.stallName}}</el-checkbox></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th>采购数量：{{item.totalNum}}</th>
                                <th>总金额：{{item.totalFee}}</th>
                            </tr>
                        </table>
                        <!--表格内容-->
                        <div class="tableContent2">
                            <table width="100%" border="0" cellpadding="0" cellspacing="0" class="buyTable2">
                                <tr v-for="subitem in item.purchases">
                                    <td>
                                        <div class="tdFirst">
                                            <!--s是否关联商品-->
                                            <div style="width:18px;" class="flex" v-if="">
                                                <img src="../image/correlate.png" alt="" v-if="choose">
                                            </div>
                                            <!---->
                                            <img class="buyImg1" src="../image/111.png" alt="">
                                            <div>{{subitem.productCode}}</div>
                                        </div>
                                    </td>
                                    <td>{{subitem.color}}</td>
                                    <td>{{subitem.size}}</td>
                                    <td>{{subitem.price}}</td>
                                    <td><el-input v-model="subitem.requireCnt" style="width: 80px;" @blur="editPurchaseFun(subitem.requireCnt,subitem.id)" ></el-input></td>
                                    <td>
                                        <div class="tdLast flex2">
                                            <a @click="delePurchase(subitem.id)"   class="red">删除</a>
                                            <a href="javascript:void(0)" class="red" v-if="choose" @click="dialogChangeStall = true">选择档口</a>
                                        </div>
                                    </td>
                                </tr>
                                <!--
                                <tr>
                                    <td>
                                    </td>
                                    <td>白色</td>
                                    <td>XL</td>
                                    <td>250.00</td>
                                    <td><el-input v-model="subitem.requireCnt" style="width: 80px;" @blur="editPurchaseFun(item.requireCnt,item.id)" ></el-input></td>
                                    <td>
                                        <div class="tdLast flex2">
                                            <a href="javascript:void(0)" class="red">删除</a>
                                            <a href="javascript:void(0)" class="red" v-if="choose" @click="dialogChangeStall = true">选择档口</a>
                                        </div>
                                    </td>
                                </tr>-->
                            </table>
                        </div>
                         <!--
                        <div class="tableContent2">
                            <table width="100%" border="0" cellpadding="0" cellspacing="0" class="buyTable2">
                                <tr>
                                    <td>
                                        <div class="tdFirst">

                                            <div style="width:18px;">
                                                <img src="../image/correlate.png" alt="" v-if="choose>1">
                                            </div>

                                            <img class="buyImg1" src="../image/111.png" alt="">
                                            <div>MG110</div>
                                        </div>
                                    </td>
                                    <td>白色</td>
                                    <td>XL</td>
                                    <td>250.00</td>
                                    <td><el-input v-model="input" style="width: 80px;"></el-input></td>
                                    <td>
                                        <div class="tdLast flex2">
                                            <a href="javascript:void(0)" class="red">删除</a>
                                            <a href="javascript:void(0)" class="red" v-if="choose>1">选择档口</a>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>白色</td>
                                    <td>XL</td>
                                    <td>250.00</td>
                                    <td><el-input v-model="input" style="width: 80px;"></el-input></td>
                                    <td>
                                        <div class="tdLast flex2">
                                            <a href="javascript:void(0)" class="red">删除</a>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>-->
                    </div>
                    </div>
                    </div>
                </div>
                <el-pagination
                    class="right"
                    small
                    style="margin-top: 20px;"
                    @size-change="handleSizeChange"
                    @current-change="handleCurrentChange"
                    :current-page="currentPage"
                    :page-sizes="[10,20]"
                    :page-size="8"
                    layout="total, sizes, prev, pager, next, jumper"
                    :total="totalCount">
                </el-pagination>
                <a href="javascript:void(0)" class="export_excle" @click="export2Excel">导出excel</a>
            </div>
        </div>
        <el-dialog
            title="一键采购"
            :visible.sync="purchaseDialogVisible"
            size="tiny">
            <div class="flex2 yjcgDialog">
                <p>商品数量：420/1000</p>
                <p>总金额：￥1000</p>
                <p>确定立即采购所选商品？</p>
            </div>
            <span slot="footer" class="dialog-footer flex2">
                <el-button type="primary" @click="addOrder">确 定</el-button>
                <el-button @click="purchaseDialogVisible = false">取 消</el-button>
            </span>
        </el-dialog>
        <el-dialog
            title="添加新需求"
            :visible.sync="dialogNewRequirement"
            size="tiny">
           <div class="newRequirement radioRed">
               <el-col :span="24" class="flex newList">
                   <el-col :span="5" class="title">商品货号：</el-col>
                   <el-col :span="18" class="content">
                       <el-input v-model="productCode" icon="search" :on-icon-click="searchPurchaseProduct"></el-input>
                   </el-col>
               </el-col>
              <div v-if="commodityInformation">
                  <el-col :span="24" class="flex newList">
                      <el-col :span="5" class="title">商品主图：</el-col>
                      <el-col :span="18" class="content">
                          <img src="../image/111.png" alt="" class="newRequirementImg">
                      </el-col>
                  </el-col>
                  <el-col :span="24" class="flex newList">
                      <el-col :span="5" class="title">颜色：</el-col>
                      <el-col :span="18" class="content">
                          <el-radio-group v-model="radio3" size="small" @change="selectColor">
                              <el-radio-button :label="item.value" v-for="item in colors">{{item.value}}</el-radio-button>
                          </el-radio-group>
                      </el-col>
                  </el-col>
                  <el-col :span="24" class="flex newList">
                      <el-col :span="5" class="title">尺码：</el-col>
                      <el-col :span="18" class="content">
                          <el-radio-group v-model="radio4" size="small" @change="selectSize">
                              <el-radio-button :label="item.value" v-for="item in sizes">{{item.value}}</el-radio-button>
                          </el-radio-group>
                      </el-col>
                  </el-col>
                  <el-col :span="24" class="flex newList">
                      <el-col :span="5" class="title">数量：</el-col>
                      <el-col :span="18" class="content">
                          <el-input-number v-model="productNum" :min="1" size="small"></el-input-number>
                      </el-col>
                  </el-col>
              </div>
           </div>
            <span slot="footer" class="dialog-footer flex2" style="width:100%;padding-top: 30px">
                <a href="javascript:void(0)" @click="addPurchaseProductInfo" class="buttonColor3">确 定</a>
                <a href="javascript:void(0)" @click="dialogNewRequirement = false" class="buttonColor2">取 消</a>
            </span>
        </el-dialog>
        <el-dialog
            title="更换档口"
            :visible.sync="dialogChangeStall"
            size="tiny">
           <div class="changeStall">
               <el-radio-group v-model="radio2" class="changeStallRadio">
                   <el-radio :label="1">档口1：NG110</el-radio>
                   <el-radio :label="2">档口2：NG110</el-radio>
                   <el-radio :label="3">档口3：NG1101111</el-radio>
               </el-radio-group>
           </div>
            <span slot="footer" class="dialog-footer flex2" style="width:100%;">
                <a href="javascript:void(0)" @click="dialogChangeStall = false" class="buttonColor3">确 定</a>
                <a href="javascript:void(0)" @click="dialogChangeStall = false" class="buttonColor2">取 消</a>
            </span>
        </el-dialog>
    </div>
</template>
<script>
    import headTop from '../components/headTop'
    import {setStore,getStore} from  '../config/mUtils'
    import {queryPurchaseRequireByStall,queryPurchaseRequireNoStall,createOrderByPurchaseRequire,importPurchaseReauireOrder,searchProduct,deletePurchase,editPurchase,savePurchaseInfo} from '@/api/getData'
    import {formatDate} from '../utils/date.js'
    import {export_json_to_excel} from '../vendor/Export2Excel.js'

    export default {
        components: {
            headTop,
        },
        filters:{
        	formatDate(time){
        		return formatDate(time,"yyyy-MM-dd hh:mm:ss");
        	}
        },
        data() {
            return {
//                是否关联
                choose:true,
                tableNoStall:[],
                tableDataHad:[],
                commodityInformation:false,
                radio2:1,
                radio3:1,
                radio4:1,
                unfinished:false,
                accomplish:true,
                input:120,
                input2:'',
                productCode:'',
                radio:0,
                searchStall:'',
                searchProductCode:'',
                checked:false,
                purchaseDialogVisible: false,
                dialogNewRequirement:false,
                dialogChangeStall:false,
                tableData: [],
                importExcelData:'',
                currentPage4: 4,
                //默认每页数据量
                pagesize: 8,

                //默认高亮行数据id
                highlightId: -1,

                //当前页码
                currentPage: 1,

                //查询的页码
                start: 1,

                //默认数据总数
                totalCount: 0,

                //用户登录信息暂时写死
            //  currentComp: getStore("curCompany")
                currentComp:{id:'1'},
                productInfo:'',
                colors:[],
                sizes:[],
                productId:'',
                productVariantId:'',
                pdCode:'',
                productNum:1,
                stallType:0,
            }
        },
        async mounted(){
            this.initloadData();

            const s = document.createElement('script');
			s.type = 'text/javascript';
			s.src = 'http://oss.sheetjs.com/js-xlsx/xlsx.full.min.js';
			document.body.appendChild(s);
        },
        methods: {
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
            },
            handleIconClick(){
              console.log(1)
            },
            handleIconClick1(){
                this.commodityInformation = true;
            },
            changeLabel(){
              if(this.radio == 0){
                  this.unfinished = false;
                  this.accomplish = true;
              }else{
                  this.unfinished = true;
                  this.accomplish = false;
              }
              this.initloadData();
            },
            showSearchProduct(){
                this.dialogNewRequirement = true;
            },
            async searchPurchaseProduct(){
                if(this.productCode==undefined||this.productCode==''){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'error',
                        message:'请先输入要搜索的商品货号'
                    });
                    return ;
                }
                this.colors = [];
                this.sizes = [];
               //搜索商品货号
                let param = {
                    "productCode":this.productCode
                };
                const res = await searchProduct(param);
                if(res.isSuccess){
                    this.productInfo = res.result;
                    let table = res.result.prodictVariant;
                    for(let i = 0 ;i<table.length;i++){
                        let color = {
                            value:table[i].colour,
                            label:i
                        }

                        let size = {
                            value:table[i].size,
                            label:i
                        }
                        if(!this.distinctColor(table[i].colour)){
                            this.colors.push(color);
                        }

                        if(!this.distinctSize(table[i].size)){
                            this.sizes.push(size);
                        }
                    }
                    this.commodityInformation = true;
                }
            },
            distinctColor(val){
                for(let i=0;i< this.colors.length;i++){
                    let item = this.colors[i];
                    if(item.value == val){
                        return true;
                    }
                }
                return false;
            },
            distinctSize(val){
                for(let i=0;i< this.sizes.length;i++){
                    let item = this.sizes[i];
                    if(item.value == val){
                        return true;
                    }
                }
                return false;
            },

            selectColor(){
                this.sizes=[];
                let table = this.productInfo.prodictVariant;
                for(var i = 0 ;i<table.length;i++){
                    if(table[i].colour==this.radio3)
                    {
                        let size = {label:i,value:table[i].size}
                        this.sizes.push(size);
                    }
                }
            },
            selectSize(){
                let table = this.productInfo.prodictVariant;
                for(var i = 0 ;i<table.length;i++){
                    if(table[i].colour==this.radio3&&table[i].size==this.radio4)
                    {
                        this.productId = table[i].productId;
                        this.productVariantId = table[i].id;
                        this.pdCode = table[i].productCode;
                        if(this.productInfo.vmstallStatus==1){
                            this.stallType = 0;//线上的档口
                        }else {
                            this.stallType = 1;//线下的档口
                        }
                    }
                }
            },
            async addPurchaseProductInfo(){

                if(this.productId==undefined||this.productId==''||this.productVariantId==undefined||this.productVariantId==''){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'error',
                        message:'请先选择商品规格和数量'
                    });
                    return ;
                }
                let param = {
                    "companyId":'1000',
                    "productId":this.productId,
                    "productVariantId":this.productVariantId,
                    "planCnt":this.productNum,
                    "requireCnt":this.productNum,
                    "productCode":this.productCode,
                    "color":this.radio3,
                    "size":this.radio4,
                    "stallType":this.stallType,
                    "price":this.productInfo.purchasePrice,
                    "totalFee":this.productNum * this.productInfo.purchasePrice,
                    "stallId":this.productInfo.stallId
                };
                const res = await savePurchaseInfo(param);
                if(res.isSuccess){
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'info',
                        message:res.result.msg
                    });
                }else{
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'info',
                        message:res.errorMsg
                    });
                }
                this.dialogNewRequirement = false;
            },

          	//从服务器获取数据
            async initloadData() {
                if(this.radio==0 || this.radio==1){
                    this.findOrderHaveStall();
                }else{
                    this.findOrderNoStall();
                }
            },
            async findOrderHaveStall(){
                var comtest='1000';
                let param ={
                    pageIndex:this.currentPage,
                    pageSize:this.pagesize,
                    stallType:parseInt(this.radio),
                    companyId:comtest,
                    status:0
                }
                const res = await queryPurchaseRequireByStall(param);
                if (res.isSuccess == true) {
                    var data= res.result.data;
                    this.tableDataHad=this.setNocheck(data,false);
                    this.totalCount = res.result.data.totalCount;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
            },
            /*
            *  标示是初始为没有选择
            * */
            setNocheck(data,bselect){
                for(var i=0; i<data.length; i++){
                    data[i].bcheck=bselect;
                }
                console.log(data);
                return data;
            },
            async findOrderNoStall(){
                var comtest='1000';
                let param ={
                    pageIndex:this.currentPage,
                    pageSize:this.pagesize,
                    stallType:this.radio,
                    companyId:comtest,
                    status:0
                }
                const res = await queryPurchaseRequireNoStall(param);
                if (res.isSuccess == true) {
                    this.tableNoStall = res.result.results;
                    this.totalCount = res.result.results.totalCount;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
            },
           	handleCurrentChange:function(val) {
                this.currentPage = val;
                this.initloadData();
            },
            showPurchaseDialog(){		//显示生成需求弹窗
            	this.purchaseDialogVisible = true;
            },
            handleSelectionChange: function(val) {	//多选
                this.multipleSelection = val;
            },
            async addOrder(){		//生成采购订单
                var purchaseIds = [];
                this.multipleSelection.forEach((item) => {
                    purchaseIds.push(item.id);
                })
                let param = {
                	purchaseIds:purchaseIds,
                	companyId:this.currentComp.id
                }
               const res = await createOrderByPurchaseRequire(param);
            	if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: res.result.msg
                    });
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
                this.purchaseDialogVisible = false;
                this.initloadData();
            },
            async export2Excel() {		//导出excel
            	let param ={
            		pageIndex:1,
            		pageSize:5000,
            		companyId:this.currentComp.id,
            		status:0
            	}
                const res = await queryPurchaseRequire(param);
                if (res.isSuccess == true) {
                	 for(let i=0;i<res.result.data.results.length;i++){
                	 	let data1 = res.result.data.results[i];
                	 	if(data1.planTime){
                	 		data1.planTimeShow = formatDate(data1.planTime,"yyyy-MM-dd hh:mm:ss");
                	 	}
                	 }
				　　　const tHeader = ['货号', '颜色','尺码','需求采购数','计划时间'];
				　　　const filterVal = ['productCode', 'color','size','requireCnt','planTimeShow'];
				　　　const list = res.result.data.results;
				　　　const data = this.formatJson(filterVal, list);
				　　　export_json_to_excel(tHeader, data, '采购需求');
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
			},
			async importData(){
				let param = {
	                	jsonStr:this.importExcelData
	               }
               const res = await importPurchaseReauireOrder(param);
            	if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: res.result.msg
                    });
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
			},
			formatJson(filterVal, jsonData) {
		　　　　　　return jsonData.map(v => filterVal.map(j => v[j]));
		　　　},

			async importf(){
				this.importExcelData = '';
				let obj = document.getElementById("uploatfile");
				var wb;//读取完成的数据
            	var rABS = false; //是否将文件读取为二进制字符串
            	if(!obj.files) {
                    return;
                }
                var f = obj.files[0];
                var reader = new FileReader();
                reader.onload =(e) =>{
                    var data = e.target.result;
                    if(rABS) {
                        wb = XLSX.read(btoa(fixdata(data)), {//手动转化
                            type: 'base64'
                        });
                    } else {
                        wb = XLSX.read(data, {
                            type: 'binary'
                        });
                    }

                    //wb.SheetNames[0]是获取Sheets中第一个Sheet的名字
                    //wb.Sheets[Sheet名]获取第一个Sheet的数据
                    this.importExcelData = JSON.stringify( XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]) );

                    this.importData();
                };
                if(rABS) {
                    reader.readAsArrayBuffer(f);
                } else {
                    reader.readAsBinaryString(f);
                }
			},
            async delePurchase(orderid){
                let param ={
                    orderId:orderid,
                    companyId:''
                }
			    const res=await deletePurchase(param);
                if (res.isSuccess == true) {
                    this.initloadData();
                    this.$message({
                        type: 'success',
                        message: res.result.msg
                    });
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
            },
            async editPurchaseFun(value,orderId){
                if(isNaN(value)){
                    this.$message({
                        type: 'error',
                        message: '请输入正确的数字'
                    });
                    return;
                }
                let param ={
                    id:orderId,
                    companyId:'',
                    requireCnt:value
                }
                const res=await editPurchase(param);
                if (res.isSuccess == true) {
                    this.initloadData();
                    this.$message({
                        type: 'success',
                        message: '修改成功'
                    });
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            selectidex(index){
                for(var i=0; i<this.tableDataHad.length; i++){
                    if(this.tableDataHad.stallId==index){
                        if(this.tableDataHad[i].bcheck){
                            this.tableDataHad[i].bcheck=false;
                        }else{
                            this.tableDataHad[i].bcheck= true;
                        }
                        break;
                    }
                }
            },
            //选择所有
            selectAll(){
                var bcheck=false;
                if(this.checked){
                    bcheck=true;
                }else{
                    bcheck=false;
                }
                var data=this.tableDataHad;
                this.tableDataHad=this.setNocheck(data,bcheck);
            },
			fixdata(){ //文件流转BinaryString
                var o = "",
                    l = 0,
                    w = 10240;
                for(; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
        }

    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/startProcurement';
</style>
