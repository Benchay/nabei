<template>
    <div class="fillcontain">
        <ul :class="[identity ==1 ?'stallShareMenu':identity ==2 ?'sellerShareMenu':identity==3?'platformShareMenu':'']">
            <li>
                <router-link :to='{path:"/manageRole"}'>角色管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/manageStaff"}'>员工管理</router-link>
            </li>
            <li class="ListMenu">
                <router-link :to='{path:"/basicInformation"}'>基本资料</router-link>
            </li>
        </ul>
        <div class="basic">
            <div :class="[identity ==1 ?'stallContent':identity ==2 ?'sellerContent':'']" style="padding-left: -30px;">
                <div style="overflow: hidden;width:100%;">
                    <el-col :span="24" class="basicBorder">
                        <!--<form id="upload" enctype="multipart/form-data" method="post">-->
                        <el-col :span="3">
                            <el-upload
                                name="uploadFile"
                                class="avatar-uploader"
                                action="/cws/uploadFile"
                                :show-file-list="false"
                                :before-upload="beforeAvatarUpload"
                                :on-success="handleUserPicSuccess">
                                <img v-show="imageUrl" :src="imageUrl" :onerror="errorPicPath(imageUrl)" class="avatar" width="100" height="100">
                                <i v-show="!imageUrl" class="el-icon-plus avatar-uploader-icon"></i>
                            </el-upload>
                            <p class="changeImg">修改头像</p>
                        </el-col>
                        <!--</form>-->
                        <el-col :span="15" class="basicInfo">
                            <el-col :span="24"><span class="title">用户名：</span><span>{{this.roleForm.userName}}</span></el-col>
                            <el-col :span="8"><span class="title">手机号码：</span><span>{{this.roleForm.mobile | toTel}}</span></el-col>
                            <el-col :span="16"><router-link :to='{path:"/changePassword"}' class="changepwd colorFM">修改密码</router-link></el-col>
                            <!--<el-col :span="24"><span class="title">帐号ID：</span><span>{{this.roleForm.userId}}</span></el-col>-->
                            <el-col :span="24"><span
                                class="title">注册时间：</span><span>{{this.roleForm.registerTime | formatRegisterDate}}</span>
                            </el-col>
                        </el-col>
                        <el-col :span="5">
                            <qrcode v-if="identity ==1" :value="QRcode2" tag="img" :options="{ size: 110 }"></qrcode>
                        </el-col>
                    </el-col>
                </div>
                <div class="flex creationInfo">
                    <p>所在公司</p>
                    <div>
                        <el-button size="small" @click="showCreateCompany"  class="buttonColorFM CreateCom">+创建公司</el-button>
                        <el-button size="small" @click="dialogSearchVisible = true,searchBlock = false">加入公司</el-button>
                    </div>
                </div>
                <div class="basicTable">
                    <el-table
                        max-height="340"
                        :data="tableData">
                        <el-table-column
                            prop="name"
                            label="公司名称"
                            width="200">
                        </el-table-column>
                        <!--<el-table-column-->
                        <!--prop="compCode"-->
                        <!--label="公司代码">-->
                        <!--</el-table-column>-->
                        <el-table-column
                            v-if="identity ==1"
                            prop="serialNub"
                            label="档口编码">
                        </el-table-column>
                        <el-table-column
                            label="公司LOGO">
                            <template scope="scope">
                                <img :src="tableData[scope.$index].logoUrl" v-if="tableData[scope.$index].logoUrl" :onerror="defaultLogo" style="vertical-align: middle;margin:5px auto">
                                <img :src="defaultLogo" v-else="" :onerror="defaultLogo" style="vertical-align: middle;margin:5px auto">
                            </template>
                        </el-table-column>
                        <el-table-column
                            prop="userName"
                            label="管理员">
                        </el-table-column>
                        <el-table-column
                            prop="compScale"
                            label="公司规模"
                            :formatter="formatScale">
                        </el-table-column>
                        <el-table-column label="操作" width="400" prop="power">
                            <template scope="scope">
                                <div v-if=tableData[scope.$index].auditFlag>
                                    <el-button size="small" type="warning">待批准</el-button>
                                </div>
                                <div v-else-if=!tableData[scope.$index].adminFlag>
                                    <!--
                                    <el-button
                                        size="small"
                                    >查看</el-button>-->
                                    <!--<a href="javascript:void(0)"
                                       class="colorFM"
                                       @click="exitCompany(tableData[scope.$index])"
                                    >退出该公司
                                    </a>-->
                                </div>
                                <div v-else=tableData[scope.$index].adminFlag>
                                    <a href="javascript:void(0)"
                                       class="colorFM"
                                       @click="showEditCompany(tableData[scope.$index])"
                                    >编辑
                                    </a>
                                    <a href="javascript:void(0)"
                                       class="colorFM"
                                       @click="deleteRow(scope.$index, tableData)">删除
                                    </a>
                                    <!--<el-button-->
                                    <!--size="small"-->
                                    <!--type="info">-->
                                    <!--<router-link :to='{path:"/messageManagement"}' style="color:#fff;">消息管理-->
                                    <!--</router-link>-->
                                    <!--</el-button>-->
                                    <a href="javascript:void(0)"
                                       class="colorFM"
                                       @click="showCompanyCovert(tableData[scope.$index])">管理转让
                                    </a>
                                </div>
                            </template>
                        </el-table-column>
                    </el-table>

                    <el-pagination
                        small
                        class="right"
                        style="margin-top: 20px;"
                        @size-change="handleSizeChange"
                        @current-change="handleCurrentChange"
                        :current-page="currentPage"
                        :page-sizes="[10, 20, 30, 40,50]"
                        :page-size="pagesize"
                        layout="total, sizes, prev, pager, next, jumper"
                        :total="totalCount">
                    </el-pagination>
                </div>
            </div>
            <!--垫底滚动-->
            <div style="height:160px;">
                &nbsp;
            </div>
        </div>
        <el-dialog title="创建公司" s-on-blur :visible.sync="dialogFormVisible" class="creationGS"
                   :before-close="handleCreateCompanyClose">
            <el-form :model="form" :rules="createCompanyRule" ref="refCreateForm">
                <div class="form">
                    <el-form-item prop="name" label="公司名称：" :label-width="formLabelWidth" style="width: 400px;" >
                        <el-input v-model="form.name" auto-complete="off"></el-input>
                        <!--<div style="color: gray;width: 350px;">(公司名称应不超过30个英文字符或15个中文字符)</div>-->
                    </el-form-item>
                    <el-form-item prop="serialNub" label="档口编码：" :label-width="formLabelWidth" style="width: 400px;" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL">
                        <el-input v-model="form.serialNub" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item prop="marketId" label="所属市场：" :label-width="formLabelWidth" style="width: 400px;" >
                        <el-select v-model="form.marketId" placeholder="请选择市场类型">
                            <el-option
                                v-for="item in marketOptions"
                                :key="item.id"
                                :label="item.name"
                                :value="item.id">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <!--<el-form-item prop="compCode" label="公司代码：" :label-width="formLabelWidth">
                        <el-input v-model="form.compCode" auto-complete="off"></el-input>
                    </el-form-item>-->
                    <!--
                    <el-form-item prop="companyBindingId" label=" 公司类型：" :label-width="formLabelWidth" >
                        <el-select v-model="form.companyBindingId" placeholder="请选择公司类型" @change="myCompanyBindingIdBlur">
                            <el-option label="档口" value="1"></el-option>
                            <el-option label="卖家" value="2"></el-option>
                        </el-select>
                    </el-form-item>-->
                    <el-form-item label="公司LOGO：" :label-width="formLabelWidth">
                        <el-upload
                        	name="uploadFile"
                            class="upload-demo"
                            action="/cws/uploadFile"
                            :on-success="handleAvatarSuccess"
							:before-upload="beforeAvatarUpload"
                            :file-list="fileList">
                            <img v-show="imgUrl_main" :src="imgUrl_main" :onerror="errorPicPath(imgUrl_main)" class="avatar" width="100" height="100">
							  <i v-show="!imgUrl_main" class="el-icon-plus avatar-uploader-icon"></i>
                            <el-button size="small" type="primary">上传LOGO</el-button>
                        </el-upload>
                    </el-form-item>
                    <el-form-item label="公司位置：" :label-width="formLabelWidth" prop="selectedOptions" style="width: 700px;" >
                    	<div class="flex choseRegion">
                            <p>中国</p>
                            <el-cascader
                                style="width: 270px;"
                                size="large"
                                :options="options"
                                v-model="form.selectedOptions"
                                @change="onAddressSelected">
                            </el-cascader>
                        </div>
                    </el-form-item>
                    <el-form-item label="详细地址：" prop="addition" :label-width="formLabelWidth">
                        <el-input
                        	style="width:70%"
                            type="textarea"
                            :rows="2"
                            placeholder="例如街道名称，门牌号码，楼层和房间号等"
                            v-model="form.addition">
                        </el-input>
                    </el-form-item>
                    <el-form-item prop="compScale" label="公司规模：" :label-width="formLabelWidth">
                        <el-select v-model="form.compScale" placeholder="请选择公司规模"  @change="myCompScaleBlur">
                            <el-option label="20人以下" value="1"></el-option>
                            <el-option label="20-50人" value="2"></el-option>
                            <el-option label="50-200人" value="3"></el-option>
                            <el-option label="200-500人" value="4"></el-option>
                            <el-option label="500-1000人" value="5"></el-option>
                            <el-option label="1000人以上" value="6"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item prop="" label="QQ号：" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL" :label-width="formLabelWidth" style="width: 400px;">
                        <el-input v-model="form.qq" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item prop="" label="微信号：" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL" :label-width="formLabelWidth" style="width: 400px;">
                        <el-input v-model="form.weixin" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item prop="" label="旺旺号：" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL" :label-width="formLabelWidth" style="width: 400px;">
                        <el-input v-model="form.wangwang" auto-complete="off"></el-input>
                    </el-form-item>
                </div>

            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="cancelCreateCompany">取 消</el-button>
                <el-button type="primary" @click="createCompany('refCreateForm')">确 定</el-button>
            </div>
        </el-dialog>

        <el-dialog title="管理转让" :visible.sync="dialogFormMember" class="Transferdialog" size="tiny">
            <el-form :model="form">
                <div class="form">
                    <el-form-item label="公司名称：" :label-width="formLabelWidth">
                        <p>{{manageForm.companyName}}</p>
                    </el-form-item>
                    <el-form-item label="当前管理员：" :label-width="formLabelWidth">
                        <p>{{manageForm.ownerName}}</p>
                    </el-form-item>
                    <el-form-item label="转让管理员：" :label-width="formLabelWidth">
                        <el-autocomplete
                            style="width: 250px;"
                            placeholder="请选择..."
                            :fetch-suggestions="querySearchAsync"
                            @select="handleSelect"
                            v-model="input2">
                            <!--<template slot="append"><img src="../image/address_book.png" alt=""
                                                         @click="queryComanyUserInfo"></template>-->
                        </el-autocomplete>
                    </el-form-item>
                    <div class="explain">说明：公司转让成功后，只有新的管理员能管理公司</div>
                </div>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="cancelConvertCompanyAuth">取 消</el-button>
                <el-button type="primary" @click="convertCompanyAuth">确 定</el-button>
            </div>
        </el-dialog>
        <el-dialog title="搜索公司" :visible.sync="dialogSearchVisible" class="dialogSearch"
                   :before-close="handleSearchCompanyClose">
            <div class="search">
                <el-input placeholder="请输入要查找的公司名称" v-model="searchCompany">
                    <el-button slot="append" icon="search" @click="search">搜索</el-button>
                </el-input>
            </div>
            <div v-show="searchBlock">
                <div class="searchNumber">共搜索到 <span> {{this.selectCompanyCount}} </span>条数据</div>
                <div class="searchTable">
                    <el-table
                        height="350"
                        ref="searchCompTable"
                        :data="searchTableData"
                        @row-click="selectedCompanyItem"
                        :row-class-name="tableRowClassName"
                    >
                        <el-table-column
                            prop="name"
                            label="公司名称"
                            width="200">
                        </el-table-column>
                        <el-table-column
                            prop="compCode"
                            label="公司代码">
                        </el-table-column>
                        <el-table-column
                            label="公司LOGO">
                            <template scope="scope">
                                <img src="../image/shops@3x.png" alt="">
                            </template>
                        </el-table-column>
                        <el-table-column
                            prop="compScale"
                            label="公司规模"
                            :formatter="formatScale">
                        </el-table-column>
                        <el-table-column label="" width="200" prop="power">
                            <template scope="scope">
                                <el-button
                                    size="small"
                                    @click="joinCompany(searchTableData[scope.$index])"
                                >+加入公司
                                </el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                </div>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click="closeSearchDialog">取 消</el-button>
                <el-button type="primary" @click="closeSearchDialog">确 定</el-button>
            </div>
        </el-dialog>

        <el-dialog title="加入公司" :visible.sync="dialogJoinCompany" size="tiny" class="JoinCompany"
                   :before-close="handleJoinCompanyClose">
            <div class="company">
                <div class="flex"><img src="../image/shops@3x.png" alt="">{{joinSearchForm.name}}</div>
                <div class="companyInfo">
                    <p>公司规模： <span>{{joinSearchForm.compScale | formatScaleValue }}</span></p>
                    <!--<p>管理员：<span>李四</span></p>-->
                </div>
            </div>
            <div class="joinVerify flex">
                <span class="tit">验证信息：</span>
                <el-input v-model="joinSearchForm.input" placeholder="请输入验证信息"></el-input>
            </div>
            <div slot="footer" class="dialog-footer">
                <el-button @click="cancelJoinCompanyFun">取 消</el-button>
                <el-button type="primary" @click="joinCompanyFun">确 定</el-button>
            </div>
        </el-dialog>

        <el-dialog title="编辑公司" :visible.sync="dialogRedact" class="Redactdialog" :before-close="handleEditClose">
            <el-form :model="editForm" ref="refeditForm" :rules="createCompanyRule">
                <div class="form">
                    <el-form-item prop="name" label="公司名称：" :label-width="formLabelWidth">
                        <!--<el-input v-model="editForm.name" auto-complete="off" placeholder="请输入公司名称"></el-input>-->
                        {{editForm.name}}
                    </el-form-item>
                    <el-form-item label="档口编码 ：" :label-width="formLabelWidth" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL">
                    	<label>{{editForm.serialNum}}</label>
                        <!--<el-input v-model="editForm.serialNum" auto-complete="off" placeholder="请输入公司代码"></el-input>-->
                    </el-form-item>
                    <el-form-item label="所属市场 ：" :label-width="formLabelWidth" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL">
                    	<label>{{editForm.marketName}}</label>
                        <!--<el-input v-model="editForm.serialNum" auto-complete="off" placeholder="请输入公司代码"></el-input>-->
                    </el-form-item>
                    <el-form-item label="公司LOGO：" :label-width="formLabelWidth">
                        <el-upload
                            name="uploadFile"
                            class="upload-demo"
                            action="/cws/uploadFile"
                            :on-success="handleAvatarSuccess"
                            :before-upload="beforeAvatarUpload"
                            :show-file-list="false">
                            <img v-show="imgUrl_main" :src="imgUrl_main" :onerror="errorPicPath(imgUrl_main)" class="avatar" width="100" height="100">
                            <i v-show="!imgUrl_main" class="el-icon-plus avatar-uploader-icon"></i>
                            <el-button size="small" type="primary">上传LOGO</el-button>
                        </el-upload>
                    </el-form-item>
                    <el-form-item label="公司位置：" :label-width="formLabelWidth" prop="selectedOptions">
                        <div class="flex choseRegion">
                            <p>中国</p>
                            <el-cascader
                                style="width: 270px;"
                                size="large"
                                :options="options"
                                v-model="editForm.selectedOptions"
                                @change="onEditAddressSelected">
                            </el-cascader>
                        </div>
                    </el-form-item>
                    <el-form-item label="详细地址：" prop="addition" :label-width="formLabelWidth">
                        <el-input
                        	style="width:70%"
                            type="textarea"
                            :rows="2"
                            placeholder="例如街道名称，门牌号码，楼层和房间号等"
                            v-model="editForm.addition">
                        </el-input>
                    </el-form-item>
                    <el-form-item label="公司规模：" :label-width="formLabelWidth" class="redactSelect">
                        <el-select v-model="editForm.compScale" placeholder="请选择公司规模">
                            <el-option label="20人以下" value="1"></el-option>
                            <el-option label="20-50人" value="2"></el-option>
                            <el-option label="50-200人" value="3"></el-option>
                            <el-option label="200-500人" value="4"></el-option>
                            <el-option label="500-1000人" value="5"></el-option>
                            <el-option label="1000人以上" value="6"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item prop="" label="QQ号：" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL" :label-width="formLabelWidth" style="width: 400px;">
                        <el-input v-model="editForm.qq" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item prop="" label="微信号：" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL" :label-width="formLabelWidth" style="width: 400px;">
                        <el-input v-model="editForm.weixin" auto-complete="off"></el-input>
                    </el-form-item>
                    <el-form-item prop="" label="旺旺号：" v-if="form.companyBindingId== GLOBAL.COMPANY_TYPE_STALL" :label-width="formLabelWidth" style="width: 400px;">
                        <el-input v-model="editForm.wangwang" auto-complete="off"></el-input>
                    </el-form-item>
                </div>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="dialogRedact = false">取 消</el-button>
                <el-button type="primary" @click="saveEditCompany('refeditForm')">确 定</el-button>
            </div>
        </el-dialog>
    </div>
</template>

<style>
    .el-table .info-row {
        background: #5CB85C;
    }

    .el-table .positive-row {
        background: #e2f0e4;
    }
</style>


<script>
    import headTop from '../components/headTop'
    import {setStore, getStore,userInfo} from  '../config/mUtils'
    import {baseImgPath} from '../config/env'
    import {isNullObject,isJson,getCompanyType} from  '../utils/common'
    import { regionData ,CodeToText,TextToCode} from 'element-china-area-data'
    import qrcode from '@xkeshi/vue-qrcode'
    import {saveUser,getStallCardUrl} from '@/api/getData'
    import {
        createCompanyFun,
        getAdminInfo,
        queryCompany,
        requestJoinCompany,
        saveCompany,
        getUserCompanys,
        exitCompany,
        deleteCompany,
        queryUser,
        changeCompanyAuth,
        initDefaultWareHouse,
        initStall,
        saveStall,
        queryStall,
        queryStalls,
        queryVmStall,
        validateStallCode,
        queryMarket
    } from '@/api/getData'
    import {formatDate} from '../utils/date.js'
    import {mydateFormat} from '../utils/dataFormater.js'


    export default {
        components: {
            headTop,
            qrcode
        },
        filters: {
            formatRegisterDate(time) {
                var date = new Date(time);
                return formatDate(date, 'yyyy-MM-dd hh:mm');
            },
            formatScaleValue: function (value) {
                return value;
                var scale = value;
                //console.log("log-?--" + value)
                if (scale == '1') {
                    return "20人以下";
                } else if (scale == '2') {
                    return "20-50人";
                } else if (scale == '3') {
                    return "50-200人";
                } else if (scale == '4') {
                    return "200-500人";
                } else if (scale == '5') {
                    return "500-1000人";
                } else if (scale == '6') {
                    return "1000人以上";
                }
            },
            toTel(str) {
                let start = str.slice(0, 3);
                let end = str.slice(-4);
                return `${start}****${end}`;
            },
        },
        data() {
            var validateCompName = (rule, value, cb) => {
                //console.log(value)
                var pattern = /^\w+$/
                var pattern1 = /^[\u4e00-\u9fa5]+$/
                if (value === '') {
                    cb(new Error('公司名称不能为空'))
                } else if(value.indexOf(' ')>-1){
                	cb(new Error('公司名称不能有空格'));
                }else if (value.length > 30) {
                    cb(new Error('公司名称不能超过30个字符'))
                } else {
                    cb()
                }
            }
            var validateSerialNub = async (rule, value, cb) => {
        		let param = {
            		stallCode:value,
            		pageIndex:1,
            		pageSize:10
            	}
        		var res = await validateStallCode(param);
        		//console.log(res)
        		if(res.isSuccess){
            		this.isStallCodeAvailable = res.result.isAvailable;
                }
                var pattern = /^[A-Za-z0-9]{3,20}/;
                if (!pattern.test(value)) {
                    cb(new Error('3到20位数据或者字母'))
                } else if(this.isStallCodeAvailable == false){
                	cb(new Error('该档口编码已被创建，请使用其他的档口编码'))
                }else{
                    cb()
                }
            }
            var validateCompScale = (rule, value, cb) => {
                if (value === '') {
                    cb(new Error('请选择公司规模'))
                } else {
                    cb()
                }
            }
            /*
            var validateCompanyBindingId = (rule, value, cb) => {

                if (value == '') {
                    cb(new Error('请选择公司类型'))
                } else {
                   cb()
                }
            }*/
            return {
            	options: regionData,
                //1为档口、2为卖家身份
                identity:1,
                userInfo:userInfo(),
                restaurants: [],
                selectAuthUserId: '',
                timeout: null,
                imgUrl_main:'',//公司logo
                input2: '',
                roleForm: {
                    loginname: '',
                    userId: '',
                    roleId: '',
                    compId: '',
                    userName: '',
                    registerTime: '',
                    nickName: '',
                    currentComUid:'',
                    mobile:''
                },
                pagesize: 10,
                //默认高亮行数据id
                highlightId: -1,
                //当前页码
                currentPage: 1,
                //查询的页码
                start: 1,
                //默认数据总数
                totalCount: 0,
				isStallCodeAvailable:true,
                dynamicTags: ['技术总监', 'ui设计师', 'java工程师'],
                fileList: [],
                dialogFormVisible: false,
                dialogFormMember: false,
                manageForm: {
                    companyName: '',
                    ownerName: '',
                    userName:''
                },
                dialogSearchVisible: false,
                dialogJoinCompany: false,
                dialogFormRole: false,
                dialogRedact: false,
                defaultUserPic:'this.src="'+require('../image/icon0111.png')+'"',
                imageUrl: '',
                searchCompany: '',
                input: '',
                searchBlock: false,
                addTime: '',
                defaultProps: {
                    children: 'children',
                    label: 'label'
                },
                tableData: [],
                defaultLogo: 'this.src="' + require('../image/shops@3x.png') + '"',
                searchTableData: [],
                marketOptions:[],
                selectActiveCompanyId: '',
                selectCompanyCount: 0,
                form: {
                    name: '',
                    region: '',
                    selectedOptions:[],
                    addition:'',
                    location: '',
                    serialNub: '',
                    compScale: '',
                    delivery: false,
                    logoUrl: '',
                    companyBindingId:'',
                    marketId:'',
                    qq:'',
                    weixin:'',
                    wangwang:''
                },
                editForm: {
                    name: '',
                    compCode: '',
                    compScale: '',
                    ownerId: '',
                    companyBindingId:'',
                    selectedOptions:[],
                    addition:'',
                    location:'',
                    serialNub:'',
                    marketName:'',
                    marketId:'',
                    qq:'',
                    weixin:'',
                    wangwang:'',
                    stallId:''
                },
                formLabelWidth: '120px',
                joinSearchForm: {
                    compId: '',
                    name: '',
                    nickName: '',
                    compScale: ''
                },
                createCompanyRule: {
                    name: [{validator: validateCompName, trigger: 'blur'}],
                    marketId:[{required:true, message:'请选择所属市场'}],
                    selectedOptions:[{required:true,message:'请选择公司位置'}],
                    addition:[{required:true,message:'请输入详细地址'}],
                    serialNub: [
                    	{required:true, message:'档口编码不能为空', trigger:'blur'},
                        {validator: validateSerialNub, trigger: 'blur'}
                    ],
                    compScale: [
                    	{required:true,message:'请选择公司规模'},
                    	{validator: validateCompScale, trigger: 'blur'}
                    ]
                },
                QRcode2:''

            }
        },
        mounted(){
            this.identity = getCompanyType(getStore("curCompany"));
            var vjson = JSON.parse(getStore("user_info_user"));

            this.imageUrl = vjson.picPath;
            if(this.identity==-1){
            	this.identity= vjson.type;
            }
            //console.log(vjson)
            this.roleForm.userId = vjson.id;
            this.roleForm.mobile = vjson.mobile;
            this.roleForm.userName = vjson.userName;
            this.form.companyBindingId=vjson.type;
            var currentComp = getStore("curCompany");
            this.roleForm.compId =JSON.parse(getStore("userInfo")).companyId;

            //this.roleForm.compId=vjson.curCompany.id;
            //this.changepwdForm.userName=this.roleForm.userName;
            this.roleForm.registerTime = vjson.createTime;
            //console.log("info---" + this.roleForm.registerTime);
            //测试代码
            //this.roleForm.compId='2';
            this.loadInit();
            this.loadMarketData();
            this.QRcode();
        },
        methods: {
        	errorPicPath(imagePath){
        		imagePath='';
        	},
            myCompanyBindingIdBlur(){
                this.$refs.refCreateForm.validateField('companyBindingId');
            },
            myCompScaleBlur(){
                //console.log("================================");
                this.$refs.refCreateForm.validateField('compScale');
            },

            formatScale: function (row, column) {
                var scale = row.compScale;
                if (scale == '1') {
                    return "20人以下";
                } else if (scale == '2') {
                    return "20-50人";
                } else if (scale == '3') {
                    return "50-200人";
                } else if (scale == '4') {
                    return "200-500人";
                } else if (scale == '5') {
                    return "500-1000人";
                } else if (scale == '6') {
                    return "1000人以上";
                }
            },

            mydateFormat,
            formatRegisterDate(time) {
                var date = new Date(time);
                return formatDate(date, 'yyyy-MM-dd hh:mm');
            },
            loadInit(){
                this.currentPage = 1;
                let param = {
                    "userId": this.roleForm.userId,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage
                };
                this.initFormValue();
                this.loadDataWithCondition(param);
            },
             async QRcode(){
                 let param={
                    companyId:this.roleForm.compId,
                };
                 const res = await getStallCardUrl(param);
                    if (res.isSuccess == true) {
                        this.QRcode2 = res.result.url;
                    }
            },
            initFormValue(){
                this.form.name = '';
                this.form.location = '';
                this.form.compCode = '';
                this.form.compScale = '';
            },
            handleSizeChange:function(val){
            	this.pagesize = val;
            	let param = {
            		"userId": this.roleForm.userId,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage
            	}
            	this.loadDataWithCondition(param);
            },
            //页码变更
            handleCurrentChange: function (val) {
                this.currentPage = val;
                let param = {
                    "userId": this.roleForm.userId,
                    "pageSize": this.pagesize,
                    "pageIndex": this.currentPage
                };
                this.loadDataWithCondition(param);
            },
            async loadDataWithCondition(param) {
                const res = await getUserCompanys(param);
                //console.log(param);
                if (res.isSuccess == true) {
                	var tmpData = res.result.data;
                    var companyIds = [];
                    tmpData.forEach((obj)=>{ companyIds.push(obj.id)});
                    var res1 = await queryStalls({"companyIds":companyIds});
                    if(res1.isSuccess == true){
                    	for(var index in res1.result.stalls){
                    		var item = res1.result.stalls[index];
                    		for(var i in tmpData){
                    			if(tmpData[i].id==item.companyId){
                    				tmpData[i].serialNub = item.serialNub;
                    			}
                    		}
                    	}
                    }
                    this.tableData = tmpData;
                    //alert(JSON.stringify(this.tableData))
                    this.totalCount = res.result.totalCount;
                } else {
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            handleClick() {
                console.log(1);
            },
            selectedCompanyItem(row){
                this.selectActiveCompanyId = row.id;
            },
            async exitCompany(data){
                const res = await exitCompany({"companyId": data.id, "userId": this.roleForm.userId});
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '退出成功'
                    });
                    this.loadInit();
                } else {
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            handleEditClose(){
            	this.dialogRedact = false;
            	this.imgUrl_main = '';
            },
            async showEditCompany(data){
                this.editForm.name = data.name;
                this.selectActiveCompanyId = data.id;
                var qa = {
                	"stall":{
                		"companyId":data.id
                	},
                	"pageIndex":1,
                	"pageSize":10
                }
                
                if(this.identity==1){
                	var res = await queryStall(qa);
                	if(res.isSuccess&&res.result.stall != undefined){
	                	var stall = res.result.stall.results[0];
	                	this.editForm.serialNum =  stall.serialNub;
	                	this.editForm.marketName = stall.marketName;
	                	this.editForm.qq = stall.qq;
		                this.editForm.weixin = stall.weixin;
		                this.editForm.wangwang = stall.wangWangAccount;
		                this.editForm.stallId = stall.id;
		                this.editForm.marketId = stall.mariketId;
	                }
                }

                this.editForm.compCode = data.compCode;
                this.editForm.compScale = data.compScale;
                //this.editForm.location=data.location;
                var codes = data.location.split('/');
                if(codes.length==4){
                	this.editForm.selectedOptions = [];
	                var i = 0;
	                this.editForm.selectedOptions.push(TextToCode[codes[i]].code);
	                this.editForm.selectedOptions.push(TextToCode[codes[i]][codes[i+1]].code);
	                if(codes[i+2]) 
	                	this.editForm.selectedOptions.push(TextToCode[codes[i]][codes[i+1]][codes[i+2]].code);
	                this.editForm.addition = codes[3];
                }

                this.imgUrl_main = data.logoUrl;
                this.dialogRedact = true;
            },
            showCompanyCovert(data){
                this.dialogFormMember = true;
                this.selectActiveCompanyId = data.id;
                this.manageForm.companyName = data.name;
                this.manageForm.ownerName = data.userName;
            },
            async saveEditCompany(formName){
                this.$refs[formName].validate(async (valid) => {
                    if (valid) {
                        let dataCompany = {
                            'id': this.selectActiveCompanyId,
                            'createUserId': this.roleForm.userId,
                            'name': this.editForm.name,
                            'ownerId': this.roleForm.userId,
                            'compScale': this.editForm.compScale,
                            'compCode': this.editForm.compCode,
                            'logoUrl':this.imgUrl_main,
                            'location':this.editForm.location+'/'+this.editForm.addition
                        }
                        const res = await saveCompany(dataCompany);
                        if (res.isSuccess == true) {
                        	if(this.identity==1){
                        		const res1 = await saveStall({
	                        		'id':this.editForm.stallId,
	                        		'location': this.editForm.location+'/'+this.editForm.addition,
	                    			'qq':this.editForm.qq,
	                    			'weixin':this.editForm.weixin,
	                    			'wangWangAccount':this.editForm.wangwang,
	                    			'marketId':this.editForm.marketId
	                        	});
	                        	if(res1.isSuccess){
	                        		this.$message({
		                                type: 'success',
		                                message: '修改成功'
		                            });
		                            this.dialogRedact = false;
		                            this.imgUrl_main = '';
		                            this.loadInit();
	                        	}else{
	                        		this.$message({
		                                type: 'error',
		                                message: res.errorMsg
		                            });
	                        	}
                        	}else{
                        		this.$message({
	                                type: 'success',
	                                message: '修改成功'
	                            });
	                            this.dialogRedact = false;
	                            this.imgUrl_main = '';
	                            this.loadInit();
                        	}
                        } else {
                            this.$message({
                                type: 'error',
                                message: res.errorMsg
                            });
                        }
                    }
                });
            },
            tableRowClassName(row, index) {
                /*
                 if (index === 1) {
                 return 'info-row';
                 } else if (index === 3) {
                 return 'positive-row';
                 }
                 return '';*/
                if (row.operation) {
                    return 'info-row'
                } else {
                    return ''
                }
            },
            //删除公司
            async deleteRow(index, rows) {
                var compName = rows[index].name;
                this.$confirm('是否确认删除 '+compName+' ?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(async () => {
                    var compid = rows[index].id;
	                const res = await deleteCompany({"companyId": compid, "userId": this.roleForm.userId});
	                //console.log(res);
	                if (res.isSuccess == true) {
	                    this.$message({
	                        type: 'success',
	                        message: '删除成功'
	                    });
	                    this.loadInit();
	                    var curComp = getStore('curCompany');
	                    if(!isNullObject(curComp)){
	                    	const comp = JSON.parse(curComp);
	                    	if(comp.id==compid){
	                    		var userInfo = getStore('userInfo');
	                    		var curCompany = JSON.parse(userInfo).curCompany;
	                    		if(curCompany.id!=curComp.id){
	                    			setStore('curCompany',JSON.stringify(curCompany));
	                    		}else{
	                    			setStore('curCompany','');
	                    		}
	                    		location.reload();
	                    	}
	                    }
	                    window.clearTimeout(this.timeout);
                        this.timeout = setTimeout(()=>{
                        	location.reload();
                        },300);
	                } else {
	                    this.$message({
	                        type: 'error',
	                        message: res.errorMsg
	                    });
	                }
                }).catch(() => {

                });

            },
            toggleSelection(rows) {
                if (rows) {
                    rows.forEach(row => {
                        this.$refs.multipleTable.toggleRowSelection(row);
                    });
                } else {
                    this.$refs.multipleTable.clearSelection();
                }
            },
            handleSelectionChange(val) {
                this.multipleSelection = val;
            },
            handleClose(tag) {
                this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
            },
			async handleUserPicSuccess(res1, file){
		    	this.imageUrl = baseImgPath + res1.result;
		    	this.userInfo.picPath = this.imageUrl;
		    	const res = await saveUser(this.userInfo);
				if (res.isSuccess == true) {
					var user = JSON.parse(getStore('user_info_user'));
					var userIn = userInfo();
					user.picPath = this.imageUrl;
					userIn.picPath = this.imageUrl;
					setStore('user_info_user',user);
					setStore('userInfo',userIn);
				    this.$message({
				        type: 'success',
				        message: '修改成功'
				    });
				    this.$router.go(0);
				}else{
				    this.$message({
				        type: 'error',
				        message: res.errorMsg
				    });
				}
		   },
//          handleRemove(file, fileList) {
//              console.log(file, fileList);
//          },
//          handlePreview(file) {
//              console.log(file);
//          },
            handleClose(tag) {
                this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
            },
            handleAvatarSuccess(res, file) {
            	this.imgUrl_main = baseImgPath+res.result;
            	console.log('上传成功：'+this.imgUrl_main);
		    },
		    beforeAvatarUpload(file) {
		        const isJPG = file.type === 'image/jpeg';
		        const isPNG = file.type === 'image/png';
		        const isLt2M = file.size / 1024 / 1024 < 2;

		        if (!isJPG && !isPNG) {
		          this.$message.error('上传头像图片只能是 JPG或PNG 格式!');
		        }
		        if (!isLt2M) {
		          this.$message.error('上传头像图片大小不能超过 2MB!');
		        }
		        return (isJPG||isPNG) && isLt2M;
		    },
            handleSearchCompanyClose(){
                this.searchCompany = '';
                this.dialogSearchVisible = false;
            },
            closeSearchDialog(){
                this.searchCompany = '';
                this.dialogSearchVisible = false;
            },
            async search(){
                if (this.searchCompany == ''||this.searchCompany.trim()=='') {
                    this.$message({
                        type: 'error',
                        message: '请输入公司名称'
                    });
                    return false;
                }
                let dataCompany = {
                    'company': {
                    	"name": this.searchCompany.trim(),
                    	"type": this.identity
                    },
                    'pageSize': 1000,
                    'pageIndex': 1,
                }

                const res = await queryCompany(dataCompany);
                //console.log(res);
                if (res.isSuccess == true) {
                    this.searchBlock = true;
                    this.searchTableData = res.result.data;
                    this.selectCompanyCount = res.result.data.length;
                } else {
                    this.searchBlock = false;
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            joinCompany(data){
                if (data.id == '') {
                    this.$message({
                        type: 'error',
                        message: '请选择要加入的公司'
                    });
                    return false;
                }
                this.joinSearchForm.compId = data.id;
                this.joinSearchForm.name = data.name;
                this.joinSearchForm.compScale = data.compScale;
                this.dialogJoinCompany = true;
                //this.joinSearchForm.name

            },
            handleJoinCompanyClose(){
                this.cancelJoinCompanyFun();
            },
            cancelJoinCompanyFun(){
                this.joinSearchForm.input = '';
                this.dialogJoinCompany = false;
            },
            async joinCompanyFun(){
                var compId = this.joinSearchForm.compId;
                var input = this.joinSearchForm.input;
                if(input==''||input.trim()==''){
                    this.$message({
                        type:'error',
                        message:'请输入验证信息'
                    });
                    return;
                }else if(input.trim().length > 30){
                    this.$message({
                        type:'error',
                        message:'验证信息不能超过30个字符'
                    });
                    return;
                }
                const res = await requestJoinCompany({"userId": this.roleForm.userId, "companyId": compId,"verifyingInfo":input});
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '您的申请已经提交，请等待该公司审核！'
                    });
                    //;location.reload()
                    this.joinSearchForm.input = '';
                    this.dialogJoinCompany = false;
                    this.dialogSearchVisible = false;
                    this.loadInit();
//                  clearTimeout(this.timeout);
//                  this.timeout = setTimeout(()=>{
//                  	this.loadInit();
//                  	}, 1000);
                } else {
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            showCreateCompany(){
            	this.form.selectedOptions = [];
            	this.form.addition = '';
            	this.imgUrl_main = '';
            	this.dialogFormVisible = true;
            },
            handleCreateCompanyClose(){
                this.dialogFormVisible = false;
                this.initFormValue();
            },
            cancelCreateCompany(){
                this.dialogFormVisible = false;
                this.initFormValue();
            },
            //地址选择事件
            onAddressSelected(data){
            	var table = this.form.selectedOptions;
            	var values = [];
            	table.forEach((obj)=>{
            		values.push(CodeToText[obj]);
            	});
        		this.form.location = values.join('/');
        	},
        	onEditAddressSelected(data){
        		var table = this.editForm.selectedOptions;
            	var values = [];
            	table.forEach((obj)=>{
            		values.push(CodeToText[obj]);
            	});
            	this.editForm.location = values.join('/');
            	if(values.length==2){
            		this.editForm.location = values.join('/')+'/';
            	}
        	},
        	async loadMarketData(){
        		var res = await queryMarket({'createUserId':''});
        		console.log(res);
        		if(res.isSuccess){
        			this.marketOptions = res.result.market.results;
        		}
        	},
            //
            async createCompany(formName) {
                this.$refs[formName].validate(async (valid) => {
                    if (valid) {
                    	if(this.form.addition==undefined||/^\s*$/.test(this.form.addition)){
                    		this.$message({
                    			type:'error',
                    			message:'请填写详细地址'
                    		})
                    		return;
                    	}
                        this.userId = this.roleForm.userId;
                        let dataCompany = {
                            'name': this.form.name,
                            'ownerId': this.userId,
                            'createUserId': this.userId,
                            'location': this.form.location+'/'+this.form.addition,
                            'compScale': this.form.compScale,
                            'type':this.form.companyBindingId,
                            'logoUrl':this.imgUrl_main
                        }
                        if(this.form.companyBindingId== this.GLOBAL.COMPANY_TYPE_STALL ){
                            if(this.form.serialNub==''){
                                this.$message({
                                    type: 'error',
                                    message: '请输入档口编码'
                                });
                                return;
                            }
                        }
                        const res = await createCompanyFun(dataCompany);
                        if (res.isSuccess == true) {
                        	//初始化仓库
                        	var msgtitle='创建成功';
                        	this.imgUrl_main;
                        	if(this.form.companyBindingId== this.GLOBAL.COMPANY_TYPE_STALL ){
                        		const res2= await initDefaultWareHouse({
                        			"companyId":res.result.id,
                        			"name":"默认仓库",
                        			"memo":"默认仓库"
                        		});
                        		if(res2.isSuccess == true){
                        			msgtitle='创建成功';
                        		}
                                let stallpara = {
                                    "companyId":res.result.id,
                                    'name': this.form.name,
                                    'serialNub': this.form.serialNub,
                                    'createUserId': this.userId,
                                    'location': this.form.location+'/'+this.form.addition,
                        			'qq':this.form.qq,
                        			'weixin':this.form.weixin,
                        			'wangWangAccount':this.form.wangwang,
                        			'marketId':this.form.marketId
                                }
                                const res3=await initStall(stallpara);
                                if(res3.isSuccess == true){
                                    msgtitle='创建成功';
                                }
                        	}else{
                        		msgtitle='创建成功';
                        	}

                        	this.$message({
                        			duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                                	type: 'success',
                                	message: msgtitle,
                                	showClose:true
                            });
                            this.dialogFormVisible = false;
                            this.loadInit();
                            window.clearTimeout(this.timeout);
                            this.timeout = setTimeout(()=>{
                            	location.reload();
                            },300);
//                          this.form.selectedOptions = [];
//                      	this.form.addition='';
//                      	this.form.seralNub='';
                            //this.$router.push({path: '/manage',query:{userId:res.result.userId}})
                        } else {
                            this.$message({
                                type: 'error',
                                message: res.errorMsg
                            });
                        }
                    } else {
                        console.log("error=====")
                    }
                });
            },
            converUserFun(resdata){
                var jsonArray = [];
                for (var i = 0; i < resdata.length; i++) {
                    var resultData = resdata[i];
                    var json = new Object;
                    json.value = resultData.userName; //显示
                    json.id = resultData.id;
                    jsonArray.push(json);
                }
                return jsonArray;

            },
            async querySearchAsync(queryString, cb) {
            	if(this.restaurants.length < 1){
        			const res = await queryUser({"compId": this.selectActiveCompanyId, "page": 1, "pageSize": 2000});
	                if (res.isSuccess == true) {
	                    this.restaurants = this.converUserFun(res.result.data);
	                    //console.log( this.restaurants );
	                }
        		}

                var restaurants = this.restaurants;
                var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;
                clearTimeout(this.timeout);
                this.timeout = setTimeout(() => {
                    cb(results);
                }, 2000 * Math.random());
            },
            createStateFilter(queryString) {
                return (state) => {
                    return (state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);
                };
            },
            handleSelect(item) {
                //console.log(item);
                this.selectAuthUserId = item.id;
            },
            cancelConvertCompanyAuth(){
                this.dialogFormMember = false;
                this.selectAuthUserId = '';
            },
            async convertCompanyAuth(){
                if (this.selectAuthUserId === '') {
                    this.$message({
                        type: 'error',
                        message: '请选择要转让的用户'
                    });
                }
                const res = await changeCompanyAuth({
                    "ownerId": this.selectAuthUserId,
                    "operaUserId": this.roleForm.userId,
                    "companyId": this.selectActiveCompanyId
                });
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '转让成功'
                    });
                    this.dialogFormMember = false;
                    this.loadInit();
                    //this.input2 = '';
                } else {
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
        },
    }
</script>

<style lang="less">
    @import '../style/mixin.less';
    @import "../style/common";
    @import '../style/basicInformation';
</style>
