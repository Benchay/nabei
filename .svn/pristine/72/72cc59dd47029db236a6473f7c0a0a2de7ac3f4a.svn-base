<template>
    <div class="fillcontain">
        <ul class="menu">
            <li>
                <router-link :to='{path:"/stallProcurement"}'>采购入库</router-link>
            </li>
            <li class="menuIndex">
                <router-link :to='{path:"/stallPurchase"}'>采购退货</router-link>
            </li>
            <li>
                <router-link :to='{path:"/supplierManagement"}'>供应商管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/purchaseStatistics"}'>采购统计</router-link>
            </li>
        </ul>
        <div class="promptlyReturns radioRed">
            <el-col :span="10" class="isLeft">
            	<el-col :span="24" class="flex leftList">
                   
                    <div class="fastTop flex2">
		                <div class="title">供应商：</div>
		                <div class="content">
		                    <span> {{supplierName}}</span>
		                    <a href="javascript:void(0)" class="comeBack" @click="handleSelectSupplier">选择</a>
		                </div>
		            </div>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title">仓库：</el-col>
                    <el-col :span="18" class="content" v-show="colors.length > 0">
                        <el-input
		                    size="small"
		                    class="topInput dropdown-menu"
		                    placeholder="仓库"
		                    icon="search"
		                    v-model="supplier.name"
		                    :on-icon-click="initloadData">
		                </el-input>
                    </el-col>
                </el-col>
                <el-col :span="24" class="leftList leftList2">
                    <div class="flex">
                        <el-col :span="4" class="title">货号：</el-col>
                        <el-col :span="19" class="content" style="width:300px">
                            <el-input icon="search" v-model="productCode" placeholder="请输入货号..." :on-icon-click="searchPurchaseProduct"></el-input>
                        </el-col>
                    </div>
                    <el-col :span="4">&nbsp;</el-col>
                    <el-col :span="19" class="content">
                        <div class="contentInfo flex">
                            <img src="../image/111.png" alt="">
                        </div>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title">颜色：</el-col>
                    <el-col :span="18" class="content" v-show="colors.length > 0">
                        <el-radio-group v-model="colorRadio" @change="selectColor">
                            <el-radio-button :label="item.value" v-for="item in colors" >{{item.value}}</el-radio-button>
                        </el-radio-group>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title">尺码：</el-col>
                    <el-col :span="18" class="content" v-show="sizes.length > 0">
                        <el-radio-group v-model="sizeRadio" @change="selectSize">
                            <el-radio-button :label="item.value" v-for="item in sizes" >{{item.value}}</el-radio-button>
                        </el-radio-group>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title">数量：</el-col>
                    <el-col :span="18" class="content">
                        <el-input-number v-model="stockNum" :min="0" :max="maxStockNum"></el-input-number>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex leftList">
                    <el-col :span="4" class="title">退货价格：</el-col>
                    <el-col :span="18" class="content">
                        <div style="width: 180px;">
                            <el-input placeholder="" v-model="purchasePrice">
                                <template slot="prepend">￥</template>
                            </el-input>
                        </div>
                    </el-col>
                </el-col>
                <el-col :span="24" class="flex2 leftButton">
                    <a href="javascript:void(0)" class="buttonColor" @click="addPurchaseList">加入退货清单</a>
                </el-col>
            </el-col>
            <el-col :span="14" class="isRight">
                <div>退货清单</div>
                <div class="rightDelete right"><a href="javascript:void(0)"  class="buttonColor" @click="batchDeleteConfig">删除</a></div>
                <el-table
                    :data="purchaseDataList"
                    class="rightTable"
                    show-summary
                    @selection-change="handleSelectionChange"
                    height="400"
                    style="width: 100%">
                    <el-table-column
                        type="selection"
                        width="55"
                    >
                    </el-table-column>
                    <el-table-column
                        label="主图/货号">
                        <template scope="scope">
                            <div class="flex2 tableFirst">
                                <img src="../image/111.png" alt=""  class="tableImg">
                                <p>{{scope.row.productCode}}</p>
                            </div>
                        </template>
                    </el-table-column>
                    <el-table-column
                        prop="color"
                        v-model="color"
                        label="颜色">
                    </el-table-column>
                    <el-table-column
                        prop="size"
                        v-model="size"
                        label="尺码">
                    </el-table-column>
                    <el-table-column
                    	prop="orderNum"
                        v-model="orderNum"
                        label="数量">
                    </el-table-column>
                    <el-table-column
                    	prop="closeFee"
                        v-model="closeFee"
                        label="金额">
                    </el-table-column>
                </el-table>
                <!--<div class="tips">-->
                    <!--<p>*提示：</p>-->
                    <!--<p>1.商品默认显示档口当前在售价，价格有变动可自行协商档口，手动调整！<br/>-->
                        <!--2.点击开始匹配后，系统会自动匹配档口</p>-->
                <!--</div>-->
                <el-col :span="24" class="flex2 payButton">

                    <a href="javascript:void(0)" class="buttonColor" @click="confirmSalesReturn">保存</a>

                </el-col>
            </el-col>
        </div>
        <el-dialog
            title="所有供应商"
            :visible.sync="dialogSupplierVisible"
            size="tiny">
            <div>
                <el-input
                    class="startInput"
                    placeholder="供应商名称"
                    icon="search"
                    v-model="supplierName" @change="findSupplierList">
                </el-input>
               <div class="startRadio">
                   <el-radio class="radio" :ref='list.id' v-model="supplierRadio" :label="list.id" v-for="list in supplierList">{{list.name}}</el-radio>
               </div>
            </div>
            <span slot="footer" class="dialog-footer flex2">
                <a href="javascript:void(0)" class="buttonColor" @click="handleSelectedSupplier">确 定</a>
            </span>
        </el-dialog>
    </div>
</template>
<script>
    import headTop from '../components/headTop'
    import {findSupplierList,loadProductInfo} from '@/api/getData'
    import {userInfo,getStore,setStore} from  '../config/mUtils'
    export default {
        components: {
            headTop,
        },
        data() {
            return {
            	supplier:{},//供应商
            	warehouse:{},//仓库
            	productCode:'',//货号
            	productVariantData:[],//商品变体集合
            	
            	product:{},//采购商品
            	
            	purchaseData:[],//退货清单数据
            	
            	colors:[],//颜色集
            	
            	sizes:[],//尺码集
            	
            	colorRadio:'',//选择颜色
            	
            	sizeRadio:'',//选择尺码
            	
            	stockNum:0,//退货数量
            	
            	purchasePrice:'',//退货价格
            	
            	purchaseDataList:[],//退货清单数据
            	
            	dialogSupplierVisible:false,//供应商弹窗
            	
            	supplierList:[],//供应商列表
            	
            	supplierName:'',//供应商名称
            	
            	supplierId:'',//供应商id
            	
            	supplierRadio:'',//选择的供应商
            	
            	maxStockNum:100,
            	
            	productInfo:'',
                productConfigs:{
                    productInfo:{name:'',stockNum:''},
                    sizeSet:['L','XL'],
                    colourSet:['aa','bb']
                },
                
                productVariant:[],
            }
        },
        mounted(){
        	this.initData();
        },
        methods: {
            handleSelectSupplier(){
                this.dialogVisible = true;
            },
            isShow(){
                this.queryProductInfo();
            },
            async initData(){
                
            },
            
            initloadData(){
            	
            },
            
            searchPurchaseProduct(){
            	this.colors = [];
            	this.sizes = [];
            	this.loadProductInfo();
            },
            
            async loadProductInfo(){
            	if(this.productCode==''){
                    this.$message({
                        type: 'error',
                        message: '请输入货号！'
                    });
                    return

                }
            	let param = {
        			productCode:this.productCode,
        			companyId:'402880585fca1133015fca1634b10004'
        		}
            	const res = await loadProductInfo(param);
            	if (res.isSuccess == true) {
                    if(res.result.productVariant.length>0){
                        this.$message({
                            type: 'success',
                            message: '加载数据成功'
                        });
                        this.productVariant = res.result.productVariant;
                        if(res.result.colours){
                        	res.result.colours.split("/").forEach((obj) => {
                        		let row = {value:obj}
                        		this.colors.push(row);
                        	})
                        }
                        if(res.result.sizes){
                        	res.result.sizes.split("/").forEach((obj) => {
                        		let row = {value:obj}
                        		this.sizes.push(row);
                        	})
                        }
                        this.tableData = res.result.productVariant;
                        this.productInfo =res.result.productVariant;
                    }else{
                        this.$message({
                            type: 'error',
                            message: '没有查询到数据！'
                        });
                        return
                    }
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            
            filterProductConfigs(productInfo){
                if(productInfo.length>0){
                    this.productConfigs.productInfo.name =productInfo[0].title;
                    let productNum  =0;
                    productInfo.forEach((obj) => productNum+=obj.stockNum);
                    this.productConfigs.productInfo.stockNum =productNum;
                    let sizeSet = new Set();
                    productInfo.forEach((obj) => sizeSet.add(obj.size));
                    this.productConfigs.sizeSet = [...sizeSet];
                    let colourSet = new Set();
                    productInfo.forEach((obj) => colourSet.add(obj.colour));
                    this.productConfigs.colourSet = [...colourSet];
                }

            },
            
            selectColor(){
            	
            },
            
            selectSize(){
            	
            },
            
            addPurchaseList(){
            	if(this.productCode == ''){
            		this.$message({
                        type: 'error',
                        message: '请输入货号！'
                    });
                    return;
            	}
            	if(this.colorRadio == '' || this.sizeRadio == ''){
            		this.$message({
                        type: 'error',
                        message: '请选择规格信息！'
                    });
                    return;
            	}
            	if(this.stockNum == ''){
            		this.$message({
                        type: 'error',
                        message: '请输入退货数量！'
                    });
                    return;
            	}
            	if(this.purchasePrice == ''){
            		this.$message({
                        type: 'error',
                        message: '请输入退货价格！'
                    });
                    return;
            	}
            	let row = {
            		productCode:this.productCode,
            		color:this.colorRadio,
            		size:this.sizeRadio,
            		orderNum:this.stockNum,
            		closeFee:this.purchasePrice
            	}
            	this.purchaseDataList.push(row);
            },
            
            batchDeleteConfig(){
            	if(this.multipleSelection == undefined || this.multipleSelection.length==0){
                  this.$message({
                        type: 'error',
                        message: '请先勾选要删除的数据！'
                    });
                    return;
              }
               
                this.multipleSelection.forEach((item,index) => {
                    
                })
            },
            
            //多选响应
            handleSelectionChange: function(val) {
            	alert(val);
                this.multipleSelection = val;
            },
            
            handleSelectSupplier(){
                  this.dialogSupplierVisible = true
            },
            
            async findSupplierList(){
            	if(this.supplierName==''){
                    return
                }

                let  param = {
                    "companyId": userInfo().companyId,
                    "type":2,
                    "name":this.supplierName
                }

                const res = await findSupplierList(param);
                this.supplierList = res.result;
            },
            
            handleSelectedSupplier(){
                if(this.supplierRadio==''){
                    this.$message({
                        type: 'error',
                        message: '未选择数据！'
                    });
                    return
                }

                this.supplierId = this.supplierRadio
                this.supplierName =  this.$refs[this.supplierRadio][0].$el.innerText
                alert(this.supplierId);
                alert(this.supplierName);
                this.dialogSupplierVisible = false
            },
            
        }
    }
</script>
<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/stallPurchaseReturn';
    
    .startRadio{
        margin-top: 20px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        label{
            height: 40px;
            padding-left: 50px;
        }
    }
</style>
