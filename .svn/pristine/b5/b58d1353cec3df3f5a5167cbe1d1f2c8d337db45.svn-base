<template>
    <div class="fillcontain">
        <ul :class="[identity ==1 ?'stallShareMenu':identity ==2 ?'sellerShareMenu':'']">
            <li v-if="getMenuAuthFun('financialManagement')">
                <router-link :to='{path:"/financialManagement"}'>账户总览</router-link>
            </li>
            <li class="ListMenu" v-if="getMenuAuthFun('financialManagement2')">
                <router-link :to='{path:"/financialManagement2"}'>财务交易记录</router-link>
            </li>
            <li v-if="getMenuAuthFun('accountSetting')">
                <router-link :to='{path:"/accountSetting"}'>账户设置</router-link>
            </li>
        </ul>
        <div class="returns-content">
            <div class="returnsAll">
                <div class="right">
                    <!--<router-link :to='{path:this.backPath}' class="comeBack">返回</router-link>-->
                    <a href="javascript:void(0)" class="comeBack" @click="returnBack">返回</a>
                </div>
                <div class="orderDetails">
                     <div class="flex detailsLeft">
                        <img :src="orderImgUrl_main" alt="">
                        <div>
                            <p>订单编号：{{this.orderCode}}</p>
                            <p>卖家名称：{{this.busiName==undefined||this.busiName==''?'匿名卖家':this.busiName}}</p>
                            <p>总采购数：{{this.totalNum}}</p>
                        </div>
                    </div>
                    <div  class="detailsCenter">
                        <p>结算状态：{{checkSettlementStatus(this.orderVo.closeStutas)}}</p>
                        <p>配货总金额：<span class="title">￥{{this.totalFee}}</span></p>
                       <p>已结算金额：<span class="title">￥{{this.orderVo.closeFee}}</span></p>
                    </div>
                    <div class="flex detailsRight" >
                        <a href="javascript:void(0)" @click="queryOrderLogInfo" v-if="this.status!=50">
                            <div>
                                <p class="blue2">订单动态</p>
                                <p>{{checkedStatus(status)}}</p>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="indentPicking">
                    <div class="left" v-show="this.isShowPackage">
                        <ul class="flex2">
                            <li v-for="(obj,index) in packageList" @click="salesTabs(index)"  :class="{'change6':index === clickIndex}" class="flex2"><a href="javascript:void(0);">{{obj.name}}</a></li>
                        </ul>
                    </div>
                    <div class="right" v-show="packageId=='-1'?false:true">
                        <p><i class="ynbgwrap"><img src="../image/ynbg.png" width="100%" height="100%" alt="" v-if="this.currPackageLogState!=-1&&this.currPackageLogState!=0"></i>当前包裹编号：{{packageCode}}</p>
                    </div>
                </div>
                <div class="returnsTable">
                    <el-table
                        :data="tableData"
                        height="330"
                        style="width: 100%">
                        <el-table-column
                            width="230"
                            label="主图/货号">
                            <template scope="scope">
                                <div class="flex">
                                    <img :src="scope.row.imgUrl_main" alt=""  class="tableImg">
                                    <p>{{scope.row.productCode}}</p>
                                </div>
                            </template>
                        </el-table-column>
                        <el-table-column
                            prop="productName"
                            width="230"
                            label="商品名称">
                        </el-table-column>
                        <el-table-column
                            prop="color"
                            label="颜色">
                        </el-table-column>
                        <el-table-column
                            prop="size"
                            label="尺码">
                        </el-table-column>
                        <el-table-column
                            prop="unPackedNum"
                            label="数量"
                            v-if="this.packageId=='-1'">
                        </el-table-column>
                        <el-table-column
                            prop="containProductNum"
                            label="数量"
                            v-if="this.packageId !='-1'">
                        </el-table-column>
                        <el-table-column
                            prop="price"
                            label="单价">
                        </el-table-column>
                    </el-table>
                </div>
                <el-pagination
                    small
                    class="right"
                    style="margin-top: 20px;"
                    @size-change="handleSizeChange"
                    @current-change="handleCurrentChange"
                    :current-page="currentPage"
                    :page-sizes="[10, 20, 30, 40]"
                    :page-size="pageSize"
                    layout="total, sizes, prev, pager, next, jumper"
                    :total="totalCount">
                </el-pagination>
                <a href="javascript:void(0)" class="export_excle left">导出excel</a>
                <el-dialog
                    title="订单动态"
                    :visible.sync="dialog1"
                    size="small">
                    <div class="dynamic">
                        <el-col :span="12">档口名称：{{this.stallName}}</el-col>
                        <el-col :span="12">{{this.checkedStatus(this.status)}}</el-col>
                        <el-col :span="12">订单编号：{{this.orderCode}}</el-col>
                    </div>
                    <el-col class="dynamicList">
                        <div class="track-rcol">
                            <div class="track-list">
                                <ul>
                                    <li v-for="item in logList">
                                        <i class="node-icon"></i>
                                        <span class="time">{{formatDate(item.createTime)}}</span>
                                        <div class="txt">
                                            <p>{{item.description}}</p>
                                            <p v-if="item.optType==1||item.optType==2">配货员：{{item.nickName}}</p>
                                            <p v-if="item.optType==1||item.optType==2">联系电话：{{item.mobile}}</p>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </el-col>
                </el-dialog>
            </div>
        </div>
    </div>
</template>
<script>
    import headTop from '../components/headTop'
    import {queryPackage,queryPackageList,findOrderDetail,queryOrderLog,getOrder,querySettlementDetail} from '@/api/getData'
    import {getLodop}   from '../Lodop/LodopFuncs.js'
    import {formatDate} from '../utils/date.js'
    import {userInfo} from '../config/mUtils'
    import {getMenuAuth,haveMenuAuth} from  '../utils/AuthMenu.js'

    export default {
        components: {
            headTop,
        },
        data() {
            return {
                identity:1,
                roleForm: {
                    userId: '',
                    roleId: '',
                    compId:''
                },
                num6:1,
                orderImgUrl_main:'',
                dialogErweuma:false,
                dialog:false,
                dialog1:false,
                memo:'',
                orderId:'',
                orderCode:'',
                busiName:'',
                orderTime:'',
                totalNum:0,
                totalFee:0,
                orderVo:'',
                status:0,
                orderType:0,
                busiCompId:'',
                tableData: [],
                currentPage:1,
                pageSize:10,
                totalCount:0,
                currentPage:1,
                packageList:[],
                clickIndex:0,
                packageId:'',
                stallName:'',
                logList:[],
                unPackedList:[],
                stallName:'',
                orderState:0,
                packageCode:'',
                orderVo:'',
                packedFee:0,
                isShowPackage:true,
                currPackageLogState:-2,
                createType:-1,
                //backPath:''
            }
        },
        watch:{
            '$route':function (route){
                this.roleForm.compId = userInfo().companyId;
                this.roleForm.userId = userInfo().userId;

                this.packageId = this.$route.query.packageId;
                this.orderId = this.$route.query.id;
                //this.backPath = this.$route.query.backPath;
                this.queryOrderInfo();
            }
        },
        mounted(){
            this.roleForm.compId = userInfo().companyId;
            this.roleForm.userId = userInfo().userId;

            this.orderId = this.$route.query.id;
            //this.backPath = this.$route.query.backPath;
            this.queryOrderInfo();
        },

        methods: {
            returnBack(){
                this.$router.go(-1);
            },
        	getMenuAuthFun(index){
                var b= getMenuAuth(index);
                return b;
            },
            quickRevicePay(){
        	    this.$router.push({path:'/sellerSettlementImmediately',query:{orderId:this.orderId,activeName:'first',saleCompanyId:this.orderVo.busiCompId}});
            },

            //查找订单信息
            async queryOrderInfo(){
                let param = {
                    id:this.orderId,
                    getOrderId:1
                };
                const res = await  getOrder(param);
                if(res.isSuccess){
                    this.orderVo = res.result;
                    this.orderCode = this.orderVo.orderCode;
                    this.busiName = this.orderVo.busiCompanyName;
                    this.totalNum = this.orderVo.totalNum;
                    this.totalFee = this.orderVo.totalFee;
                    this.busiCompId = this.orderVo.busiCompId;
                    this.status = this.orderVo.status;
                    this.orderType = this.orderVo.orderType;
                    this.orderTime = this.orderVo.orderTime;
                    this.createType = this.orderVo.createType;

                    this.loadPackageInfo();//加载包裹
                }else{
                    this.$message({
                        type:'error',
                        message:'数据加载错误'
                    });
                }
            },

            //加载包裹信息
            async loadPackageInfo(){
                this.packageList = [];
                this.unPackedList = [];
                var flag = -1;
                if(this.createType==1){
                    flag = 0;
                }else{
                    flag = 1;
                }
                let param = {
                    "orderId":this.orderId,
                    "packageFlag":flag
                };
                const res = await findOrderDetail(param);
                if(res.isSuccess){
                    let table = res.result.data;
                    if(table.length!=0){
                        if(this.status==99||this.status==50){
                            let pa = {
                                list:'-1',
                                name:'',
                                code:''
                            };
                            this.packageList.push(pa);
                            this.isShowPackage = false;
                        }else{
                            this.isShowPackage = true;
                            let p = {
                                list:'-1',
                                name:'未打包',
                                code:''
                            };
                            this.packageList.push(p);
                        }
                    }
                    this.queryPackedPackage();
                }
            },
            async queryPackedPackage(){
                let param = {
                    "orderId":this.orderId,
                    "companyId":this.roleForm.compId
                };
                const res = await queryPackage(param);
                if(res.isSuccess){
                    let table = res.result.results;
                    for(var i = 0 ;i<table.length;i++){
                        if(table[i].currPackageLogState==-1){
                            continue;
                        }
                        let pa = {
                            list:table[i].id,
                            name:'包裹'+(i+1),
                            code:table[i].packageCode,
                            state:table[i].currPackageLogState
                        };
                        this.packageList.push(pa);
                    }
                    this.packageId = this.packageList[0].list;
                    if(this.packageId=='-1'){
                        this.queryNPackedInfo();
                    }else{
                        this.packageCode = this.packageList[0].code;
                        this.currPackageLogState = this.packageList[0].state;
                        this.loadOrderDetail();
                    }

                }
            },
            //查询未配货详请
            async queryNPackedInfo(){
                this.tableData = [];
                var flag = -1;
                if(this.createType==1){
                    flag = 0;
                }else{
                    flag = 1;
                }
                let param = {
                    "orderId":this.orderId,
                    "packageFlag":flag
                };
                this.orderImgUrl_main = '';
                const res = await findOrderDetail(param);
                if(res.isSuccess){
                    let table = res.result.data;
                    this.totalCount = table.length;
                    for(let i = 0 ;i < table.length;i++){
                    	if(this.orderImgUrl_main == "" && table[i].imgUrl_main){
                    		this.orderImgUrl_main = table[i].imgUrl_main;
                    	}
                    	var num = 0;
                    	if(this.createType==1){
                    	    num = table[i].orderNum;
                        }else{
                    	    num = table[i].unPackedNum;
                        }
                        let p = {
                            "productCode":table[i].productCode,
                            "productName":table[i].productName,
                            "color":table[i].color,
                            "size":table[i].size,
                            "unPackedNum":num,
                            "price":table[i].unitPrice,
                            "imgUrl_main":table[i].imgUrl_main
                        };
                        this.tableData.push(p);
                    }
                }
            },
            //加载包裹详情
            async loadOrderDetail(){
                this.tableData = [];
                this.orderImgUrl_main = '';
                let param = {
                    "packageId":this.packageId
                };
                const res = await queryPackageList(param);
                if(res.isSuccess){
                    let table = res.result.data.results;
                    this.totalCount = res.result.data.totalCount;
                    res.result.data.results.forEach(obj => {
                    	this.tableData.push(obj);
                    	if(obj.imgUrl_main && obj.imgUrl_main != '' && this.orderImgUrl_main == ''){
                    		this.orderImgUrl_main = obj.imgUrl_main;
                    	}
                    })
                }else{
                    this.$message({
                        duration:this.GLOBAL.MESSAGE_DISSMISS_TIME_MID,
                        type:'error',
                        message:res.errorMsg
                    });
                    this.packageId = '';
                    return ;
                }
            },
            //查询订单动态
            async queryOrderLogInfo(){
                //如果是快捷采购，不存在物流
                if(this.orderVo.createType==1){
                    return;
                }
                let param = {
                    "companyId":this.roleForm.compId,
                    "orderId":this.orderId,
                    "pageIndex":1,
                    "pageSize":100
                };
                const res = await  queryOrderLog(param);
                if(res.isSuccess) {
                    this.logList = res.result.results;
                    for(var i = 0;i<this.logList.length;i++){
                        this.stallName = this.logList[i].stallName;
                    }
                    this.dialog1 = true;
                }else{
                    this.$message({
                        type:'error',
                        message:res.errorMsg
                    });
                }
            },
            handleSizeChange(val) {
                this.pageSize = val;
                this.loadOrderDetail();
            },
            handleCurrentChange(val) {
                this.currentPage = val;
                this.loadOrderDetail();
            },
            //点击包裹
            salesTabs(index){
                this.clickIndex = index;
                this.packageId = this.packageList[index].list;
                this.packageCode = this.packageList[index].code;
                this.currPackageLogState = this.packageList[index].state;
                if( this.packageId=='-1'){
                   this.queryNPackedInfo();
                }else{
                    this.loadOrderDetail();//加载订单详情
                }
            },
            formatDate:function(val){
                if(val ==undefined||val==''){
                    return '';
                }
                return formatDate(val*1,'yyyy-MM-dd hh:mm:ss');
            },

            checkedStatus(val){
                if(val==5){
                    return '待配货';
                }else if(val==6){
                    return '部分配货';
                }else if(val == 2){
                    return '已配货';
                }else if(val==99){
                    return '已完成';
                }
                return '';
            },
            checkSettlementStatus(val){
                    if(val==undefined||val == 0){
                        return '未结算';
                    }else if(val==1){
                        return '已结算';
                    }else if(val==2){
                        return '部分结算';
                    }
            },
            //数据格式转换
            formatDateInfo:function(val) {
                if (val == undefined||val=='') {
                    return "";
                }
                return formatDate(val*1,'yyyy-MM-dd hh:mm');
            },
            checkedName(val){
                if(val==undefined||val==''){
                    return '匿名卖家';
                }
                return val;
            }
        }
    }
</script>
<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/salesReturn';
     .detailsLeft,.detailsCenter{
        @uicolor:#46cfc5;
        p{
            white-space: nowrap;
            .observe{
                border-color: @uicolor;
                color: @uicolor;
                margin-left: 50px;
            }
            .jiesuan{
                &:hover,&:focus{
                    color: #fff;
                }
                margin-left: 155px;
                transform: translateY(5px);
            }
        }
    }
    .ynbgwrap{
        display: inline-block;
        width: 24px;
        height: 24px;
        overflow: hidden;
        margin-right: 5px;
        vertical-align: middle
    }
</style>
