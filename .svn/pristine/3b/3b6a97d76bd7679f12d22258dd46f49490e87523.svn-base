<template>
    <div class="fillcontain">
        <ul class="menu">
            <li v-if="getMenuAuthFun('fastShipping2')">
                <router-link :to='{path:"/fastShipping2"}'>快速出货</router-link>
            </li>
            <li v-if="getMenuAuthFun('returnManagement2')">
                <router-link :to='{path:"/returnManagement2"}'>快速退货</router-link>
            </li>
            <li class="menuIndex" v-if="getMenuAuthFun('indentManagement')">
                <router-link :to='{path:"/indentManagement"}'>订单管理</router-link>
            </li>
            <li v-if="getMenuAuthFun('sellerSettlement')">
                <router-link :to='{path:"/sellerSettlement"}'>客户结算</router-link>
            </li>
            <li v-if="getMenuAuthFun('customerManagement')">
                <router-link :to='{path:"/customerManagement"}'>客户管理</router-link>
            </li>
            <li v-if="getMenuAuthFun('statisticalStatement')">
                <router-link :to='{path:"/statisticalStatement"}'>销售统计</router-link>
            </li>
        </ul>
        <div class="orderFinancial">
            <router-link :to='{path:"/indentManagementCompleteAccount"}' class="right comeBack2">返回</router-link>
            <p class="financialTitle">付款详情</p>
            <table width="100%" cellpadding="0" cellspacing="0">
                <tr>
                    <th>结算时间：{{formatDate(settlementOrderVO.createTime)}}</th>
                    <th>本次结算金额：-￥{{settlementOrderVO.fixFee==undefined||settlementOrderVO.fixFee==''?settlementOrderVO.actualPayFee:settlementOrderVO.actualPayFee + settlementOrderVO.fixFee}}</th>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <td>付款金额：￥{{settlementOrderVO.actualPayFee}}</td>
                    <td>抹平金额：￥{{settlementOrderVO.fixFee}}</td>
                    <td>实际付款金额：￥{{settlementOrderVO.actualPayFee}}</td>
                </tr>
                <tr>
                    <th>付款帐号：{{settlementOrderVO.payAcount}} ({{settlementOrderVO.reciveAcountType==1?'余额':settlementOrderVO.reciveAcountType==3?'支付宝':settlementOrderVO.reciveAcountType==4?'微信':settlementOrderVO.reciveAcountType==5?'银行卡':''}})</th>
                    <th>收款方：{{settlementOrderVO.companyName}}</th>
                    <th colspan="2">收款账户：{{settlementOrderVO.reciveAcount}}（{{settlementOrderVO.actualPayFeeType==1?'余额':settlementOrderVO.actualPayFeeType==3?'支付宝':settlementOrderVO.actualPayFeeType==4?'微信':settlementOrderVO.actualPayFeeType==5?'银行卡':''}}）</th>
                </tr>
                <tr>
                    <td colspan="4">结算方式：{{settlementOrderVO.settlementType==1?'单订单结算':settlementOrderVO.settlementType==2?'多订单结算':''}}</td>
                </tr>
                <tr>
                    <td colspan="4">付款说明：{{settlementOrderVO.payMemo}}</td>
                </tr>
                <tr>
                    <!--限制最多三张截图-->
                    <td colspan="4"  class="detailImage"><p style="vertical-align: middle;">截图凭证：</p>
                        <img class="uploadfile" v-for="item in uploadFile" :src="item" alt="">
                    </td>
                </tr>
            </table>
        </div>
    </div>
</template>
<script>
    import headTop from '../components/headTop'
    import {getSettlement} from '@/api/getData'
    import {formatDate} from '../utils/date.js'
    import {getMenuAuth} from  '../utils/AuthMenu.js'

    export default {
        components: {
            headTop,
        },
        data() {
            return {
                settlementOrderId:'',
                settlementOrderVO:'',
                uploadFile:[]
            }
        },
        watch:{
            '$route':function (route){
               //this.$route.go(0);
               this.settlementOrderId = this.$route.query.settlementOrderId;
                this.querySettlementOrders();
            }
        },
        mounted(){
            this.settlementOrderId = this.$route.query.settlementOrderId;
            this.querySettlementOrders();
        },
        methods: {
        	getMenuAuthFun(index){
                var b= getMenuAuth(index);
                return b;
            },
            //根据结算单编号查询结算单
            async querySettlementOrders(){
                let param = {
                    "id": this.settlementOrderId
                };
                const res = await  getSettlement(param);
                if(res.isSuccess){
                    this.settlementOrderVO = res.result;
                    if(res.result.certificate){
                    	res.result.certificate.split(",").forEach(obj => {
                    		this.uploadFile.push(obj);
                    	})
                    }
                }
            },
            formatData:function(val){
                if(val==1){
                    return "单订单结算";
                }else if(val==2){
                    return "多订单结算";
                }else
                    return "";
            },
            //数据格式化
            formatDate:function(val) {
                if (val == undefined||val=='') {
                    return "";
                }
                var date = new Date(val);
                return formatDate(date,'yyyy-MM-dd hh:mm:ss');
            },
        }
    }
</script>
<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/orderFinancial';

    .uploadfile{
    	width: 100px;
    	height: 100px;
    }
</style>
