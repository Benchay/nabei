<template>
    <div class="fillcontain">
        <ul class="menu">
            <li  class="menuIndex">
                <router-link :to='{path:"/stallProcurement"}'>采购入库</router-link>
            </li>
            <li>
                <router-link :to='{path:"/stallPurchase"}'>采购退货</router-link>
            </li>
            <li>
                <router-link :to='{path:"/supplierManagement"}'>供应商管理</router-link>
            </li>
            <li>
                <router-link :to='{path:"/purchaseStatistics"}'>采购统计</router-link>
            </li>
        </ul>
        <div class="stallProcurement">
            <div class="stallTop">
                <router-link :to='{path:"/stallProcurementStart"}' class="buttonColor">开始采购</router-link>
                <el-input v-model="input" placeholder="创建时间搜索"  icon="search" class="right ml-10" size="small"></el-input>
                <el-input v-model="purchaseUserName" placeholder="采购员搜索"  icon="search" class="right ml-10" size="small"></el-input>
                <el-input v-model="input2" placeholder="供应商搜索"  icon="search" class="right" size="small"></el-input>
            </div>
            <el-col :span="24" class="stallTabs radioGreen">
                <el-radio-group v-model="radio" size="small">
                    <el-radio-button label="1">待签收</el-radio-button>
                    <el-radio-button label="2">部分签收</el-radio-button>
                    <el-radio-button label="3">已签收</el-radio-button>
                </el-radio-group>
            </el-col>
            <el-table
                class="stallTable"
                :data="tableData"
                style="width: 100%">
                <el-table-column
                    label="采购编号">
                    <template scope="scope">
                        <div class="flex2 tableFirst">
                            <p>{{scope.row.orderNo}}</p>
                        </div>
                    </template>
                </el-table-column>
                <el-table-column
                    prop="q_supplierName"
                    label="供应商">
                </el-table-column>
                <el-table-column
                    prop="createUserId"
                    label="采购员">
                </el-table-column>
                <el-table-column
                    prop="status"
                    label="状态"
                    :formatter="formatStatus">
                </el-table-column>
                <el-table-column
                    prop="orderNum"
                    label="采购数量">
                </el-table-column>
                <el-table-column
                    prop="totalStockFee"
                    label="采购总成本/元">
                </el-table-column>
                <el-table-column
                    prop="createTime"
                    width="180"
                    label="创建时间"
                    :formatter="mydateFormat">
                </el-table-column>
                <el-table-column
                    label="操作">
                    <template scope="scope">
                        <div class="tableFoot">
                            <router-link :to='{path:"/stallProcurementStorage",query:{param:scope.row.storeOrderId}}' class="blue2">查看</router-link>
                            <router-link :to='{path:"/stallProcurementStorage"}' class="blue2">{{scope.row.flowStatus ==2?'签收':''}}</router-link>
                            <a href="javascript:void(0)" v-if="scope.row.status == 0" class="blue2" @click="deleteStockOrder(scope.row.storeOrderId)">删除</a>
                        </div>
                    </template>
                </el-table-column>
            </el-table>
            <el-pagination
                small
                class="right"
                style="margin-top: 20px;"
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="pagesize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="totalCount">
            </el-pagination>
            <a href="javascript:void(0)" class="export_excle">导出excel</a>

        </div>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {queryStockOrderForPurchase,delStockOrder,findUsersByNameAndMoblie} from '@/api/getData'
    import {userInfo,getStore,setStore} from  '../config/mUtils'
    import {mydateFormat} from '../utils/dataFormater.js'


    export default {
        components: {
            headTop,
        },
        data() {
            return {
                radio:'1',
                input:'',
                purchaseUserName:'',//采购员
                q_supplierName:'',
                q_supplierId:'',
                supplierFlag:true,//若为false,则查询列表为空
                input2:'',
                tableData:[{
                    orderNum:1,
                }],
                stockOrder:{

                    "details": []
                },
                pagesize:10,
                highlightId: -1,
                currentPage: 1,
                start: 1,
                totalCount: 0,
                initParam :{
                    companyId:userInfo().companyId,
                    warehouseId:userInfo().warehouseId,
                    orderType:'0',
                    pageIndex:1,
                    pageSize:10
                }

            }
        },
        watch:{
        	'$route':function (route) {
        		this.initloadData();
        	}
        },
        mounted(){
            this.initloadData();
        },
        methods: {
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
            },

            async loadSupplier(){
           		if(this.q_supplierName != "" || this.q_supplierTel != ""){
           			let param = {companyId:userInfo().companyId};
           			if(this.q_supplierName != ""){
           				param.name = this.q_supplierName;
           			}
           			if(this.q_supplierTel != ""){
           				param.linkTel = this.q_supplierTel;
           			}
           			let params = {
           				param:param,
           				pageSize:1,
           				pageIndex:1
           			}
           			const res = await querySupplier(params);
           			if (res.isSuccess == true) {
	                    if(res.result.totalCount==0){
	                    	this.supplierFlag = false;
	                    	this.q_supplierId = '';
	                    }else{
	                    	this.supplierFlag = true;
	                    	this.q_supplierId = res.result.results[0].id;
	                    }
	                    this.loadPurchaseUser()
	                }else{
	                    this.$message({
	                        type: 'error',
	                        message: res.errorMsg
	                    });
	                    this.loadPurchaseUser()
	                }
           		}else{
           			this.supplierFlag = true;
           			this.q_supplierId = '';
           			this.loadPurchaseUser()
           		}
            },

            async loadPurchaseUser(){
            	if(this.purchaseUserName != ""){
            		let param = {
            			userName:this.purchaseUserName,
            			pageSize:1,
            			pageIndex:1
            		}
            		const res = await findUsersByNameAndMoblie(param);
	                if (res.isSuccess == true) {
	                    this.initloadData();
	                }else{
	                    this.$message({
	                        type: 'error',
	                        message: res.errorMsg
	                    });
	                    this.initloadData();
	                }
            	}
            },
            async initloadData() {
            	if(!this.supplierFlag){
            		this.tableData = [];
            		this.totalCount = 0;
            		return;
            	}
            	let param = {
            		companyId:userInfo().companyId,
                    warehouseId:userInfo().warehouseId,
                    orderType:'0',
                    pageIndex:this.currentPage,
                    pageSize:this.pagesize
            	}
                const res = await queryStockOrderForPurchase(param);
                if (res.isSuccess == true) {
                    this.tableData = res.result.results;
                    this.totalCount = res.result.totalCount;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            //页码变更
            handleCurrentChange: function(val) {
                this.currentPage = val;
                this.initloadData();
            },

            async deleteStockOrder(stockOrderId){
            	if(stockOrderId == "" || stockOrderId == undefined){
            		this.$message({
                        type: 'error',
                        message: '参数异常！'
                    });
            		return;
            	}
            	this.$confirm('是否确认删除该数据?', '提示', {
	                confirmButtonText: '确定',
	                cancelButtonText: '取消',
	                type: 'warning'
	              }).then(() => {
	                this.delete(stockOrderId)
	              }).catch(() => {

	              });

            },

            async delete(stockOrderId){
            	let param = {
            		stockOrderId:stockOrderId
            	}
            	const res = await delStockOrder(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: res.result.msg
                    });
                    this.initloadData(this.initParam);
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            formatStatus:function(row, column){
            	if(row.status == null){
            		return '';
            	}else if(row.status == 1){
            		return "已签收";
            	}else if(row.status == 2){
            		return "部分签收";
            	}else if(row.status == 0){
            		return "待签收";
            	}
            },
            mydateFormat

        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/stallProcurement';
</style>
