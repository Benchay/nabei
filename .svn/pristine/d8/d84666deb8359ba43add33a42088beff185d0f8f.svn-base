<template>
    <div class="fillcontain">
        <ul class="menu">
            <li v-if="getMenuAuthFun('webStoreOrderSalesBuy')">
                <router-link :to='{path:"/webStoreOrderSalesBuy"}'>网店订单</router-link>
            </li>
            <li v-if="getMenuAuthFun('purchaseRequireBuy')">
                <router-link :to='{path:"/purchaseRequireBuy"}'>采购需求</router-link>
            </li>
            <li v-if="getMenuAuthFun('orderPurchaseBuy')">
                <router-link :to='{path:"/orderPurchaseBuy"}'>采购订单</router-link>
            </li>
            <li v-if="getMenuAuthFun('addShop')">
                <router-link :to='{path:"/addShop"}'>绑定店铺</router-link>
            </li>
            <li class="menuIndex2" v-if="getMenuAuthFun('packageDetails')">
                <router-link :to='{path:"/packageDetails"}'>包裹管理</router-link>
            </li>
            <li v-if="getMenuAuthFun('salesForecast')">
                <router-link :to='{path:"/salesForecast"}'>采购统计</router-link>
            </li>
        </ul>
        <div class="startProcurement">
            <div>
                <div class="salesOrderTop">
                    <div class="block left" style="margin-right: 10px;">
                        <!-- <el-date-picker
                            v-model="value1"
                            size="small"
                            type="daterange"
                            placeholder="选择日期范围">
                        </el-date-picker> -->
                         <el-date-picker
                        size="small"
                        v-model="filters.date.startDate"
                        type="date"
                        placeholder="选择开始日期"
                        :picker-options="startDateBefore"
                    >
                    </el-date-picker>
                    -
                    <el-date-picker
                        size="small"
                        v-model="filters.date.endDate"
                        type="date"
                        placeholder="选择截止日期"
                        :picker-options="startDateAfter"
                        @change="handleIconClickDate"
                    >
                    </el-date-picker>
                    </div>
                    <div class="topSearch">
                        <el-input
                            placeholder="档口名称搜索"
                            icon="search"
                            size="small"
                            v-model="stallName"
                            :on-icon-click="handleIconClick">
                        </el-input>
                        <el-input
                            placeholder="订单编号搜索"
                            icon="search"
                            size="small"
                            v-model="orderCode"
                            :on-icon-click="handleIconClick">
                        </el-input>
                        <!--
                        <el-input
                            placeholder="采购人搜索"
                            icon="search"
                            size="small"
                            v-model="input2"
                            :on-icon-click="handleIconClick">
                        </el-input>-->
                    </div>
                </div>
                <el-col :span="24" class="radioRed">
                    <el-radio-group v-model="radio" size="small"  @change="change">
                        <el-radio-button :label="item.label" v-for="item in statusList">{{item.value}}</el-radio-button>
                        <!-- <el-radio-button label="10">全部</el-radio-button>
                        <el-radio-button label="0">待拿货</el-radio-button>
                        <el-radio-button label="1">待装车</el-radio-button>
                        <el-radio-button label="2">待入库</el-radio-button>
                        <el-radio-button label="3">已完成</el-radio-button> -->
                    </el-radio-group>
                </el-col>
                <div class="orderTable">
                    <el-table
                        :data="tableData"
                        style="width: 100%;">
                        <el-table-column
                            prop="packageCode"
                            label="包裹号"
                            width="180">
                        </el-table-column>
                        <el-table-column
                            prop="companyName"
                            label="档口名称"
                            width="180">
                        </el-table-column>
                        <el-table-column
                            prop="productNum"
                            label="总数">
                        </el-table-column>
                        <!-- <el-table-column
                            prop="totalFee"
                            label="采购金额">
                        </el-table-column> -->
                        <el-table-column
                            prop="createTime"
                            label="打包时间"
                            :formatter="mydateFormat">
                        </el-table-column>
                        <el-table-column
                            prop="pickUpCode"
                            label="提货码"
                        >
                        </el-table-column>
                        <el-table-column
                            prop="currPackageLogState"
                            label="状态">
                            <template scope="scope">
                                <p v-bind:class="[scope.row.currPackageLogState<4?'red':'']">{{scope.row.currPackageLogState==0?'待拿货':scope.row.currPackageLogState==1?'待装车':scope.row.currPackageLogState==2?'待入库':scope.row.currPackageLogState==3?'已完成':''}}</p>
                            </template>
                        </el-table-column>
                        <el-table-column
                            label="操作">
                            <template scope="scope">
                                <router-link :to='{path:"/packageStatus",query:{stallName:scope.row.stallName,packId:scope.row.id,orderCode:scope.row.orderCode,totalFee:scope.row.totalFee,orderNum:scope.row.productNum,currPackageLogState:scope.row.currPackageLogState,orderId:scope.row.orderId,pickUpCode:scope.row.pickUpCode}}' class="red">查看详情</router-link>
                            </template>
                        </el-table-column>
                    </el-table>
                </div>
                <el-pagination
	                small
	                class="right"
	                style="margin-top: 20px;"
	                @size-change="handleSizeChange"
	                @current-change="handleCurrentChange"
	                :current-page="currentPage"
	                :page-size="pageSize"
	                layout="total, prev, pager, next, jumper"
	                :total="totalCount">
	            </el-pagination>
                <a href="javascript:void(0)" class="export_excle1" @click="exportTableData">导出excle</a>
            </div>
        </div>
        <!--dialog-->
        <el-dialog
            id="purchaseDialog"
            title="是否确定生成采购需求"
            :visible.sync="purchaseDialogVisible"
            size="tiny">
            <span>是否确定生成采购需求？</span>
            <span slot="footer" class="dialog-footer">
            <el-button @click="purchaseDialogVisible = false">取 消</el-button>
            <el-button type="primary" @click="addPurchaserequire">确 定</el-button>
          </span>
        </el-dialog>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {setStore,getStore} from  '../config/mUtils'
    import {queryPackage} from '@/api/getData'
    import {formatDate,timeZoneCovertDay} from '../utils/date.js'
    import {export_json_to_excel} from '../vendor/Export2Excel.js'
    import {getMenuAuth} from  '../utils/AuthMenu.js'

    export default {
        components: {
            headTop,
        },
        filters: {

        },
        data() {
            return {
                  filters:{
                    date:{
                        startDate:'',
                        endDate:''
                    }
                },
                startDateBefore:{
                    disabledDate: (time) => {
                        let beginDateVal = this.filters.date.endDate;
                        if (beginDateVal) {
                            return time.getTime() > beginDateVal;
                        }
                    }
                },
                startDateAfter:{
                    disabledDate: (time) => {
                        let beginDateVal = this.filters.date.startDate;
                        if (beginDateVal) {
                            return time.getTime() < beginDateVal;
                        }
                    }
                },
                radio:10,
                orderCode:'',
                stallName:'',
                checked:false,
                value1:'',
                purchaseDialogVisible: false,
                tableData: [],
                statusList:[
                    {
                        value:'全部',
                        label:10
                    },
                    {
                        value:'待拿货',
                        label:0
                    },
                     {
                        value:'待装车',
                        label:1
                    },
                    {
                        value:'待入库',
                        label:2
                    },
                    {
                        value:'已完成',
                        label:3
                    }
                ],
                //默认每页数据量
                pageSize: 10,

                //默认高亮行数据id
                highlightId: -1,

                //当前页码
                currentPage: 1,

                //查询的页码
                start: 1,

                //默认数据总数
                totalCount: 0,

                //用户登录信息暂时写死
                 currentComp: ""
                // currentComp:{id:'1000'}
            }
        },
        watch:{
            '$route':function (route) {
                this.initloadData();
            },
        },
        async mounted(){
            this.currentComp = getStore("curCompany");
            
            this.initloadData();
        },
        methods: {
        	getMenuAuthFun(index){
                var b= getMenuAuth(index);
                return b;
            },
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
                this.currentPage = 1;
                this.pageSize = val;
                this.initloadData();
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
                this.currentPage = val;
                this.initloadData();
            },
            //时间格式化
            mydateFormat:function(row, column) {
                var time = row[column.property];
                if (time == undefined||time=='') {
                    return "";
                }
                let date = new Date(time);
                return formatDate(date,'yyyy-MM-dd hh:mm');
            },
            handleIconClick(){
               this.initloadData();
            },
            handleIconClickDate(){
               this.initloadData(); 
            },
            //从服务器获取数据
            async initloadData() {
                let param;
                // var startDate='';
                // var endDate='';
                // console.log(typeof(this.currentComp))
                var vcom = JSON.parse(this.currentComp);
                // if(this.value1 !=null && this.value1!='' && this.value1!=',' ){
                //     console.log('------------------------' + this.value1)
                //     var start=this.value1[0];
                //     var end=this.value1[1];
                //     startDate=timeZoneCovertDay(start,true);
                //     endDate=timeZoneCovertDay(end,false);
                // }
                    var status=this.radio;
                    if(this.radio==10){
                     param ={
                    startDate: this.filters.date.startDate,
                    endDate: this.filters.date.endDate,
                    ownerCompanyId:vcom.id,
                    // currPackageLogState:status,
                    // orderId:this.orderCode,
                    pageIndex:this.currentPage,
                    pageSize:this.pageSize,
                    resultCfg:{
                        countProduct: true
                    }
                }
                    }else{
                        if(this.radio==0){
                        this.status = 0 
                    }else if(this.radio==1){
                        this.status = 1
                    }else if(this.radio==2){
                        this.status = 2
                    }else if(this.radio==3){
                        this.status = 3
                    }
                        param ={
                    startDate: this.filters.date.startDate,
                    endDate: this.filters.date.endDate,
                    ownerCompanyId:vcom.id,
                    currPackageLogState:status,
                    // orderId:this.orderCode,
                    pageIndex:this.currentPage,
                    pageSize:this.pageSize,
                    resultCfg:{
                        countProduct: true
                    }
                }
                    }
                  
                const res = await queryPackage(param);
             
                if (res.isSuccess == true) {
                    this.tableData = res.result.results;
                    this.totalCount = res.result.totalCount;
                }else{
                    if(res.errCode=="01"){   
                        this.$message({
                            type: 'error',
                            message: res.errMsg
                        });
                    }
                }
            },
            // handleCurrentChange:function(val) {
            //     this.currentPage = val;
            //     this.initloadData();
            // },
            change(){
                console.log(this.radio);
                this.initloadData();
            },
            exportTableData(){},
            addPurchaserequire(){},

        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/startProcurement';
</style>
