<template>
    <div class="fillcontain">
        <ul class="menu">
            <li>
                <router-link :to='{path:"/stallProductManagement"}'>商品管理</router-link>
            </li>
            <li class="menuIndex">
                <router-link :to='{path:"/classificationGoods"}'>商品分类</router-link>
            </li>
            <li>
                <router-link :to='{path:"/commodityStatistics"}'>商品统计</router-link>
            </li>
        </ul>
        <div class="classGoods">
            <div class="classTop">
                <el-input
                    placeholder="分类搜索"
                    icon="search"
                    size="small"
                    v-model="catalogName"
                    :on-icon-click="initloadData">
                </el-input>
            </div>
            <div class="classButton">
                <a href="javascript:void(0)" class="buttonColor" @click="dialogVisible = true">添加分类</a>
                <a href="javascript:void(0)" class="buttonColor" @click="batchDeleteConfig">删除</a>
            </div>
            <div class="classTable">
                <el-table
                    :data="tableData"
                    show-summary
                    @selection-change="handleSelectionChange"
                    style="width: 100%">
                    <el-table-column
                        type="selection"
                        width="55">
                    </el-table-column>
                    <el-table-column
                        prop="name"
                        label="全部分类">
                    </el-table-column>
                    <el-table-column
                        prop="num"
                        label="商品数量">
                    </el-table-column>
                    <el-table-column
                        width="250"
                        label="操作">
                        <template scope="scope">
                            <div class="tableFoot">
                                <router-link :to='{path:"/classificationGoodsDetails",query:{catalogId:tableData[scope.$index].id,catalogName:tableData[scope.$index].name}}' class="blue2">查看</router-link>
                            </div>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
            <el-pagination
                small
                class="right"
                style="margin-top: 20px;"
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="currentPage"
                :page-sizes="[10, 20, 30, 40]"
                :page-size="pageSize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="totalCount">
            </el-pagination>
            <a href="javascript:void(0)" class="export_excle">导出excel</a>
        </div>
        <el-dialog
            title="添加分类"
            :visible.sync="dialogVisible"
            size="tiny"
            >
            <div>
                <el-input
                    placeholder="请输入分类名称..."
                    v-model="addCatalogName"
                    >
                </el-input>
            </div>
            <span slot="footer" class="dialog-footer flex2">
                <a href="javascript:void(0)" @click="addProductCatalog" class="buttonColor">确 定</a>
                <a href="javascript:void(0)" @click="dialogVisible = false" class="buttonColor2">取 消</a>
              </span>
        </el-dialog>
    </div>
</template>

<script>
    import headTop from '../components/headTop'
    import {getProductCatalogByParam,addProductCatalog,batchDeleteProductCatalog} from '@/api/getData'
    import {userInfo} from  '../config/mUtils'

    export default {
        components: {
            headTop,
        },
        data() {
            return {
            	catalogName:'',
            	//默认每页数据量
                pageSize: 10,
                //当前页码
                currentPage: 1,

                totalCount:0,
                
                addCatalogName:'',
                
                dialogVisible:false,
                tableData:[],
            }
        },
        mounted(){
            this.initloadData();
        },
        methods: {
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
                this.currentPage = 1;
                this.pageSize = val;
                this.initloadData();
            },
            handleCurrentChange(val) {
                console.log(`当前页: ${val}`);
                this.currentPage = val;
                this.initloadData();
            },
            
            //从服务器获取数据
            async initloadData() {
            	this.tableData = [];
            	let param ={
            		name:this.catalogName,
            		companyId:userInfo().companyId,
            		pageIndex:this.currentPage,
    				pageSize:this.pageSize
            	}
                const res = await getProductCatalogByParam(param);
                if (res.isSuccess == true) {
                	this.tableData = res.result.results;
                	this.totalCount =  res.result.totalCount;
                    this.pageSize = res.result.pageSize;
                    this.currentPage = res.result.currentPage;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.isSuccess
                    });
                }
            },
            
            //
			async addProductCatalog(){
				let param = {
					name:this.addCatalogName,
					companyId:userInfo().companyId
				};
              	const res = await addProductCatalog(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: res.result.msg
                    });
                     this.dialogVisible = false;
                     this.initloadData();
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
          },
          
          async batchDeleteProductCatalog(array){
            	let param = {
            		productCatalogIds:array
            	}
            	const res = await batchDeleteProductCatalog(param);
            	if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: res.result.msg
                    });
                    this.initloadData();
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
          
          //多选响应
            handleSelectionChange: function(val) {
                this.multipleSelection = val;
            },

			batchDeleteConfig() {
              if(this.multipleSelection == undefined || this.multipleSelection.length==0){
                  this.$message({
                        type: 'error',
                        message: '请先勾选要删除的商品分类！'
                    });
                    return;
              }
                var array = [];
                this.multipleSelection.forEach((item) => {
                    array.push(item.id);
                })
                if(array.length <1){
                  this.$message({
                        type: 'error',
                        message: '请先勾选要删除的商品分类！'
                    });
                    return;
                }
              this.$confirm('是否确认删除选中的商品分类?', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
              }).then(() => {
                this.batchDeleteProductCatalog(array);
              }).catch(() => {

              });
          },
        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/stallProductManagement';
</style>
