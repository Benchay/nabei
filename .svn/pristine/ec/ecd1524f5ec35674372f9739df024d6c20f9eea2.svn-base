<template>
    <div class="fillcontain">
        <ul :class="[identity ==1 ?'stallShareMenu':identity ==2 ?'sellerShareMenu':'']">
            <li class="ListMenu">
                <router-link :to='{path:"/remainingSum"}'>账户余额</router-link>
            </li>
        </ul>
        <div class="remainingSum" :class="[identity ==1 ?'stallContent':identity ==2 ?'sellerContent':'']">
            <div class="tabs">
                <el-button v-model="recharge" @click="tabs(1)" v-bind:class="{'buttonColorFM':recharge}" size="small">充值</el-button>
                <el-button v-model="withdraw" @click="tabs(2)" v-bind:class="{'buttonColorFM':withdraw}" size="small">提现</el-button>
                <el-button v-model="Transfer" @click="tabs(3)" v-bind:class="{'buttonColorFM':Transfer}" size="small">转账</el-button>
                <!--<el-button v-model="gold" @click="tabs(4)" v-bind:class="{'tabs':gold}" size="small">金币购买</el-button>-->
            </div>
            <div class="tabsList flex">
                <div v-show="recharge" class="recharge">
                    <p class="tit">当前账户余额：<span>￥{{accountFee}}</span></p>
                    <div class="payelect">
                        <ul>
                            <li v-model="zhifubao" @click="payelect(1)" v-bind:class="{'pays':zhifubao}">支付宝充值</li>
                            <li v-model="weixin" @click="payelect(2)" v-bind:class="{'pays':weixin}">微信充值</li>
                            <li v-model="Ebank" @click="payelect(3)" v-bind:class="{'pays':Ebank}">网银充值</li>
                            <li v-model="offline" @click="payelect(4)" v-bind:class="{'pays':offline}">线下汇款</li>
                        </ul>
                        <div style="overflow: hidden;width:100%;" class="payContent" v-if="zhifubao || weixin || Ebank">
                            <el-col :span="24" class="payList">
                               <el-col :span="5">
                                   <span>充值金额：</span>
                               </el-col>
                               <el-col :span="19" class="zfbPay">
                                   <el-radio-group v-model="radio2" @change="changedFee">
                                       <el-radio :label="50" class="zfbRedio">50元</el-radio>
                                       <el-radio :label="100" class="zfbRedio">100元</el-radio>
                                       <el-radio :label="200" class="zfbRedio">200元</el-radio>
                                       <el-radio :label="500" class="zfbRedio">500元</el-radio>
                                       <el-radio :label="1000" class="zfbRedio">1000元</el-radio>
                                       <el-radio :label="0" class="zfbRedio flex" style="overflow: auto;height:37px;width:100%;justify-content: flex-start"><div class="zfbPay2">
                                           自定义金额：<el-input class="zfbInput" max="1000000000" v-model.number="rechargeInput" onkeypress="return event.keyCode>=48&&event.keyCode<=57" placeholder=""  type ="number" :disabled="inputDisable" @click=""></el-input>
                                           <span>元</span>
                                       </div></el-radio>
                                   </el-radio-group>
                               </el-col>
                            </el-col>
                            <div v-show="Ebank" class="Ebank">
                                <el-col :span="24" class="flex2">
                                    <el-col :span="5">收款账户：</el-col>
                                    <el-col :span="19"><el-select v-model="value2" placeholder="请选择" class="EbankSelect">
                                        <el-option
                                            v-for="item in option2"
                                            :key="item.cardholder"
                                            :label="'网银 卡号'+item.accoutNumber+ '('+item.cardholder+'- 银行)'"
                                            :value="item.value" v-if="item.accType=='3'">
                                        </el-option>
                                    </el-select>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex2">
                                    <el-col :span="5">付款帐号：</el-col>
                                    <el-col :span="8"><el-input v-model="payBankAccount"></el-input></el-col>
                                    <el-col :span="11" class="tip">*卡号后面请填写上付款人姓名并以减号相隔&nbsp;&nbsp;&nbsp;例如：1234564-赵晓梅</el-col>
                                </el-col>
                                <el-col :span="24" class="flex2">
                                    <el-col :span="5">交易流水：</el-col>
                                    <el-col :span="8"><el-input v-model="flowNo"></el-input></el-col>
                                    <el-col :span="11" class="tip">*如果没有流水号请填写转账时间</el-col>
                                </el-col>
                            </div>
                            <el-col :span="24" class="flex zfbButton"  v-show="zhifubao">
                                <el-button type="info" @click="prewalletRecharge" class="buttonColorFM">立即充值</el-button>
                                <el-button  @click="redirectPage('/financialManagement')" class="buttonCancel">取消</el-button>
                            </el-col>
                            <el-col :span="24" class="flex zfbButton"  v-show="weixin">
                                <el-button type="info" @click="weChatRecharge" class="buttonColorFM">立即充值</el-button>
                                <el-button  @click="redirectPage('/financialManagement')" class="buttonCancel">取消</el-button>
                            </el-col>
                            <el-col :span="24" class="flex EbankButton"  v-show="Ebank">
                                <el-button type="info" @click="preBankCardwalletRecharge" class="buttonColorFM">提交</el-button>
                                <el-button  @click="redirectPage('/financialManagement')"  class="buttonCancel">取消</el-button>
                            </el-col>
                            <div class="payTip" v-show="zhifubao">
                                <p><img src="../image/tprompting.png" alt=""> 温馨提示</p>
                                <p>1、不支持信用卡方式充值</p>
                                <p>2、首次使用需要在手机端下载支付宝钱包</p>
                            </div>
                            <div class="payTip" v-show="weixin">
                                <p><img src="../image/tprompting.png" alt=""> 温馨提示</p>
                                <p>1、不支持信用卡方式充值</p>
                                <p>2、首次使用需要在手机端下载微信</p>
                            </div>
                            <div class="payTip"  v-show="Ebank">
                                <p><img src="../image/tprompting.png" alt=""> 温馨提示</p>
                                <p>请填写真实有效的充值信息，连续超过3次错误，将被定义为恶意充值，并冻结账号</p>
                            </div>
                        </div>

                        <div v-show="offline"></div>
                    </div>
                </div>
                <div v-show="withdraw" class="recharge">
                    <p class="tit">当前账户余额：<span>￥{{accountFee}}</span><span class="tit2">最低提现金额为￥50.00</span></p>
                    <div class="payelect">
                        <div style="overflow: hidden;width:100%;" class="payContent">
                            <div class="payList">
                                <el-col :span="24" class="payTx flex">
                                    <el-col :span="8" class="tx">提现金额：</el-col>
                                    <el-col :span="16" class="zfbPay2">
                                        <el-input class="zfbInput1" v-model.number="outFeeNum" type="number"></el-input>
                                        <span>元</span>
                                    </el-col>
                                </el-col>
                                <div>
                                    <el-col :span="24" class="payTx flex">
                                        <el-col :span="8" class="tx">选择账户：</el-col>
                                        <el-col :span="16" class="zfbPay2">
                                            <el-select v-model="value1" placeholder="请选择" class="zfbInput1">
                                                <el-option
                                                    v-for="item in optionss"
                                                    :key="item.accoutNumber"
                                                    :label="(item.accType=='5'?'银行卡':item.accType=='4'?'微信':item.accType=='3'?'支付宝':'其他') +item.name"
                                                    :value="item.accoutNumber" >
                                                </el-option>
                                            </el-select>
                                        </el-col>
                                    </el-col>
                                </div>
                                <el-col :span="24" class="txfs flex">
                                    <el-col :span="8" class="tx">短信验证：</el-col>
                                    <el-col :span="16" class="zfbPay2">
                                        <el-input placeholder="请输入手机验证码" style="margin-left: 50px;width:300px;"  v-model.number="outCashMobileCode">
                                            <el-button slot="append">
                                                <timer-btn class="btn btn-default"  ref="timebtn"  v-on:refCheckmobile="toSendMsg" v-ref:btn :second="60" :mobilehpne=platformAccountVO.bindMobile></timer-btn>

                                            </el-button>
                                        </el-input>
                                    </el-col>
                                </el-col>
                                <div class="payTip2" style="overflow: hidden;width:100%;">
                                    <p><span>*</span>请您认真核对提现金额及提现账户，确保户名与帐号一致，以免造成提现失败甚至金额损失。</p>
                                </div>
                                <el-col :span="24" class="flex zfbButton">
                                    <el-button type="info" @click="walletOutcash" class="buttonColorFM">立即提现</el-button>
                                    <el-button  @click="redirectPage('/financialManagement')" class="buttonCancel">取消</el-button>
                                </el-col>
                            </div>
                        </div>
                    </div>
                </div>
                <div v-show="Transfer" class="recharge transfer">
                    <p class="tit flex2">当前账户余额：<span>￥{{accountFee}}</span></p>
                    <div class="Transfer">
                        <div style="overflow: hidden;width:100%;" class="payContent">
                            <div class="TransferList">
                                <el-col :span="24" class="flex TransferLi">
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">待收款档口：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="input1" size=""></el-input>
                                        </el-col>
                                    </el-col>
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">总欠款金额：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="input2"></el-input>
                                        </el-col>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex TransferLi">
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">到期金额：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="input2"></el-input>
                                        </el-col>
                                    </el-col>
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">付款金额：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="forwardFeeNum"></el-input>
                                        </el-col>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex TransferLi">
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">抹平金额：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="input1" placeholder="请输入抹平金额"></el-input>
                                        </el-col>
                                    </el-col>
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">实付金额：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="input2"></el-input>
                                        </el-col>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex TransferLi">
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">付款方式：</el-col>
                                        <el-col :span="8">
                                            <el-select v-model="value" placeholder="请选择" class="TransferWay">
                                                <el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value">
                                                </el-option>
                                            </el-select>
                                        </el-col>
                                    </el-col>
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">付款帐号：</el-col>
                                        <el-col :span="8">
                                            <el-input v-model="input2"  placeholder="请输入付款帐号"></el-input>
                                        </el-col>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex TransferLi">
                                    <el-col :span="12" class="flex">
                                        <el-col :span="4" class="title">短信验证：</el-col>
                                        <el-col :span="8">
                                            <el-input placeholder="请输入手机验证码" maxlength="6">
                                                <el-button slot="append">
                                                    <timer-btn class="btn btn-default"  v-ref:btn :second="60"></timer-btn>
                                                </el-button>
                                            </el-input>
                                        </el-col>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex" v-if="this.value>1">
                                    <el-col :span="4" class="title">付款说明：</el-col>
                                    <el-col :span="18">
                                        <el-input v-model="input1" placeholder="请填写付款说明"></el-input>
                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex screenshot"  v-if="this.value>1">
                                    <el-col :span="4" class="title">上传截图凭证：</el-col>
                                    <el-col :span="7">
                                        <el-upload
                                            class="avatar-uploader"
                                            action="https://jsonplaceholder.typicode.com/posts/"
                                            :show-file-list="false"
                                            :on-success="handleAvatarSuccess"
                                            :before-upload="beforeAvatarUpload">
                                            <img v-if="imageUrl" :src="imageUrl" class="avatar">
                                            <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                                        </el-upload>

                                    </el-col>
                                </el-col>
                                <el-col :span="24" class="flex ZZButton">
                                    <el-button type="info" @click="walletFeeforword" class="buttonColorFM">立即转账</el-button>
                                    <el-button  @click="redirectPage('/financialManagement')"  class="buttonCancel">取消</el-button>
                                </el-col>
                            </div>
                        </div>
                    </div>
                </div>
                <!--<div v-show="gold">
                    <div class="recharge goldCont">
                        <p class="tit">金币余额：<span>￥{{accountFee}}</span>当前账户余额：<span>￥{{accountFee}}</span></p>
                        <div class="payelect">
                            <div style="width:100%;" class="payContent">
                                <el-col :span="24" class="payList">
                                    <el-col :span="5">
                                        <span>充值金额：</span>
                                    </el-col>
                                    <el-col :span="19" class="zfbPay">
                                        <el-radio-group v-model="radio2">
                                            <el-radio :label="50" class="zfbRedio">50金币</el-radio>
                                            <el-radio :label="100" class="zfbRedio">100金币</el-radio>
                                            <el-radio :label="200" class="zfbRedio">200金币</el-radio>
                                            <el-radio :label="500" class="zfbRedio">500金币</el-radio>
                                            <el-radio :label="1000" class="zfbRedio">1000金币</el-radio>
                                            <el-radio :label="0" class="zfbRedio flex" style="overflow: auto;height:37px;width:100%;justify-content: flex-start"><div class="zfbPay2">
                                                自定义金额：<el-input class="zfbInput" v-model.number="rechargeInput" placeholder="" type="number" />
                                                <span>金币</span>
                                            </div></el-radio>

                                        </el-radio-group>

                                    </el-col>
                                    <el-col :span="24" class="flex zfbButton">
                                        <el-button type="info" @click="walletRecharge(6)">购买</el-button>
                                        <el-button  @click="redirectPage('/financialManagement')">取消</el-button>
                                    </el-col>
                                </el-col>
                                <div class="payTip3" style="overflow: hidden;width:100%;">
                                    <p><img src="../image/tprompting.png" alt=""> <span>温馨提示</span></p>
                                    <p>金币购买不可提现、不可退，只能在平台消费。</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>-->
            </div>
            <div>
            </div>
        </div>
    </div>
</template>

<script>
    import {queryPlatformAccount,walletRecharge,walletFeeforword,walletOutcash,recharge,findPaymentAccountForCustomer} from '@/api/getData'
    import timerBtn from '../components/timerBtn'
    import {userInfo,getStore,setStore} from  '../config/mUtils'
    import {getCompanyType} from  '../utils/common'
    export default {
        components: {
            timerBtn
        },
        data() {
            return {

//               1为档口、2为卖家身份
                identity:2,
                inputDisable:false,
                payBankAccount:'',
                flowNo:'',
                tabsindex:'',
	            imageUrl:'',
                accountFee:0.00,
                recharge:true,
                withdraw:false,
                Transfer:false,
                zhifubao:true,
                weixin:false,
                Ebank:false,
                offline:false,
                gold:false,
                radio2:50,
                radio3:1,
	        	input2:"",
                input1:"",
                rechargeInput:'',
                outFeeNum:'',
                forwardFeeNum:'',
                accountType:'',
                options: [{
                    value: '1',
                    label: '余额'
                }, {
                    value: '2',
                    label: '支付宝'
                }, {
                    value: '3',
                    label: '微信'
                }, {
                    value: '4',
                    label: '银行卡'
                }, {
                    value: '5',
                    label: '网银'
                }],
                value: '1',
                outCashMobileCode:'',
                option2: [],
                value2: '',
                optionss: [],
                value1: '',
                reciveAccountType:'',
                platformAccountVO: {
                    name: '',
                    blance: '',
                    freezed: '',
                    companyId: '',
                    status: '',
                    balanceNotice:'',
                    threshold: '',
                    goldBalance:'',
                    financeAccounts:[]

                },
                payType:1,//默认支付宝,
                forwardForm:{
                    payId:'',
                    reciveId:"",
                    totalFee:"",
                    fee:""
                }

            }
        },
        mounted(){
            this.getAccountInfo();
            this.queryAccountBankCard();
            this.identity =getCompanyType(getStore("curCompany"));
        },
        watch:{
           '$route':function (route) {
               this.tabsindex = this.$route.query.tabsIndex;
               this.tabs(this.tabsindex);
               this.getAccountInfo();
			   this.rechargeInput='';
           },
		   rechargeInput:function(){
			   if(this.rechargeInput<0){
				   this.rechargeInput=-this.rechargeInput;
				  /*  this.$message({
                        type: 'error',
                        message: '充值金额只能在1-999999999之间!'
                    }); */
			   }
		   }
        },
        methods: {
            tabs(index){
                if(index == 1){

                    this.withdraw = false;
                    this.recharge = true;
                    this.Transfer = false;
                    this.gold = false;
                }else if(index == 2){
                    this.withdraw = true;
                    this.recharge = false;
                    this.Transfer = false;
                    this.gold = false;
                }else if(index==3){
                    this.withdraw = false;
                    this.recharge = false;
                    this.Transfer = true;
                    this.gold = false;
                }else if(index==4){
                    this.withdraw = false;
                    this.recharge = false;
                    this.Transfer = false;
                    this.gold = true;
                }
            },
            payelect(index){
                this.payType = index;
                if(index == 1){
                    this.zhifubao = true;
                    this.Ebank = false;
                    this.offline = false;
                    this.weixin = false;
                }else if(index == 2){
                    this.zhifubao = false;
                    this.Ebank = false;
                    this.offline = false;
                    this.weixin = true;
                }else if(index == 3){
                    this.zhifubao = false;
                    this.Ebank = true;
                    this.offline = false;
                    this.weixin = false;
                }else if(index == 4){
                    this.zhifubao = false;
                    this.Ebank = false;
                    this.offline = true;
                    this.weixin = false;
                }
            },
//            微信充值跳转
            weChatRecharge(){
                let  payType = this.payType;
                let paymentAmount=this.radio2;
                let companyId = userInfo().companyId;
                if(paymentAmount==''&&this.rechargeInput==''){
                    this.$message({
                        type: 'error',
                        message: '请选择充值金额!'
                    });
                    return
                }
                if(this.rechargeInput != '' && (this.rechargeInput>999999999 || this.rechargeInput<1)){
                	this.$message({
                        type: 'error',
                        message: '充值金额只能在1-999999999之间!'
                    });
                    return
                }
                if(paymentAmount==0||paymentAmount=='0'||paymentAmount==''){
                    paymentAmount = this.rechargeInput;
                }
                this.$router.push({path:'/WeChatPay',query:{"paymentAmount":paymentAmount}});
            },

	     handleAvatarSuccess(res, file) {
                this.imageUrl = URL.createObjectURL(file.raw);
            },
            beforeAvatarUpload(file) {
                const isJPG = file.type === 'image/jpeg';
                const isLt2M = file.size / 1024 / 1024 < 2;

                if (!isJPG) {
                    this.$message.error('上传头像图片只能是 JPG 格式!');
                }
                if (!isLt2M) {
                    this.$message.error('上传头像图片大小不能超过 2MB!');
                }
                return isJPG && isLt2M;
            },
            async getAccountInfo(){
                let param ={companyId:userInfo().companyId};
                const res = await queryPlatformAccount(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '加载数据成功'
                    });
                    this.platformAccountVO = res.result;
                    this.accountFee = this.platformAccountVO.blance;
                    this.optionss= this.platformAccountVO.financeAccounts;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },

            async initFormParam(){
                let param ={companyId:userInfo().companyId,consumeType:2,accType:3};
                const res = await findPaymentAccountByCompany(param);
                if (res.isSuccess == true) {

                    this.platformAccountVO = res.result;
                    this.accountFee = this.platformAccountVO.blance;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }

            },

            //支付宝充值
            async prewalletRecharge() {
                let  payType = this.payType;
                let paymentAmount=this.radio2;
                let companyId = userInfo().companyId;
                if(paymentAmount==''&&this.rechargeInput==''){
                    this.$message({
                        type: 'error',
                        message: '请选择充值金额!'
                    });
                    return
                }
                if(this.rechargeInput != '' && (this.rechargeInput>999999999 || this.rechargeInput<1)){
                	this.$message({
                        type: 'error',
                        message: '充值金额只能在1-999999999之间!'
                    });
                    return
                }
                if(paymentAmount==0||paymentAmount=='0'||paymentAmount==''){
                     paymentAmount = this.rechargeInput;
                }


                window.location.href="/wallet/api/recharge?payType="+payType+"&paymentAmount="+paymentAmount+"&companyId="+companyId;
            },

            //银行卡充值
            async preBankCardwalletRecharge() {
                let  payType = this.payType;
                let paymentAmount=this.radio2;
                let companyId = userInfo().companyId;
                if(paymentAmount==''&&this.rechargeInput==''){
                    this.$message({type:'error',message:'请选择充值金额!'});
                    return
                }
                if(this.rechargeInput != '' && (this.rechargeInput>999999999 || this.rechargeInput<1)){
                	this.$message({
                        type: 'error',
                        message: '充值金额只能在1-999999999之间!'
                    });
                    return
                }
                if(this.value2==''){
                    this.$message({type:'error',message:'请选择打款的银行卡号!'});
                    return
                }
                if(this.payBankAccount==''){
                    this.$message({type:'error',message:'请填写您的汇款卡号!'});
                    return
                }
                if(this.flowNo==''){
                    this.$message({type:'error',message:'请您的交易流水号!'});
                    return
                }
                if(paymentAmount==0||paymentAmount=='0'||paymentAmount==''){
                    paymentAmount = this.rechargeInput;
                }

                let  param = {
                    "inFee":paymentAmount,
                    "accountType":"5",
                    "recordType":1,
                    "changeFee":paymentAmount,
                    "freezed":paymentAmount,
                    "isOnlineRecord":0,
                    "companyId":userInfo().companyId

                };
                const res = await walletRecharge(param);
                if(res.isSuccess == true){
                    this.$message({type:'success',message:'充值信息已经提交，请等待审核!'});
                }else{
                    this.$message({type:'error',message:'系统异常，请联系管理员!'});
                }
//                private String flowNo;//流水号
//                private String financeItemCode;//财务类目代码  01
//                private Double inFee;//借方金额
//                private Double outFee;//贷方金额
//                private String ownerAccountId;//上线为钱包账户 ，线下为线下账户
//                private String otherAccountId;//对方账户   充值、提现 、系统操作 为 平台账户， 转账为转账目标的钱包账户  ，线下为线下目标账户
//                private String memo;//备注
//                private String orderId;//订单ID，可以为空
//                private String financeCertId;//财务凭证ID
//                private String companyId;//公司ID
//                private Byte optType;//操作类型
//                private String accountType;//账户类型   交易账户 01 余额   02 金币 账户 03 支付宝 04微信 05 银行卡 06 其他
//                private String otherAccountType;//对方账户账户类型   交易账户 01 余额   02 金币 账户 03 支付宝 04微信 05 银行卡 06 其他
//                private Byte recordType;//流水类型  01 充值 02 提现 03 转账   04 系统操作
//                private Double changeFee;//交易金额
//                private Double freezed;//冻结金额
//                private Byte stutas; // 审核状态  01 待审核 02  审核中 03 审核成功 04 审核失败 05 状态未知，异常
//                private Byte isOnlineRecord; // 是否线上流水
//                private String  otherCompanyId; //转账对方公司id。
            },
            //充值
            async walletRecharge(accountType) {

                let  param = {
                    "inFee":this.radio2,
                    "accountType":accountType,
                    "recordType":1,
                    "changeFee":this.radio2,
                    "freezed":this.radio2,
                    "companyId":userInfo().companyId
                };

                if(this.rechargeInput!=''){
                    param.inFee =this.rechargeInput;
                }
                const res = await walletRecharge(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '充值成功!'
                    });

                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },

            changedFee(ev){
              if(ev==0){
                  this.inputDisable = false;
              }else{
                  this.inputDisable = true;
              }

            },

            //提现
            async walletOutcash() {
                if(this.outFeeNum<50){
                    this.$message({type:'error',message:'提现失败,提现金额必须大于等于50元!'});
                    return;
                }
                if(this.value1=''){
                    this.$message({type:'error',message:'提现失败,请选择提现账户,如没有提现账户请在账户管理进行设置!'});
                    return;
                }

                if(this.outCashMobileCode=''){
                    this.$message({type:'error',message:'提现失败，短信验证码不能为空!'});
                    return;
                }


                this.optionss.forEach((obj)=>{
                    if(obj.accoutNumber==this.value1){
                        this.reciveAccountType = obj.accType
                        return
                    }
                })
                let  param = {
                    "outFee":this.outFeeNum,
                    "changeFee":this.outFeeNum,
                    "accountType":this.reciveAccountType ,
					"companyId":userInfo().companyId,
					"reciveAccountId":this.value1,
                    "optType":"",
                    "recordType":2
                };
//                if(this.rechargeInput!=''){
//                    param.inFee =this.rechargeInput;
//                }
                const res = await walletOutcash(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '提现成功!'
                    });

                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            //转账
            async walletFeeforword() {

                let  param = {
                    "inFee":this.radio2,
                    "accountType":"1",
                    "recordType":1,
                    "changeFee":'',
                    "freezed":''
                };

                if(this.rechargeInput!=''){
                    param.inFee =this.rechargeInput;
                }
                const res = await walletFeeforword(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '充值成功!'
                    });

                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            redirectPage(page){
                this.$router.push(page)
            },

            //查询平台银行卡
            async queryAccountBankCard() {
//                {
//                    value: '1',
//                        label: '网银 卡号62220120268263256（王宝强-建设银行）'
//                }
                let param ={
                    "pageSize":10,
                    "pageIndex":1,
                    "companyId":userInfo().companyId
                }

                const res = await findPaymentAccountForCustomer(param);
                if (res.isSuccess == true) {
                    this.option2 = res.result.data.results;
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }
            },
            async toSendMsg(mobile){
                if(mobile==undefined||mobile==''){
                    this.$message({type: 'error', message: '您未设置安全手机号，不可以进行操作!'});
                    return ;
                }
                var reg = /^1[3|4|5|7|8][0-9]{9}$/; //验证规则
                var flag = reg.test(mobile);
                if(!flag)return false;
                this.$refs.timebtn.send();
                return true;
            },

        }


    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/remainingSum';
</style>
