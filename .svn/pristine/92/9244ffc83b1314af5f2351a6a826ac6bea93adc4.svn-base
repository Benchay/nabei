<template>
    <div class="fillcontain">
        <ul :class="[identity ==1 ?'stallShareMenu':identity ==2 ?'sellerShareMenu':'']">
            <li class="ListMenu">
                <router-link :to='{path:"/financialManagement"}'>账户总览</router-link>
            </li>
            <li>
                <router-link :to='{path:"/financialManagement2"}'>财务交易记录</router-link>
            </li>
            <li>
                <router-link :to='{path:"/accountSetting"}'>账户设置</router-link>
            </li>
        </ul>
        <div class="otherManagement">
            <router-link :to='{path:"/financialManagement"}' :class="[identity ==1 ?'comeBack':identity ==2 ?'comeBack2':'']" class="right">返回</router-link>

            <el-col class="flex otherList">
                <el-col :span="2" class="bankTitle">银行卡</el-col>
                <el-col :span="22" class="bankCard">
                    <ul class="flex">
                        <li class="flex"  v-for="item in bank" >
                            <img src="../image/banklogo.png" alt="">
                            <div class="tit">
                                <p>{{item.name}}</p>
                                <p>{{item.account |toTel2}}</p>
                            </div>
                            <img  class="delete" src="../image/rdelete03.png" alt=""  @click="handleDelAccount(5,item.id)">
                        </li>
                        <li class="flex addBank"  @click="dialogBank = true,addBank=false">
                            <img src="../image/add.png" alt="">
                            <div>
                                <a href="javascript:void(0);">添加银行卡</a>
                            </div>
                        </li>
                    </ul>

                </el-col>
            </el-col>
            <el-col class="flex otherList">
                <el-col :span="2" class="bankTitle">微信</el-col>
                <el-col :span="22" class="bankCard">
                    <ul class="flex">
                        <li class="flex"  v-for="item in wechat" v-show="wechat.length > 0">
                            <img src="../image/bweixin03.png" alt="">
                            <div class="tit">
                                <p>微信</p>
                                <p id="wechat">{{item.account |toTel}}</p>
                            </div>
                            <img  class="delete" src="../image/rdelete03.png" alt=""  @click="handleDelAccount(4,item.id)">
                        </li>
                        <li class="flex addBank"  v-show="wechat.length < 1"  @click="dialogWechat = true">
                            <img src="../image/add.png" alt="">
                            <div>
                                <a href="javascript:void(0);">添加微信</a>
                            </div>
                        </li>
                    </ul>
                </el-col>
            </el-col>
            <el-col class="flex otherList">
                <el-col :span="2" class="bankTitle">支付宝</el-col>
                <el-col :span="22" class="bankCard">
                    <ul class="flex">
                        <li class="flex" v-for="item in alipay" v-show="alipay.length > 0">
                            <img src="../image/bzf04.png" alt="">
                            <div class="tit">
                                <p>支付宝</p>
                                <p id="phone">{{item.account |toTel}}</p>
                            </div>
                            <img  class="delete" src="../image/rdelete03.png" alt="" @click="handleDelAccount(3,item.id)">
                        </li>
                        <li class="flex addBank" v-show="alipay.length < 1" @click="dialogalipay = true">
                            <img src="../image/add.png" alt="">
                            <div>
                                <a href="javascript:void(0);">添加支付宝</a>
                            </div>
                        </li>
                    </ul>
                </el-col>
            </el-col>
        </div>
        <el-dialog
            title="添加银行卡"
            :visible.sync="dialogBank"
            size="small">
            <div class="dialogAddBank">
                <ul>
                    <li v-for="bank in banks" @click="addBank =true" class="flex2">
                        <el-button @click="selectBankType(bank.bankType,bank.bankName)">
                            <div class="flex2">
                                <img :src="bank.pic" alt="">
                                <!--<p>{{bank.name}}</p>-->
                            </div>
                        </el-button>
                    </li>
                    <li @click="addBank =true" class="flex2">
                        <el-button>
                            <div class="flex2">
                                +添加银行卡
                            </div>
                        </el-button>
                    </li>
                </ul>
            </div>
            <div class="dialogZH" v-show="addBank">
                <el-col :span="11" class="flex">
                    <el-col :span="5" class="ZHtitle">银行名称：</el-col>
                    <el-col :span="19"><el-input v-model="accountNo" placeholder="请输入银行名称"></el-input></el-col>
                </el-col>
                <el-col :span="13" class="flex">
                    <el-col :span="7" class="ZHtitle">户名：</el-col>
                    <el-col :span="17"><el-input v-model="accountUserName" placeholder="请输入户主真实姓名" maxlength="30"></el-input></el-col>
                </el-col>
                <el-col :span="11" class="flex">
                    <el-col :span="5" class="ZHtitle">卡号：</el-col>
                    <el-col :span="19"><el-input v-model="accountNo" placeholder="请输入银行卡卡号"></el-input></el-col>
                </el-col>
                <el-col :span="13" class="flex">
                    <el-col :span="7" class="ZHtitle">银行卡开户行：</el-col>
                    <el-col :span="17"><el-input v-model="accountBankName" placeholder="请输入银行卡开户行" maxlength="60"></el-input></el-col>
                </el-col>
            </div>
            <el-col :span="24" slot="footer" class="dialog-footer flex2" style="padding: 10px 0 20px 0;"
                    :class="[identity ==1 ?'stallContent':identity ==2 ?'sellerContent':'']">
                <el-button @click="handleBindAccount(5)" class="buttonColorFM">确定添加</el-button>
                <el-button @click="dialogBank = false" class="buttonCancel">取 消</el-button>
              </el-col>
        </el-dialog>
        <el-dialog
            title="添加微信"
            :visible.sync="dialogWechat"
            size="tiny">
            <div class="dialogZH1">
                <el-col :span="24">
                    <el-col :span="7">微信帐号：</el-col>
                    <el-col :span="16">
                        <el-input v-model="accountNo" placeholder="请输入微信帐号" size="small" maxlength="30"></el-input>
                        <p class="wechatTip">{{weixintip}}</p>
                    </el-col>
                </el-col>
                <el-col :span="24">
                    <el-col :span="7">微信用户名：</el-col>
                    <el-col :span="16"><el-input v-model="accountUserName" placeholder="请输入微信用户名" size="small" maxlength="30"></el-input></el-col>
                </el-col>
                <el-col :span="24">
                    <el-col :span="7">微信收款码：</el-col>
                    <el-col :span="16">
                        <el-upload
                            class="avatar-uploader"
                            action="https://jsonplaceholder.typicode.com/posts/"
                            :show-file-list="false"
                            :on-success="handleAvatarSuccess"
                            :before-upload="beforeAvatarUpload">
                            <img v-if="imageUrl" :src="imageUrl" class="avatar">
                            <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                        </el-upload>
                    </el-col>
                </el-col>
            </div>
            <span slot="footer" class="dialog-footer">
    <el-button @click="dialogWechat = false">取消添加</el-button>
    <el-button type="primary" @click="handleBindAccount(4)">确定添加</el-button>
  </span>
        </el-dialog>
        <el-dialog
            title="添加支付宝"
            :visible.sync="dialogalipay"
            size="tiny">
            <div class="dialogZH1">
                <el-col :span="24">
                    <el-col :span="7">支付宝帐号：</el-col>
                    <el-col :span="16">
                        <el-input v-model="accountNo" placeholder="请输入支付宝帐号" size="small" maxlength="30"></el-input>
                        <p class="wechatTip">*请输入正确支付宝帐号，并确认无误。</p>
                    </el-col>
                </el-col>
                <el-col :span="24">
                    <el-col :span="7">支付宝用户名：</el-col>
                    <el-col :span="16"><el-input v-model="accountUserName" placeholder="请输入支付宝用户名" size="small" maxlength="30"></el-input></el-col>
                </el-col>
                <el-col :span="24">
                    <el-col :span="7">支付宝收款码：</el-col>
                    <el-col :span="16">
                        <el-upload
                            class="avatar-uploader"
                            action="https://jsonplaceholder.typicode.com/posts/"
                            :show-file-list="false"
                            :on-success="handleAvatarSuccess"
                            :before-upload="beforeAvatarUpload">
                            <img v-if="imageUrl" :src="imageUrl" class="avatar">
                            <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                        </el-upload>
                    </el-col>
                </el-col>
            </div>
            <span slot="footer" class="dialog-footer">
    <el-button @click="dialogalipay = false">取消添加</el-button>
    <el-button type="primary" @click="handleBindAccount(3)">确定添加</el-button>
  </span>
        </el-dialog>
    </div>
</template>

<script>
    import {queryPlatformAccount,bindingFinanceAccount,unbindingFinanceAccount} from '@/api/getData'
    import {userInfo,getStore,setStore} from  '../config/mUtils'
    import {isNullObject,getCompanyType} from  '../utils/common'

    export default {
        data() {
            return {
                //1为档口、2为卖家身份
                identity:1,
                weixintip:'*请输入正确微信帐号，并确认无误。',
                addBank:false,
                imageUrl:'',
                dialogBank:false,
                dialogWechat:false,
                dialogalipay:false,
                input:'',
                alipay:[],
                wechat:[],
                accountUserName:'',
                accountNo:'',
                accountBankName:'',
                bank:[],
                banks:[{name:'中国农业银行',pic:require('../image/bank_abc.png'),bankType:3},
                    {name:'中国银行',pic:require('../image/bank_boc.png'),bankType:1},
                    {name:'中国建设银行',pic:require('../image/bank_ccb.png'),bankType:4},
                    {name:'中国招商银行',pic:require('../image/bank_cmbc.png'),bankType:6},
                    {name:'中国工商银行',pic:require('../image/bank_icbc.png'),bankType:2},
                    {name:'中国邮政银行',pic:require('../image/bank_posta.png'),bankType:15},
                    {name:'中国交通银行',pic:require('../image/bank_jt.png'),bankType:5},
                    {name:'中国华夏银行',pic:require('../image/bank_hx.png'),bankType:6},
                    {name:'中国民生银行',pic:require('../image/bank_ms.png'),bankType:0},
                    {name:'中国光大银行',pic:require('../image/bank_gd.png'),bankType:0},
                    {name:'兴业银行',pic:require('../image/bank_xy.png'),bankType:0},
                    {name:'浦发银行',pic:require('../image/bank_pf.png'),bankType:0},
                    {name:'中兴银行',pic:require('../image/bank_zx.png'),bankType:0},
                    {name:'上海银行',pic:require('../image/bank_sh.png'),bankType:0},
                    {name:'中国平安银行',pic:require('../image/bank_pa.png'),bankType:0},
                    {name:'中国信合银行',pic:require('../image/bank_gd.png'),bankType:0},
                    {name:'中国广发银行',pic:require('../image/bank_gf.png'),bankType:0},
                ],
                accountBankType:''
            }
        },

        mounted(){
            this.identity =getCompanyType(getStore("curCompany"));
            this.loadAccuntInfo();

        },
        methods: {
            handleAvatarSuccess(res, file) {
                this.imageUrl = URL.createObjectURL(file.raw);
            },
            beforeAvatarUpload(file) {
                const isJPG = file.type === 'image/jpeg';
                const isLt2M = file.size / 1024 / 1024 < 2;

//                if (!isJPG) {
//                    this.$message.error('上传图片只能是 JPG 格式!');
//                }
                if (!isLt2M) {
                    this.$message.error('上传图片大小不能超过 2MB!');
                }
                return isJPG && isLt2M;
            },
            async  handleDelAccount (accountType,id,confirm){
                if(confirm==undefined){
                await  this.$confirm('是否确认解除该绑定?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    this.handleDelAccount(accountType,id,true);
                }).catch(() => {

                });
                }
                 if(!confirm){
                    return ;
                 }
                switch(accountType){
                    case 3:
                        let  acc_index =  this.alipay.findIndex(function(value, index){
                            return value.id == id;
                        })
                        if(acc_index>-1){
                            this.alipay.splice(acc_index,1);
                        }
                    case 4:
                        let  acc_index_1 =  this.wechat.findIndex(function(value, index){
                            return value.id == id;
                        })
                        if(acc_index_1>-1){
                            this.wechat.splice(acc_index_1,1);
                        }
                    case 5:
                        let  acc_index_2 =  this.bank.findIndex(function(value, index){
                            return value.id == id;
                        })
                        if(acc_index_2>-1){
                            this.bank.splice(acc_index_2,1);
                        }
                }
                let param={id:id}
                const   res = await   unbindingFinanceAccount(param);

                if (res.isSuccess == true) {
                    this.$message({type: 'success',     message: '删除成功!' });
                }else{
                    this.$message({type: 'error',     message: res.errorMsg });
                }
            },

            async handleBindAccount (accountType){

                let param ={
                    name:this.accountUserName,
                    accType:accountType,
                    bankType:this.accountBankType,
                    accoutNumber:this.accountNo,
                    companyId:userInfo().companyId
                }
                this.createAccount (param);


            },
            async loadAccuntInfo(){

                let param ={companyId:userInfo().companyId};
                const res = await queryPlatformAccount(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '加载数据成功'
                    });

                    this.alipay =this.getAccByType (3, res.result.financeAccounts);
                    this.wechat =this.getAccByType (4, res.result.financeAccounts);
                    this.bank =this.getAccByType (5, res.result.financeAccounts);

                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }

            },

            async createAccount(param){
                if(param.name==undefined||param.name==''){
                    this.$message({type: 'error',message: '请填写账户名!'});
                    return ;
                }
                if(param.accoutNumber==undefined||param.accoutNumber==''){
                    this.$message({type: 'error',message: '请填写账户号码!'});
                    return ;
                }
                const res = await bindingFinanceAccount(param);
                if (res.isSuccess == true) {
                    this.$message({
                        type: 'success',
                        message: '加载数据成功'
                    });
                    this.loadAccuntInfo();
                    this.restFields();

                    this.dialogBank=false;
                    this.dialogWechat=false;
                    this.dialogalipay=false;
                   // this.$route.router.push(this.$route.path);
                }else{
                    this.$message({
                        type: 'error',
                        message: res.errorMsg
                    });
                }

            },
            getAccByType(type,financeAccounts) {
                let results = [];
                for (var acc of financeAccounts) {
                    if(acc.accType==type){
                        let  tem ={};
                        tem.account = acc.accoutNumber;
                        tem.id = acc.id;
                        results.push(tem);

                    }
                }
                return results;
            },

            restFields() {
                this.accountUserName='';
                this.accountNo='';
                this.accountBankName=''
            },
            selectBankType(bankType,bankName){
                this.accountBankName =bankName;
                this.accountUserName =bankName;
                this.bankType = bankType
            }

        },
        filters: {
            toTel(str) {
                let start = str.slice(0, 3);
                let end = str.slice(-4);
                return `${start}****${end}`;
            },
            toTel2(str) {
                let start = str.slice(0, 0);
                let end = str.slice(-4);
                return `${start}**** **** **** ${end}`;
            }
        }
    }
</script>

<style lang="less">
    @import '../style/mixin';
    @import '../style/common';
    @import '../style/otherManagement';
</style>
